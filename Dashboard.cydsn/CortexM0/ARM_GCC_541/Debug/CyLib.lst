ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.10
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2021, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 122 0
  39              		@ sp needed
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 107 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 122 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 4


  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0u;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 284 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL0:
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  65              		.loc 1 294 0
  66 0000 0023     		movs	r3, #0
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  67              		.loc 1 296 0
  68 0002 3F20     		movs	r0, #63
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
  69              		.loc 1 284 0
  70 0004 30B5     		push	{r4, r5, lr}
  71              		.cfi_def_cfa_offset 12
  72              		.cfi_offset 4, -12
  73              		.cfi_offset 5, -8
  74              		.cfi_offset 14, -4
  75              		.loc 1 296 0
  76 0006 0C49     		ldr	r1, .L10
  77 0008 0C4C     		ldr	r4, .L10+4
  78              	.LVL1:
  79              	.L7:
  80 000a 0A68     		ldr	r2, [r1]
  81 000c 1D5D     		ldrb	r5, [r3, r4]
  82 000e 0240     		ands	r2, r0
  83 0010 AA42     		cmp	r2, r5
  84 0012 01D1     		bne	.L5
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  85              		.loc 1 298 0
  86 0014 0333     		adds	r3, r3, #3
  87              	.LVL2:
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
  88              		.loc 1 299 0
  89 0016 03E0     		b	.L6
  90              	.LVL3:
  91              	.L5:
 294:Generated_Source\PSoC4/CyLib.c ****             {
  92              		.loc 1 294 0 discriminator 2
  93 0018 0133     		adds	r3, r3, #1
  94              	.LVL4:
  95 001a 2E2B     		cmp	r3, #46
  96 001c F5D1     		bne	.L7
 293:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 8


  97              		.loc 1 293 0
  98 001e 2B3B     		subs	r3, r3, #43
  99              	.LVL5:
 100              	.L6:
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 101              		.loc 1 316 0
 102 0020 0749     		ldr	r1, .L10+8
 103 0022 084A     		ldr	r2, .L10+12
 104 0024 0868     		ldr	r0, [r1]
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 105              		.loc 1 323 0
 106              		@ sp needed
 316:Generated_Source\PSoC4/CyLib.c **** 
 107              		.loc 1 316 0
 108 0026 0240     		ands	r2, r0
 109 0028 0A60     		str	r2, [r1]
 321:Generated_Source\PSoC4/CyLib.c ****         #endif
 110              		.loc 1 321 0
 111 002a 074A     		ldr	r2, .L10+16
 112 002c 9B18     		adds	r3, r3, r2
 113              	.LVL6:
 114 002e 1B78     		ldrb	r3, [r3]
 115              	.LVL7:
 116 0030 064A     		ldr	r2, .L10+20
 117 0032 DBB2     		uxtb	r3, r3
 118 0034 1360     		str	r3, [r2]
 119              		.loc 1 323 0
 120 0036 30BD     		pop	{r4, r5, pc}
 121              	.L11:
 122              		.align	2
 123              	.L10:
 124 0038 2CFF0B40 		.word	1074528044
 125 003c 00000000 		.word	.LANCHOR0
 126 0040 00002240 		.word	1075970048
 127 0044 FFFFFFBF 		.word	-1073741825
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 9


 128 0048 CDF1FF0F 		.word	268431821
 129 004c 28FF0B40 		.word	1074528040
 130              		.cfi_endproc
 131              	.LFE4:
 132              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 133              		.section	.text.CySysClkImoStop,"ax",%progbits
 134              		.align	1
 135              		.global	CySysClkImoStop
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysClkImoStop, %function
 139              	CySysClkImoStop:
 140              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141              		.loc 1 139 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 10B5     		push	{r4, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 149              		.loc 1 141 0
 150 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 151              	.LVL8:
 148:Generated_Source\PSoC4/CyLib.c **** }
 152              		.loc 1 148 0
 153 0006 034A     		ldr	r2, .L13
 149:Generated_Source\PSoC4/CyLib.c **** 
 154              		.loc 1 149 0
 155              		@ sp needed
 148:Generated_Source\PSoC4/CyLib.c **** }
 156              		.loc 1 148 0
 157 0008 1368     		ldr	r3, [r2]
 158 000a 5B00     		lsls	r3, r3, #1
 159 000c 5B08     		lsrs	r3, r3, #1
 160 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 161              		.loc 1 149 0
 162 0010 10BD     		pop	{r4, pc}
 163              	.L14:
 164 0012 C046     		.align	2
 165              	.L13:
 166 0014 08010B40 		.word	1074462984
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	CySysClkImoStop, .-CySysClkImoStop
 170              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 171              		.align	1
 172              		.global	CySysClkImoGetWcoLock
 173              		.code	16
 174              		.thumb_func
 175              		.type	CySysClkImoGetWcoLock, %function
 176              	CySysClkImoGetWcoLock:
 177              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 10


 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 178              		.loc 1 340 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 183              		.loc 1 341 0
 184 0000 024B     		ldr	r3, .L16
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 185              		.loc 1 344 0
 186              		@ sp needed
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 187              		.loc 1 341 0
 188 0002 1868     		ldr	r0, [r3]
 189 0004 4000     		lsls	r0, r0, #1
 190 0006 C00F     		lsrs	r0, r0, #31
 191              		.loc 1 344 0
 192 0008 7047     		bx	lr
 193              	.L17:
 194 000a C046     		.align	2
 195              	.L16:
 196 000c 00002240 		.word	1075970048
 197              		.cfi_endproc
 198              	.LFE5:
 199              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 200              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 201              		.align	1
 202              		.global	CySysClkWriteHfclkDirect
 203              		.code	16
 204              		.thumb_func
 205              		.type	CySysClkWriteHfclkDirect, %function
 206              	CySysClkWriteHfclkDirect:
 207              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 11


 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 12


 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 13


 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 14


 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 15


 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 208              		.loc 1 585 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL9:
 213 0000 10B5     		push	{r4, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
 216              		.cfi_offset 14, -4
 217              		.loc 1 585 0
 218 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 219              		.loc 1 593 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL10:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 16


 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 222              		.loc 1 625 0
 223 0008 0723     		movs	r3, #7
 224 000a 0449     		ldr	r1, .L19
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 642:Generated_Source\PSoC4/CyLib.c **** }
 225              		.loc 1 642 0
 226              		@ sp needed
 625:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 227              		.loc 1 625 0
 228 000c 0A68     		ldr	r2, [r1]
 229 000e 9A43     		bics	r2, r3
 230              	.LVL11:
 636:Generated_Source\PSoC4/CyLib.c ****     }
 231              		.loc 1 636 0
 232 0010 2340     		ands	r3, r4
 233 0012 1343     		orrs	r3, r2
 234              	.LVL12:
 639:Generated_Source\PSoC4/CyLib.c **** 
 235              		.loc 1 639 0
 236 0014 0B60     		str	r3, [r1]
 641:Generated_Source\PSoC4/CyLib.c **** }
 237              		.loc 1 641 0
 238 0016 FFF7FEFF 		bl	CyExitCriticalSection
 239              	.LVL13:
 240              	.LVL14:
 241              		.loc 1 642 0
 242 001a 10BD     		pop	{r4, pc}
 243              	.L20:
 244              		.align	2
 245              	.L19:
 246 001c 00010B40 		.word	1074462976
 247              		.cfi_endproc
 248              	.LFE6:
 249              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 250              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 251              		.align	1
 252              		.global	CySysEnablePumpClock
 253              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 17


 254              		.thumb_func
 255              		.type	CySysEnablePumpClock, %function
 256              	CySysEnablePumpClock:
 257              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 258              		.loc 1 662 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL15:
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 0002 094B     		ldr	r3, .L25
 268 0004 094C     		ldr	r4, .L25+4
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 269              		.loc 1 664 0
 270 0006 C207     		lsls	r2, r0, #31
 271 0008 04D5     		bpl	.L22
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 272              		.loc 1 666 0
 273 000a 2268     		ldr	r2, [r4]
 274 000c 1968     		ldr	r1, [r3]
 275 000e 5206     		lsls	r2, r2, #25
 276 0010 0A43     		orrs	r2, r1
 277 0012 06E0     		b	.L24
 278              	.L22:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 279              		.loc 1 670 0
 280 0014 1A68     		ldr	r2, [r3]
 281 0016 1201     		lsls	r2, r2, #4
 282 0018 520F     		lsrs	r2, r2, #29
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 18


 283 001a 2260     		str	r2, [r4]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 284              		.loc 1 672 0
 285 001c 1968     		ldr	r1, [r3]
 286 001e 044A     		ldr	r2, .L25+8
 287 0020 0A40     		ands	r2, r1
 288              	.L24:
 289 0022 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 290              		.loc 1 686 0
 291              		@ sp needed
 292 0024 10BD     		pop	{r4, pc}
 293              	.L26:
 294 0026 C046     		.align	2
 295              	.L25:
 296 0028 08010B40 		.word	1074462984
 297 002c 00000000 		.word	.LANCHOR1
 298 0030 FFFFFFF1 		.word	-234881025
 299              		.cfi_endproc
 300              	.LFE7:
 301              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 302              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 303              		.align	1
 304              		.global	CySysClkGetSysclkSource
 305              		.code	16
 306              		.thumb_func
 307              		.type	CySysClkGetSysclkSource, %function
 308              	CySysClkGetSysclkSource:
 309              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 310              		.loc 1 699 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 19


 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 4, -8
 317              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 318              		.loc 1 703 0
 319 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 320              	.LVL16:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 321              		.loc 1 713 0
 322 0006 034B     		ldr	r3, .L28
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 323              		.loc 1 725 0
 324              		@ sp needed
 713:Generated_Source\PSoC4/CyLib.c **** 
 325              		.loc 1 713 0
 326 0008 1C68     		ldr	r4, [r3]
 327              	.LVL17:
 722:Generated_Source\PSoC4/CyLib.c **** 
 328              		.loc 1 722 0
 329 000a FFF7FEFF 		bl	CyExitCriticalSection
 330              	.LVL18:
 724:Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 724 0
 332 000e 0720     		movs	r0, #7
 333 0010 2040     		ands	r0, r4
 334              	.LVL19:
 335              		.loc 1 725 0
 336 0012 10BD     		pop	{r4, pc}
 337              	.L29:
 338              		.align	2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 20


 339              	.L28:
 340 0014 00010B40 		.word	1074462976
 341              		.cfi_endproc
 342              	.LFE8:
 343              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 344              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 345              		.align	1
 346              		.global	CySysClkWriteSysclkDiv
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteSysclkDiv, %function
 350              	CySysClkWriteSysclkDiv:
 351              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 352              		.loc 1 760 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              	.LVL20:
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 21


 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363              		.loc 1 760 0
 364 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 365              		.loc 1 763 0
 366 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 367              	.LVL21:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 368              		.loc 1 766 0
 369 0008 E104     		lsls	r1, r4, #19
 370 000a E024     		movs	r4, #224
 371              	.LVL22:
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 372              		.loc 1 767 0
 373 000c 054D     		ldr	r5, .L31
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 374              		.loc 1 766 0
 375 000e A403     		lsls	r4, r4, #14
 376              		.loc 1 767 0
 377 0010 2B68     		ldr	r3, [r5]
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 378              		.loc 1 766 0
 379 0012 054A     		ldr	r2, .L31+4
 380 0014 2140     		ands	r1, r4
 381 0016 1A40     		ands	r2, r3
 382 0018 0B00     		movs	r3, r1
 383 001a 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 384              		.loc 1 765 0
 385 001c 2B60     		str	r3, [r5]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 386              		.loc 1 770 0
 387 001e FFF7FEFF 		bl	CyExitCriticalSection
 388              	.LVL23:
 771:Generated_Source\PSoC4/CyLib.c **** }
 389              		.loc 1 771 0
 390              		@ sp needed
 391 0022 70BD     		pop	{r4, r5, r6, pc}
 392              	.L32:
 393              		.align	2
 394              	.L31:
 395 0024 00010B40 		.word	1074462976
 396 0028 FFFFC7FF 		.word	-3670017
 397              		.cfi_endproc
 398              	.LFE9:
 399              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 400              		.section	.text.CySysLvdDisable,"ax",%progbits
 401              		.align	1
 402              		.global	CySysLvdDisable
 403              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 22


 404              		.thumb_func
 405              		.type	CySysLvdDisable, %function
 406              	CySysLvdDisable:
 407              	.LFB12:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 23


 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 24


 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 25


 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 26


 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 27


1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 28


1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 29


1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 30


1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 31


1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 32


1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 33


1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 34


1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 35


1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 36


1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 37


1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000u) * (
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 38


1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < (uint32)CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 39


1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 40


1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 41


1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 42


1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 43


1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 44


2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 45


2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 46


2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 47


2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 48


2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 49


2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 50


2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 51


2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 52


2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 53


2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 54


2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 55


2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 408              		.loc 1 2693 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 413              		.loc 1 2694 0
 414 0000 0221     		movs	r1, #2
 415 0002 054A     		ldr	r2, .L34
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
 416              		.loc 1 2696 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 56


 417              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 418              		.loc 1 2694 0
 419 0004 1368     		ldr	r3, [r2]
 420 0006 8B43     		bics	r3, r1
 421 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 422              		.loc 1 2695 0
 423 000a 044A     		ldr	r2, .L34+4
 424 000c 0139     		subs	r1, r1, #1
 425 000e 1368     		ldr	r3, [r2]
 426 0010 8B43     		bics	r3, r1
 427 0012 1360     		str	r3, [r2]
 428              		.loc 1 2696 0
 429 0014 7047     		bx	lr
 430              	.L35:
 431 0016 C046     		.align	2
 432              	.L34:
 433 0018 08000B40 		.word	1074462728
 434 001c 18000B40 		.word	1074462744
 435              		.cfi_endproc
 436              	.LFE12:
 437              		.size	CySysLvdDisable, .-CySysLvdDisable
 438              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 439              		.align	1
 440              		.global	CySysLvdGetInterruptSource
 441              		.code	16
 442              		.thumb_func
 443              		.type	CySysLvdGetInterruptSource, %function
 444              	CySysLvdGetInterruptSource:
 445              	.LFB13:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 446              		.loc 1 2711 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 451              		.loc 1 2712 0
 452 0000 024B     		ldr	r3, .L37
2713:Generated_Source\PSoC4/CyLib.c ****     }
 453              		.loc 1 2713 0
 454              		@ sp needed
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 57


2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 455              		.loc 1 2712 0
 456 0002 1868     		ldr	r0, [r3]
 457 0004 0223     		movs	r3, #2
 458 0006 1840     		ands	r0, r3
 459              		.loc 1 2713 0
 460 0008 7047     		bx	lr
 461              	.L38:
 462 000a C046     		.align	2
 463              	.L37:
 464 000c 04000B40 		.word	1074462724
 465              		.cfi_endproc
 466              	.LFE13:
 467              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 468              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 469              		.align	1
 470              		.global	CySysLvdClearInterrupt
 471              		.code	16
 472              		.thumb_func
 473              		.type	CySysLvdClearInterrupt, %function
 474              	CySysLvdClearInterrupt:
 475              	.LFB14:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 476              		.loc 1 2727 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 481              		.loc 1 2728 0
 482 0000 0222     		movs	r2, #2
 483 0002 014B     		ldr	r3, .L40
2729:Generated_Source\PSoC4/CyLib.c ****     }
 484              		.loc 1 2729 0
 485              		@ sp needed
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 486              		.loc 1 2728 0
 487 0004 1A60     		str	r2, [r3]
 488              		.loc 1 2729 0
 489 0006 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
 493 0008 04000B40 		.word	1074462724
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 58


 494              		.cfi_endproc
 495              	.LFE14:
 496              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 497              		.section	.text.CySysGetResetReason,"ax",%progbits
 498              		.align	1
 499              		.global	CySysGetResetReason
 500              		.code	16
 501              		.thumb_func
 502              		.type	CySysGetResetReason, %function
 503              	CySysGetResetReason:
 504              	.LFB15:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2753 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL24:
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 511              		.loc 1 2756 0
 512 0000 1923     		movs	r3, #25
 513 0002 0200     		movs	r2, r0
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 514              		.loc 1 2757 0
 515 0004 0249     		ldr	r1, .L43
2756:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 516              		.loc 1 2756 0
 517 0006 1A40     		ands	r2, r3
 518              	.LVL25:
 519              		.loc 1 2757 0
 520 0008 0868     		ldr	r0, [r1]
 521              	.LVL26:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 59


2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 522              		.loc 1 2762 0
 523              		@ sp needed
2761:Generated_Source\PSoC4/CyLib.c **** }
 524              		.loc 1 2761 0
 525 000a 1840     		ands	r0, r3
 526              	.LVL27:
2759:Generated_Source\PSoC4/CyLib.c **** 
 527              		.loc 1 2759 0
 528 000c 0A60     		str	r2, [r1]
 529              		.loc 1 2762 0
 530 000e 7047     		bx	lr
 531              	.L44:
 532              		.align	2
 533              	.L43:
 534 0010 00030B40 		.word	1074463488
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	CySysGetResetReason, .-CySysGetResetReason
 538              		.section	.text.CyDisableInts,"ax",%progbits
 539              		.align	1
 540              		.global	CyDisableInts
 541              		.code	16
 542              		.thumb_func
 543              		.type	CyDisableInts, %function
 544              	CyDisableInts:
 545              	.LFB16:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 546              		.loc 1 2776 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 60


 551              		.loc 1 2783 0
 552 0000 0122     		movs	r2, #1
2780:Generated_Source\PSoC4/CyLib.c **** 
 553              		.loc 1 2780 0
 554 0002 024B     		ldr	r3, .L46
 555              		.loc 1 2783 0
 556 0004 5242     		rsbs	r2, r2, #0
2780:Generated_Source\PSoC4/CyLib.c **** 
 557              		.loc 1 2780 0
 558 0006 1868     		ldr	r0, [r3]
 559              	.LVL28:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 560              		.loc 1 2786 0
 561              		@ sp needed
2783:Generated_Source\PSoC4/CyLib.c **** 
 562              		.loc 1 2783 0
 563 0008 1A60     		str	r2, [r3]
 564              		.loc 1 2786 0
 565 000a 7047     		bx	lr
 566              	.L47:
 567              		.align	2
 568              	.L46:
 569 000c 80E100E0 		.word	-536813184
 570              		.cfi_endproc
 571              	.LFE16:
 572              		.size	CyDisableInts, .-CyDisableInts
 573              		.section	.text.CyEnableInts,"ax",%progbits
 574              		.align	1
 575              		.global	CyEnableInts
 576              		.code	16
 577              		.thumb_func
 578              		.type	CyEnableInts, %function
 579              	CyEnableInts:
 580              	.LFB17:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 581              		.loc 1 2799 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL29:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 587              		.loc 1 2800 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 61


 588 0000 014B     		ldr	r3, .L49
2801:Generated_Source\PSoC4/CyLib.c **** }
 589              		.loc 1 2801 0
 590              		@ sp needed
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 591              		.loc 1 2800 0
 592 0002 1860     		str	r0, [r3]
 593              		.loc 1 2801 0
 594 0004 7047     		bx	lr
 595              	.L50:
 596 0006 C046     		.align	2
 597              	.L49:
 598 0008 00E100E0 		.word	-536813312
 599              		.cfi_endproc
 600              	.LFE17:
 601              		.size	CyEnableInts, .-CyEnableInts
 602              		.section	.text.CyIntSetSysVector,"ax",%progbits
 603              		.align	1
 604              		.global	CyIntSetSysVector
 605              		.code	16
 606              		.thumb_func
 607              		.type	CyIntSetSysVector, %function
 608              	CyIntSetSysVector:
 609              	.LFB18:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
 610              		.loc 1 2824 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615              	.LVL30:
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 62


 616              		.loc 1 2828 0
 617 0000 0F28     		cmp	r0, #15
 618 0002 00D9     		bls	.L52
 619              	.LVL31:
 620              	.LBB30:
 621              	.LBB31:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 63


2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 64


2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2984:Generated_Source\PSoC4/CyLib.c **** }
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 65


2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
3003:Generated_Source\PSoC4/CyLib.c **** }
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3018:Generated_Source\PSoC4/CyLib.c **** }
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3032:Generated_Source\PSoC4/CyLib.c **** }
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
3047:Generated_Source\PSoC4/CyLib.c **** }
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 66


3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 622              		.loc 1 3069 0
 623              		.syntax divided
 624              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 625 0004 01BE     		    bkpt    1
 626              	@ 0 "" 2
 627              	.LVL32:
 628              		.thumb
 629              		.syntax unified
 630              	.L52:
 631              	.LBE31:
 632              	.LBE30:
2831:Generated_Source\PSoC4/CyLib.c **** 
 633              		.loc 1 2831 0
 634 0006 8023     		movs	r3, #128
 635 0008 8000     		lsls	r0, r0, #2
 636              	.LVL33:
 637 000a 9B05     		lsls	r3, r3, #22
 638 000c C318     		adds	r3, r0, r3
 639 000e 1868     		ldr	r0, [r3]
 640              	.LVL34:
2837:Generated_Source\PSoC4/CyLib.c **** 
 641              		.loc 1 2837 0
 642              		@ sp needed
2834:Generated_Source\PSoC4/CyLib.c **** 
 643              		.loc 1 2834 0
 644 0010 1960     		str	r1, [r3]
2837:Generated_Source\PSoC4/CyLib.c **** 
 645              		.loc 1 2837 0
 646 0012 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE18:
 649              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 650              		.section	.text.CyIntGetSysVector,"ax",%progbits
 651              		.align	1
 652              		.global	CyIntGetSysVector
 653              		.code	16
 654              		.thumb_func
 655              		.type	CyIntGetSysVector, %function
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 67


 656              	CyIntGetSysVector:
 657              	.LFB19:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 658              		.loc 1 2858 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL35:
2861:Generated_Source\PSoC4/CyLib.c **** 
 664              		.loc 1 2861 0
 665 0000 0F28     		cmp	r0, #15
 666 0002 00D9     		bls	.L54
 667              	.LVL36:
 668              	.LBB32:
 669              	.LBB33:
 670              		.loc 1 3069 0
 671              		.syntax divided
 672              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 673 0004 01BE     		    bkpt    1
 674              	@ 0 "" 2
 675              	.LVL37:
 676              		.thumb
 677              		.syntax unified
 678              	.L54:
 679              	.LBE33:
 680              	.LBE32:
2863:Generated_Source\PSoC4/CyLib.c **** }
 681              		.loc 1 2863 0
 682 0006 8023     		movs	r3, #128
 683 0008 8000     		lsls	r0, r0, #2
 684              	.LVL38:
 685 000a 9B05     		lsls	r3, r3, #22
 686 000c C018     		adds	r0, r0, r3
 687 000e 0068     		ldr	r0, [r0]
2864:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2864 0
 689              		@ sp needed
 690 0010 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE19:
 693              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 694              		.section	.text.CyIntSetVector,"ax",%progbits
 695              		.align	1
 696              		.global	CyIntSetVector
 697              		.code	16
 698              		.thumb_func
 699              		.type	CyIntSetVector, %function
 700              	CyIntSetVector:
 701              	.LFB20:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 702              		.loc 1 2880 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL39:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 68


2884:Generated_Source\PSoC4/CyLib.c **** 
 708              		.loc 1 2884 0
 709 0000 1F28     		cmp	r0, #31
 710 0002 00D9     		bls	.L56
 711              	.LVL40:
 712              	.LBB34:
 713              	.LBB35:
 714              		.loc 1 3069 0
 715              		.syntax divided
 716              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 717 0004 01BE     		    bkpt    1
 718              	@ 0 "" 2
 719              	.LVL41:
 720              		.thumb
 721              		.syntax unified
 722              	.L56:
 723              	.LBE35:
 724              	.LBE34:
2887:Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2887 0
 726 0006 034B     		ldr	r3, .L57
 727 0008 8000     		lsls	r0, r0, #2
 728              	.LVL42:
 729 000a C318     		adds	r3, r0, r3
 730 000c 1868     		ldr	r0, [r3]
 731              	.LVL43:
2893:Generated_Source\PSoC4/CyLib.c **** 
 732              		.loc 1 2893 0
 733              		@ sp needed
2890:Generated_Source\PSoC4/CyLib.c **** 
 734              		.loc 1 2890 0
 735 000e 1960     		str	r1, [r3]
2893:Generated_Source\PSoC4/CyLib.c **** 
 736              		.loc 1 2893 0
 737 0010 7047     		bx	lr
 738              	.L58:
 739 0012 C046     		.align	2
 740              	.L57:
 741 0014 40000020 		.word	536870976
 742              		.cfi_endproc
 743              	.LFE20:
 744              		.size	CyIntSetVector, .-CyIntSetVector
 745              		.section	.text.CyIntGetVector,"ax",%progbits
 746              		.align	1
 747              		.global	CyIntGetVector
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntGetVector, %function
 751              	CyIntGetVector:
 752              	.LFB21:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 753              		.loc 1 2908 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758              	.LVL44:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 69


2911:Generated_Source\PSoC4/CyLib.c **** 
 759              		.loc 1 2911 0
 760 0000 1F28     		cmp	r0, #31
 761 0002 00D9     		bls	.L60
 762              	.LVL45:
 763              	.LBB36:
 764              	.LBB37:
 765              		.loc 1 3069 0
 766              		.syntax divided
 767              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 768 0004 01BE     		    bkpt    1
 769              	@ 0 "" 2
 770              	.LVL46:
 771              		.thumb
 772              		.syntax unified
 773              	.L60:
 774              	.LBE37:
 775              	.LBE36:
2913:Generated_Source\PSoC4/CyLib.c **** }
 776              		.loc 1 2913 0
 777 0006 024B     		ldr	r3, .L61
 778 0008 8000     		lsls	r0, r0, #2
 779              	.LVL47:
 780 000a C018     		adds	r0, r0, r3
 781 000c 0068     		ldr	r0, [r0]
2914:Generated_Source\PSoC4/CyLib.c **** 
 782              		.loc 1 2914 0
 783              		@ sp needed
 784 000e 7047     		bx	lr
 785              	.L62:
 786              		.align	2
 787              	.L61:
 788 0010 40000020 		.word	536870976
 789              		.cfi_endproc
 790              	.LFE21:
 791              		.size	CyIntGetVector, .-CyIntGetVector
 792              		.section	.text.CyIntSetPriority,"ax",%progbits
 793              		.align	1
 794              		.global	CyIntSetPriority
 795              		.code	16
 796              		.thumb_func
 797              		.type	CyIntSetPriority, %function
 798              	CyIntSetPriority:
 799              	.LFB22:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 800              		.loc 1 2927 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL48:
 805 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 806              		.cfi_def_cfa_offset 24
 807              		.cfi_offset 3, -24
 808              		.cfi_offset 4, -20
 809              		.cfi_offset 5, -16
 810              		.cfi_offset 6, -12
 811              		.cfi_offset 7, -8
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 70


 812              		.cfi_offset 14, -4
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 813              		.loc 1 2927 0
 814 0002 0400     		movs	r4, r0
 815 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 816              		.loc 1 2932 0
 817 0006 0329     		cmp	r1, #3
 818 0008 00D9     		bls	.L64
 819              	.LVL49:
 820              	.LBB38:
 821              	.LBB39:
 822              		.loc 1 3069 0
 823              		.syntax divided
 824              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 825 000a 01BE     		    bkpt    1
 826              	@ 0 "" 2
 827              	.LVL50:
 828              		.thumb
 829              		.syntax unified
 830              	.L64:
 831              	.LBE39:
 832              	.LBE38:
2933:Generated_Source\PSoC4/CyLib.c **** 
 833              		.loc 1 2933 0
 834 000c 1F2C     		cmp	r4, #31
 835 000e 00D9     		bls	.L65
 836              	.LVL51:
 837              	.LBB40:
 838              	.LBB41:
 839              		.loc 1 3069 0
 840              		.syntax divided
 841              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 842 0010 01BE     		    bkpt    1
 843              	@ 0 "" 2
 844              	.LVL52:
 845              		.thumb
 846              		.syntax unified
 847              	.L65:
 848              	.LBE41:
 849              	.LBE40:
2935:Generated_Source\PSoC4/CyLib.c **** 
 850              		.loc 1 2935 0
 851 0012 0327     		movs	r7, #3
 852 0014 2500     		movs	r5, r4
 853 0016 3D40     		ands	r5, r7
 854 0018 BD40     		lsls	r5, r5, r7
 855 001a 0635     		adds	r5, r5, #6
 856              	.LVL53:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 857              		.loc 1 2940 0
 858 001c AF40     		lsls	r7, r7, r5
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 859              		.loc 1 2941 0
 860 001e AE40     		lsls	r6, r6, r5
2937:Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2937 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 71


 862 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 863              	.LVL54:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 864              		.loc 1 2939 0
 865 0024 A408     		lsrs	r4, r4, #2
 866 0026 054B     		ldr	r3, .L66
 867 0028 A400     		lsls	r4, r4, #2
 868 002a E418     		adds	r4, r4, r3
 869 002c 2368     		ldr	r3, [r4]
 870              	.LVL55:
2945:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2945 0
 872              		@ sp needed
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 873              		.loc 1 2940 0
 874 002e BB43     		bics	r3, r7
 875              	.LVL56:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 876              		.loc 1 2941 0
 877 0030 1E43     		orrs	r6, r3
 878              	.LVL57:
2942:Generated_Source\PSoC4/CyLib.c **** 
 879              		.loc 1 2942 0
 880 0032 2660     		str	r6, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 881              		.loc 1 2944 0
 882 0034 FFF7FEFF 		bl	CyExitCriticalSection
 883              	.LVL58:
 884              	.LVL59:
 885              	.LVL60:
2945:Generated_Source\PSoC4/CyLib.c **** 
 886              		.loc 1 2945 0
 887 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 888              	.L67:
 889 003a C046     		.align	2
 890              	.L66:
 891 003c 00E400E0 		.word	-536812544
 892              		.cfi_endproc
 893              	.LFE22:
 894              		.size	CyIntSetPriority, .-CyIntSetPriority
 895              		.section	.text.CyIntGetPriority,"ax",%progbits
 896              		.align	1
 897              		.global	CyIntGetPriority
 898              		.code	16
 899              		.thumb_func
 900              		.type	CyIntGetPriority, %function
 901              	CyIntGetPriority:
 902              	.LFB23:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 903              		.loc 1 2961 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908              	.LVL61:
2964:Generated_Source\PSoC4/CyLib.c **** 
 909              		.loc 1 2964 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 72


 910 0000 1F28     		cmp	r0, #31
 911 0002 00D9     		bls	.L69
 912              	.LVL62:
 913              	.LBB42:
 914              	.LBB43:
 915              		.loc 1 3069 0
 916              		.syntax divided
 917              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 918 0004 01BE     		    bkpt    1
 919              	@ 0 "" 2
 920              	.LVL63:
 921              		.thumb
 922              		.syntax unified
 923              	.L69:
 924              	.LBE43:
 925              	.LBE42:
2966:Generated_Source\PSoC4/CyLib.c **** 
 926              		.loc 1 2966 0
 927 0006 8308     		lsrs	r3, r0, #2
 928 0008 064A     		ldr	r2, .L70
 929 000a 9B00     		lsls	r3, r3, #2
 930 000c 9B18     		adds	r3, r3, r2
 931 000e 1968     		ldr	r1, [r3]
 932              	.LVL64:
2968:Generated_Source\PSoC4/CyLib.c **** }
 933              		.loc 1 2968 0
 934 0010 0322     		movs	r2, #3
 935 0012 0300     		movs	r3, r0
 936 0014 1340     		ands	r3, r2
 937 0016 9340     		lsls	r3, r3, r2
 938 0018 0633     		adds	r3, r3, #6
 939 001a D940     		lsrs	r1, r1, r3
 940              	.LVL65:
 941 001c 0800     		movs	r0, r1
 942              	.LVL66:
2969:Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2969 0
 944              		@ sp needed
2968:Generated_Source\PSoC4/CyLib.c **** }
 945              		.loc 1 2968 0
 946 001e 1040     		ands	r0, r2
2969:Generated_Source\PSoC4/CyLib.c **** 
 947              		.loc 1 2969 0
 948 0020 7047     		bx	lr
 949              	.L71:
 950 0022 C046     		.align	2
 951              	.L70:
 952 0024 00E400E0 		.word	-536812544
 953              		.cfi_endproc
 954              	.LFE23:
 955              		.size	CyIntGetPriority, .-CyIntGetPriority
 956              		.section	.text.CyIntEnable,"ax",%progbits
 957              		.align	1
 958              		.global	CyIntEnable
 959              		.code	16
 960              		.thumb_func
 961              		.type	CyIntEnable, %function
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 73


 962              	CyIntEnable:
 963              	.LFB24:
2982:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 964              		.loc 1 2982 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969              	.LVL67:
2983:Generated_Source\PSoC4/CyLib.c **** }
 970              		.loc 1 2983 0
 971 0000 1F23     		movs	r3, #31
 972 0002 1840     		ands	r0, r3
 973              	.LVL68:
 974 0004 1E3B     		subs	r3, r3, #30
 975 0006 8340     		lsls	r3, r3, r0
 976 0008 014A     		ldr	r2, .L73
2984:Generated_Source\PSoC4/CyLib.c **** 
 977              		.loc 1 2984 0
 978              		@ sp needed
2983:Generated_Source\PSoC4/CyLib.c **** }
 979              		.loc 1 2983 0
 980 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** 
 981              		.loc 1 2984 0
 982 000c 7047     		bx	lr
 983              	.L74:
 984 000e C046     		.align	2
 985              	.L73:
 986 0010 00E100E0 		.word	-536813312
 987              		.cfi_endproc
 988              	.LFE24:
 989              		.size	CyIntEnable, .-CyIntEnable
 990              		.section	.text.CyIntGetState,"ax",%progbits
 991              		.align	1
 992              		.global	CyIntGetState
 993              		.code	16
 994              		.thumb_func
 995              		.type	CyIntGetState, %function
 996              	CyIntGetState:
 997              	.LFB25:
3000:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 998              		.loc 1 3000 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              	.LVL69:
3002:Generated_Source\PSoC4/CyLib.c **** }
 1004              		.loc 1 3002 0
 1005 0000 1F22     		movs	r2, #31
 1006 0002 044B     		ldr	r3, .L76
 1007 0004 1040     		ands	r0, r2
 1008              	.LVL70:
 1009 0006 1B68     		ldr	r3, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** 
 1010              		.loc 1 3003 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 74


 1011              		@ sp needed
3002:Generated_Source\PSoC4/CyLib.c **** }
 1012              		.loc 1 3002 0
 1013 0008 C340     		lsrs	r3, r3, r0
 1014 000a 1800     		movs	r0, r3
 1015 000c 0123     		movs	r3, #1
 1016 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** 
 1017              		.loc 1 3003 0
 1018 0010 7047     		bx	lr
 1019              	.L77:
 1020 0012 C046     		.align	2
 1021              	.L76:
 1022 0014 00E100E0 		.word	-536813312
 1023              		.cfi_endproc
 1024              	.LFE25:
 1025              		.size	CyIntGetState, .-CyIntGetState
 1026              		.section	.text.CyIntDisable,"ax",%progbits
 1027              		.align	1
 1028              		.global	CyIntDisable
 1029              		.code	16
 1030              		.thumb_func
 1031              		.type	CyIntDisable, %function
 1032              	CyIntDisable:
 1033              	.LFB26:
3016:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1034              		.loc 1 3016 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039              	.LVL71:
3017:Generated_Source\PSoC4/CyLib.c **** }
 1040              		.loc 1 3017 0
 1041 0000 1F23     		movs	r3, #31
 1042 0002 1840     		ands	r0, r3
 1043              	.LVL72:
 1044 0004 1E3B     		subs	r3, r3, #30
 1045 0006 8340     		lsls	r3, r3, r0
 1046 0008 014A     		ldr	r2, .L79
3018:Generated_Source\PSoC4/CyLib.c **** 
 1047              		.loc 1 3018 0
 1048              		@ sp needed
3017:Generated_Source\PSoC4/CyLib.c **** }
 1049              		.loc 1 3017 0
 1050 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** 
 1051              		.loc 1 3018 0
 1052 000c 7047     		bx	lr
 1053              	.L80:
 1054 000e C046     		.align	2
 1055              	.L79:
 1056 0010 80E100E0 		.word	-536813184
 1057              		.cfi_endproc
 1058              	.LFE26:
 1059              		.size	CyIntDisable, .-CyIntDisable
 1060              		.section	.text.CyIntSetPending,"ax",%progbits
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 75


 1061              		.align	1
 1062              		.global	CyIntSetPending
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	CyIntSetPending, %function
 1066              	CyIntSetPending:
 1067              	.LFB27:
3030:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1068              		.loc 1 3030 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL73:
3031:Generated_Source\PSoC4/CyLib.c **** }
 1074              		.loc 1 3031 0
 1075 0000 1F23     		movs	r3, #31
 1076 0002 1840     		ands	r0, r3
 1077              	.LVL74:
 1078 0004 1E3B     		subs	r3, r3, #30
 1079 0006 8340     		lsls	r3, r3, r0
 1080 0008 014A     		ldr	r2, .L82
3032:Generated_Source\PSoC4/CyLib.c **** 
 1081              		.loc 1 3032 0
 1082              		@ sp needed
3031:Generated_Source\PSoC4/CyLib.c **** }
 1083              		.loc 1 3031 0
 1084 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** 
 1085              		.loc 1 3032 0
 1086 000c 7047     		bx	lr
 1087              	.L83:
 1088 000e C046     		.align	2
 1089              	.L82:
 1090 0010 00E200E0 		.word	-536813056
 1091              		.cfi_endproc
 1092              	.LFE27:
 1093              		.size	CyIntSetPending, .-CyIntSetPending
 1094              		.section	.text.CyIntClearPending,"ax",%progbits
 1095              		.align	1
 1096              		.global	CyIntClearPending
 1097              		.code	16
 1098              		.thumb_func
 1099              		.type	CyIntClearPending, %function
 1100              	CyIntClearPending:
 1101              	.LFB28:
3045:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1102              		.loc 1 3045 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 1107              	.LVL75:
3046:Generated_Source\PSoC4/CyLib.c **** }
 1108              		.loc 1 3046 0
 1109 0000 1F23     		movs	r3, #31
 1110 0002 1840     		ands	r0, r3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 76


 1111              	.LVL76:
 1112 0004 1E3B     		subs	r3, r3, #30
 1113 0006 8340     		lsls	r3, r3, r0
 1114 0008 014A     		ldr	r2, .L85
3047:Generated_Source\PSoC4/CyLib.c **** 
 1115              		.loc 1 3047 0
 1116              		@ sp needed
3046:Generated_Source\PSoC4/CyLib.c **** }
 1117              		.loc 1 3046 0
 1118 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** 
 1119              		.loc 1 3047 0
 1120 000c 7047     		bx	lr
 1121              	.L86:
 1122 000e C046     		.align	2
 1123              	.L85:
 1124 0010 80E200E0 		.word	-536812928
 1125              		.cfi_endproc
 1126              	.LFE28:
 1127              		.size	CyIntClearPending, .-CyIntClearPending
 1128              		.section	.text.CyHalt,"ax",%progbits
 1129              		.align	1
 1130              		.global	CyHalt
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CyHalt, %function
 1134              	CyHalt:
 1135              	.LFB29:
3060:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1136              		.loc 1 3060 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL77:
 1142              		.loc 1 3069 0
 1143              		.syntax divided
 1144              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 1145 0000 01BE     		    bkpt    1
 1146              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 1147              		.loc 1 3073 0
 1148              		.thumb
 1149              		.syntax unified
 1150              		@ sp needed
 1151 0002 7047     		bx	lr
 1152              		.cfi_endproc
 1153              	.LFE29:
 1154              		.size	CyHalt, .-CyHalt
 1155              		.section	.text.CySoftwareReset,"ax",%progbits
 1156              		.align	1
 1157              		.global	CySoftwareReset
 1158              		.code	16
 1159              		.thumb_func
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 77


 1160              		.type	CySoftwareReset, %function
 1161              	CySoftwareReset:
 1162              	.LFB30:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1163              		.loc 1 3084 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1168              		.loc 1 3089 0
 1169 0000 034A     		ldr	r2, .L89
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1170              		.loc 1 3090 0
 1171 0002 0449     		ldr	r1, .L89+4
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1172              		.loc 1 3089 0
 1173 0004 1368     		ldr	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1174              		.loc 1 3091 0
 1175              		@ sp needed
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1176              		.loc 1 3090 0
 1177 0006 9BB2     		uxth	r3, r3
 1178 0008 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1179              		.loc 1 3089 0
 1180 000a 1360     		str	r3, [r2]
 1181              		.loc 1 3091 0
 1182 000c 7047     		bx	lr
 1183              	.L90:
 1184 000e C046     		.align	2
 1185              	.L89:
 1186 0010 0CED00E0 		.word	-536810228
 1187 0014 0400FA05 		.word	100270084
 1188              		.cfi_endproc
 1189              	.LFE30:
 1190              		.size	CySoftwareReset, .-CySoftwareReset
 1191              		.section	.text.CyDelay,"ax",%progbits
 1192              		.align	1
 1193              		.global	CyDelay
 1194              		.code	16
 1195              		.thumb_func
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 78


 1196              		.type	CyDelay, %function
 1197              	CyDelay:
 1198              	.LFB31:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1199              		.loc 1 3104 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203              	.LVL78:
 1204 0000 70B5     		push	{r4, r5, r6, lr}
 1205              		.cfi_def_cfa_offset 16
 1206              		.cfi_offset 4, -16
 1207              		.cfi_offset 5, -12
 1208              		.cfi_offset 6, -8
 1209              		.cfi_offset 14, -4
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1210              		.loc 1 3105 0
 1211 0002 8025     		movs	r5, #128
3104:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1212              		.loc 1 3104 0
 1213 0004 0400     		movs	r4, r0
 1214              		.loc 1 3105 0
 1215 0006 2D02     		lsls	r5, r5, #8
 1216              	.LVL79:
 1217              	.L92:
 1218 0008 064B     		ldr	r3, .L95
 1219 000a AC42     		cmp	r4, r5
 1220 000c 05D9     		bls	.L94
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1221              		.loc 1 3110 0
 1222 000e 5868     		ldr	r0, [r3, #4]
 1223 0010 FFF7FEFF 		bl	CyDelayCycles
 1224              	.LVL80:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1225              		.loc 1 3111 0
 1226 0014 044B     		ldr	r3, .L95+4
 1227 0016 E418     		adds	r4, r4, r3
 1228              	.LVL81:
 1229 0018 F6E7     		b	.L92
 1230              	.L94:
3112:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 79


3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1231              		.loc 1 3114 0
 1232 001a 9868     		ldr	r0, [r3, #8]
3115:Generated_Source\PSoC4/CyLib.c **** }
 1233              		.loc 1 3115 0
 1234              		@ sp needed
3114:Generated_Source\PSoC4/CyLib.c **** }
 1235              		.loc 1 3114 0
 1236 001c 6043     		muls	r0, r4
 1237 001e FFF7FEFF 		bl	CyDelayCycles
 1238              	.LVL82:
 1239              	.LVL83:
 1240              		.loc 1 3115 0
 1241 0022 70BD     		pop	{r4, r5, r6, pc}
 1242              	.L96:
 1243              		.align	2
 1244              	.L95:
 1245 0024 00000000 		.word	.LANCHOR1
 1246 0028 0080FFFF 		.word	-32768
 1247              		.cfi_endproc
 1248              	.LFE31:
 1249              		.size	CyDelay, .-CyDelay
 1250              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1251              		.align	1
 1252              		.global	CySysClkImoEnableWcoLock
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	CySysClkImoEnableWcoLock, %function
 1256              	CySysClkImoEnableWcoLock:
 1257              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1258              		.loc 1 175 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 16
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              	.LVL84:
 1263 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1264              		.cfi_def_cfa_offset 20
 1265              		.cfi_offset 4, -20
 1266              		.cfi_offset 5, -16
 1267              		.cfi_offset 6, -12
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 85B0     		sub	sp, sp, #20
 1271              		.cfi_def_cfa_offset 40
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1272              		.loc 1 186 0
 1273 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1274              	.LVL85:
 1275 0008 0028     		cmp	r0, #0
 1276 000a 55D0     		beq	.L97
 1277              	.LBB46:
 1278              	.LBB47:
 188:Generated_Source\PSoC4/CyLib.c **** 
 1279              		.loc 1 188 0
 1280 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 80


 1281              	.LVL86:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1282              		.loc 1 200 0
 1283 0010 0023     		movs	r3, #0
 188:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 188 0
 1285 0012 0190     		str	r0, [sp, #4]
 1286              	.LVL87:
 202:Generated_Source\PSoC4/CyLib.c ****                     {
 1287              		.loc 1 202 0
 1288 0014 3F20     		movs	r0, #63
 1289 0016 2949     		ldr	r1, .L109
 1290 0018 294C     		ldr	r4, .L109+4
 1291              	.LVL88:
 1292              	.L101:
 1293 001a 0A68     		ldr	r2, [r1]
 1294 001c 1D5D     		ldrb	r5, [r3, r4]
 1295 001e 0240     		ands	r2, r0
 1296 0020 AA42     		cmp	r2, r5
 1297 0022 01D1     		bne	.L99
 204:Generated_Source\PSoC4/CyLib.c ****                         break;
 1298              		.loc 1 204 0
 1299 0024 0333     		adds	r3, r3, #3
 1300              	.LVL89:
 1301 0026 03E0     		b	.L100
 1302              	.LVL90:
 1303              	.L99:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1304              		.loc 1 200 0
 1305 0028 0133     		adds	r3, r3, #1
 1306              	.LVL91:
 1307 002a 2E2B     		cmp	r3, #46
 1308 002c F5D1     		bne	.L101
 199:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1309              		.loc 1 199 0
 1310 002e 2B3B     		subs	r3, r3, #43
 1311              	.LVL92:
 1312              	.L100:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1313              		.loc 1 222 0
 1314 0030 0021     		movs	r1, #0
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1315              		.loc 1 226 0
 1316 0032 1F20     		movs	r0, #31
 222:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 222 0
 1318 0034 234A     		ldr	r2, .L109+8
 1319 0036 1160     		str	r1, [r2]
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1320              		.loc 1 226 0
 1321 0038 2349     		ldr	r1, .L109+12
 1322 003a 0A68     		ldr	r2, [r1]
 1323 003c 0242     		tst	r2, r0
 1324 003e 04D1     		bne	.L102
 228:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1325              		.loc 1 228 0
 1326 0040 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 81


 1327 0042 8243     		bics	r2, r0
 1328 0044 1338     		subs	r0, r0, #19
 1329 0046 0243     		orrs	r2, r0
 1330 0048 0A60     		str	r2, [r1]
 1331              	.L102:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1332              		.loc 1 233 0
 1333 004a 204C     		ldr	r4, .L109+16
 1334 004c 204A     		ldr	r2, .L109+20
 1335 004e 2168     		ldr	r1, [r4]
 1336              	.LVL93:
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1337              		.loc 1 246 0
 1338 0050 204E     		ldr	r6, .L109+24
 1339 0052 1140     		ands	r1, r2
 1340              	.LVL94:
 1341 0054 A022     		movs	r2, #160
 1342 0056 5203     		lsls	r2, r2, #13
 1343 0058 1143     		orrs	r1, r2
 1344              	.LVL95:
 242:Generated_Source\PSoC4/CyLib.c **** 
 1345              		.loc 1 242 0
 1346 005a 1F4A     		ldr	r2, .L109+28
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1347              		.loc 1 247 0
 1348 005c 3020     		movs	r0, #48
 242:Generated_Source\PSoC4/CyLib.c **** 
 1349              		.loc 1 242 0
 1350 005e 5343     		muls	r3, r2
 1351              	.LVL96:
 1352 0060 8022     		movs	r2, #128
 1353 0062 D201     		lsls	r2, r2, #7
 1354 0064 9B18     		adds	r3, r3, r2
 1355 0066 DB0B     		lsrs	r3, r3, #15
 1356 0068 013B     		subs	r3, r3, #1
 1357 006a 0B43     		orrs	r3, r1
 1358              	.LVL97:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1359              		.loc 1 244 0
 1360 006c 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1361              		.loc 1 246 0
 1362 006e 3368     		ldr	r3, [r6]
 1363              	.LVL98:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1364              		.loc 1 183 0
 1365 0070 0025     		movs	r5, #0
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1366              		.loc 1 246 0
 1367 0072 0393     		str	r3, [sp, #12]
 1368              	.LVL99:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1369              		.loc 1 247 0
 1370 0074 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1371              	.LVL100:
 248:Generated_Source\PSoC4/CyLib.c **** 
 1372              		.loc 1 248 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 82


 1373 0078 8021     		movs	r1, #128
 1374 007a 184A     		ldr	r2, .L109+32
 1375 007c C905     		lsls	r1, r1, #23
 1376 007e 1368     		ldr	r3, [r2]
 1377 0080 0B43     		orrs	r3, r1
 1378 0082 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1379              		.loc 1 250 0
 1380 0084 2268     		ldr	r2, [r4]
 1381 0086 164B     		ldr	r3, .L109+36
 1382 0088 1A40     		ands	r2, r3
 1383 008a 1700     		movs	r7, r2
 1384              	.LVL101:
 1385              	.L103:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1386              		.loc 1 254 0
 1387 008c 0120     		movs	r0, #1
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1388              		.loc 1 255 0
 1389 008e 1035     		adds	r5, r5, #16
 1390              	.LVL102:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1391              		.loc 1 254 0
 1392 0090 FFF7FEFF 		bl	CyDelay
 1393              	.LVL103:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1394              		.loc 1 256 0
 1395 0094 AB05     		lsls	r3, r5, #22
 1396 0096 3B43     		orrs	r3, r7
 1397 0098 2360     		str	r3, [r4]
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1398              		.loc 1 252 0
 1399 009a F02D     		cmp	r5, #240
 1400 009c F6D1     		bne	.L103
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1401              		.loc 1 259 0
 1402 009e 0120     		movs	r0, #1
 1403 00a0 FFF7FEFF 		bl	CyDelay
 1404              	.LVL104:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1405              		.loc 1 260 0
 1406 00a4 FF23     		movs	r3, #255
 1407 00a6 094A     		ldr	r2, .L109+16
 1408 00a8 9B05     		lsls	r3, r3, #22
 1409 00aa 3B43     		orrs	r3, r7
 1410 00ac 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1411              		.loc 1 263 0
 1412 00ae 039B     		ldr	r3, [sp, #12]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1413              		.loc 1 265 0
 1414 00b0 0198     		ldr	r0, [sp, #4]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1415              		.loc 1 263 0
 1416 00b2 3360     		str	r3, [r6]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1417              		.loc 1 265 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 83


 1418 00b4 FFF7FEFF 		bl	CyExitCriticalSection
 1419              	.LVL105:
 1420              	.L97:
 1421              	.LBE47:
 1422              	.LBE46:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 267 0
 1424 00b8 05B0     		add	sp, sp, #20
 1425              		@ sp needed
 1426 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1427              	.L110:
 1428              		.align	2
 1429              	.L109:
 1430 00bc 2CFF0B40 		.word	1074528044
 1431 00c0 00000000 		.word	.LANCHOR0
 1432 00c4 28FF0B40 		.word	1074528040
 1433 00c8 34FF0B40 		.word	1074528052
 1434 00cc 08002240 		.word	1075970056
 1435 00d0 00F800C0 		.word	-1073678336
 1436 00d4 30001040 		.word	1074790448
 1437 00d8 40420F00 		.word	1000000
 1438 00dc 00002240 		.word	1075970048
 1439 00e0 FFFF3FC0 		.word	-1069547521
 1440              		.cfi_endproc
 1441              	.LFE3:
 1442              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1443              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1444              		.align	1
 1445              		.global	CySysClkWriteImoFreq
 1446              		.code	16
 1447              		.thumb_func
 1448              		.type	CySysClkWriteImoFreq, %function
 1449              	CySysClkWriteImoFreq:
 1450              	.LFB10:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1451              		.loc 1 818 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 24
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              	.LVL106:
 1456 0000 30B5     		push	{r4, r5, lr}
 1457              		.cfi_def_cfa_offset 12
 1458              		.cfi_offset 4, -12
 1459              		.cfi_offset 5, -8
 1460              		.cfi_offset 14, -4
 1461 0002 87B0     		sub	sp, sp, #28
 1462              		.cfi_def_cfa_offset 40
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1463              		.loc 1 818 0
 1464 0004 0400     		movs	r4, r0
 840:Generated_Source\PSoC4/CyLib.c **** 
 1465              		.loc 1 840 0
 1466 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1467              	.LVL107:
 1468 000a 0500     		movs	r5, r0
 1469              	.LVL108:
 843:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 84


 1470              		.loc 1 843 0
 1471 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1472              	.LVL109:
 830:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1473              		.loc 1 830 0
 1474 0010 0022     		movs	r2, #0
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1475              		.loc 1 843 0
 1476 0012 9042     		cmp	r0, r2
 1477 0014 02D0     		beq	.L112
 1478              	.LVL110:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 1479              		.loc 1 846 0
 1480 0016 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1481              	.LVL111:
 845:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1482              		.loc 1 845 0
 1483 001a 0122     		movs	r2, #1
 1484              	.LVL112:
 1485              	.L112:
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1486              		.loc 1 874 0
 1487 001c 104B     		ldr	r3, .L116
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1488              		.loc 1 885 0
 1489 001e 1148     		ldr	r0, .L116+4
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1490              		.loc 1 874 0
 1491 0020 1968     		ldr	r1, [r3]
 1492 0022 02AB     		add	r3, sp, #8
 1493 0024 0291     		str	r1, [sp, #8]
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1494              		.loc 1 875 0
 1495 0026 1049     		ldr	r1, .L116+8
 1496 0028 0968     		ldr	r1, [r1]
 1497 002a 0391     		str	r1, [sp, #12]
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1498              		.loc 1 876 0
 1499 002c 0F49     		ldr	r1, .L116+12
 1500 002e 0C19     		adds	r4, r1, r4
 1501              	.LVL113:
 1502 0030 033C     		subs	r4, r4, #3
 1503 0032 2178     		ldrb	r1, [r4]
 1504 0034 0491     		str	r1, [sp, #16]
 877:Generated_Source\PSoC4/CyLib.c **** 
 1505              		.loc 1 877 0
 1506 0036 0E49     		ldr	r1, .L116+16
 1507 0038 0968     		ldr	r1, [r1]
 1508 003a 0591     		str	r1, [sp, #20]
 879:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1509              		.loc 1 879 0
 1510 003c 0D49     		ldr	r1, .L116+20
 1511 003e 0091     		str	r1, [sp]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1512              		.loc 1 884 0
 1513 0040 6946     		mov	r1, sp
 882:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 85


 1514              		.loc 1 882 0
 1515 0042 0193     		str	r3, [sp, #4]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1516              		.loc 1 884 0
 1517 0044 0C4B     		ldr	r3, .L116+24
 1518 0046 1960     		str	r1, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1519              		.loc 1 885 0
 1520 0048 0C49     		ldr	r1, .L116+28
 1521 004a 0860     		str	r0, [r1]
 886:Generated_Source\PSoC4/CyLib.c **** 
 1522              		.loc 1 886 0
 1523 004c 1B68     		ldr	r3, [r3]
 984:Generated_Source\PSoC4/CyLib.c ****             {
 1524              		.loc 1 984 0
 1525 004e 012A     		cmp	r2, #1
 1526 0050 01D1     		bne	.L113
 986:Generated_Source\PSoC4/CyLib.c ****             }
 1527              		.loc 1 986 0
 1528 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1529              	.LVL114:
 1530              	.L113:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1531              		.loc 1 997 0
 1532 0056 2800     		movs	r0, r5
 1533 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1534              	.LVL115:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1535              		.loc 1 998 0
 1536 005c 07B0     		add	sp, sp, #28
 1537              		@ sp needed
 1538              	.LVL116:
 1539 005e 30BD     		pop	{r4, r5, pc}
 1540              	.L117:
 1541              		.align	2
 1542              	.L116:
 1543 0060 08010B40 		.word	1074462984
 1544 0064 17000080 		.word	-2147483625
 1545 0068 00010B40 		.word	1074462976
 1546 006c 00000000 		.word	.LANCHOR0
 1547 0070 30001040 		.word	1074790448
 1548 0074 B6EA0000 		.word	60086
 1549 0078 08001040 		.word	1074790408
 1550 007c 04001040 		.word	1074790404
 1551              		.cfi_endproc
 1552              	.LFE10:
 1553              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1554              		.section	.text.CyDelayUs,"ax",%progbits
 1555              		.align	1
 1556              		.global	CyDelayUs
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CyDelayUs, %function
 1560              	CyDelayUs:
 1561              	.LFB32:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 86


3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 3127 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              	.LVL117:
 1567 0000 10B5     		push	{r4, lr}
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 4, -8
 1570              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1571              		.loc 1 3128 0
 1572 0002 034B     		ldr	r3, .L119
3129:Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 3129 0
 1574              		@ sp needed
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1575              		.loc 1 3128 0
 1576 0004 1B7B     		ldrb	r3, [r3, #12]
 1577 0006 5843     		muls	r0, r3
 1578              	.LVL118:
 1579 0008 FFF7FEFF 		bl	CyDelayCycles
 1580              	.LVL119:
 1581              		.loc 1 3129 0
 1582 000c 10BD     		pop	{r4, pc}
 1583              	.L120:
 1584 000e C046     		.align	2
 1585              	.L119:
 1586 0010 00000000 		.word	.LANCHOR1
 1587              		.cfi_endproc
 1588              	.LFE32:
 1589              		.size	CyDelayUs, .-CyDelayUs
 1590              		.section	.text.CySysLvdEnable,"ax",%progbits
 1591              		.align	1
 1592              		.global	CySysLvdEnable
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	CySysLvdEnable, %function
 1596              	CySysLvdEnable:
 1597              	.LFB11:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1598              		.loc 1 2663 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              	.LVL120:
 1603 0000 70B5     		push	{r4, r5, r6, lr}
 1604              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 87


 1605              		.cfi_offset 4, -16
 1606              		.cfi_offset 5, -12
 1607              		.cfi_offset 6, -8
 1608              		.cfi_offset 14, -4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1609              		.loc 1 2665 0
 1610 0002 0225     		movs	r5, #2
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1611              		.loc 1 2668 0
 1612 0004 1E21     		movs	r1, #30
2665:Generated_Source\PSoC4/CyLib.c **** 
 1613              		.loc 1 2665 0
 1614 0006 0C4C     		ldr	r4, .L122
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1615              		.loc 1 2668 0
 1616 0008 0C4A     		ldr	r2, .L122+4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1617              		.loc 1 2665 0
 1618 000a 2368     		ldr	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1619              		.loc 1 2668 0
 1620 000c 4000     		lsls	r0, r0, #1
 1621              	.LVL121:
2665:Generated_Source\PSoC4/CyLib.c **** 
 1622              		.loc 1 2665 0
 1623 000e AB43     		bics	r3, r5
 1624 0010 2360     		str	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1625              		.loc 1 2668 0
 1626 0012 1368     		ldr	r3, [r2]
 1627 0014 0840     		ands	r0, r1
 1628 0016 8B43     		bics	r3, r1
 1629 0018 1843     		orrs	r0, r3
 1630 001a 1060     		str	r0, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1631              		.loc 1 2675 0
 1632 001c FA20     		movs	r0, #250
2672:Generated_Source\PSoC4/CyLib.c **** 
 1633              		.loc 1 2672 0
 1634 001e 1368     		ldr	r3, [r2]
 1635 0020 1D39     		subs	r1, r1, #29
 1636 0022 0B43     		orrs	r3, r1
 1637 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1638              		.loc 1 2675 0
 1639 0026 8000     		lsls	r0, r0, #2
 1640 0028 FFF7FEFF 		bl	CyDelayUs
 1641              	.LVL122:
 1642              	.LBB48:
 1643              	.LBB49:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1644              		.loc 1 2728 0
 1645 002c 044B     		ldr	r3, .L122+8
 1646              	.LBE49:
 1647              	.LBE48:
2682:Generated_Source\PSoC4/CyLib.c **** 
 1648              		.loc 1 2682 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 88


 1649              		@ sp needed
 1650              	.LBB51:
 1651              	.LBB50:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1652              		.loc 1 2728 0
 1653 002e 1D60     		str	r5, [r3]
 1654              	.LBE50:
 1655              	.LBE51:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1656              		.loc 1 2681 0
 1657 0030 2368     		ldr	r3, [r4]
 1658 0032 1D43     		orrs	r5, r3
 1659 0034 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1660              		.loc 1 2682 0
 1661 0036 70BD     		pop	{r4, r5, r6, pc}
 1662              	.L123:
 1663              		.align	2
 1664              	.L122:
 1665 0038 08000B40 		.word	1074462728
 1666 003c 18000B40 		.word	1074462744
 1667 0040 04000B40 		.word	1074462724
 1668              		.cfi_endproc
 1669              	.LFE11:
 1670              		.size	CySysLvdEnable, .-CySysLvdEnable
 1671              		.global	__aeabi_uidiv
 1672              		.section	.text.CyDelayFreq,"ax",%progbits
 1673              		.align	1
 1674              		.global	CyDelayFreq
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	CyDelayFreq, %function
 1678              	CyDelayFreq:
 1679              	.LFB33:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1680              		.loc 1 3141 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              	.LVL123:
 1685 0000 70B5     		push	{r4, r5, r6, lr}
 1686              		.cfi_def_cfa_offset 16
 1687              		.cfi_offset 4, -16
 1688              		.cfi_offset 5, -12
 1689              		.cfi_offset 6, -8
 1690              		.cfi_offset 14, -4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 89


 1691 0002 0C4C     		ldr	r4, .L127
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1692              		.loc 1 3142 0
 1693 0004 0028     		cmp	r0, #0
 1694 0006 01D0     		beq	.L125
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1695              		.loc 1 3144 0
 1696 0008 2061     		str	r0, [r4, #16]
 1697 000a 01E0     		b	.L126
 1698              	.L125:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1699              		.loc 1 3148 0
 1700 000c 0A4B     		ldr	r3, .L127+4
 1701 000e 2361     		str	r3, [r4, #16]
 1702              	.L126:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1703              		.loc 1 3151 0
 1704 0010 2569     		ldr	r5, [r4, #16]
 1705 0012 0A4B     		ldr	r3, .L127+8
 1706 0014 0A49     		ldr	r1, .L127+12
 1707 0016 E818     		adds	r0, r5, r3
 1708              	.LVL124:
 1709 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1710              	.LVL125:
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1711              		.loc 1 3152 0
 1712 001c FA21     		movs	r1, #250
 1713 001e 094B     		ldr	r3, .L127+16
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1714              		.loc 1 3151 0
 1715 0020 2073     		strb	r0, [r4, #12]
 1716              		.loc 1 3152 0
 1717 0022 8900     		lsls	r1, r1, #2
 1718 0024 E818     		adds	r0, r5, r3
 1719 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1720              	.LVL126:
 1721 002a A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1722              		.loc 1 3153 0
 1723 002c C003     		lsls	r0, r0, #15
 1724 002e 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1725              		.loc 1 3154 0
 1726              		@ sp needed
 1727 0030 70BD     		pop	{r4, r5, r6, pc}
 1728              	.L128:
 1729 0032 C046     		.align	2
 1730              	.L127:
 1731 0034 00000000 		.word	.LANCHOR1
 1732 0038 006CDC02 		.word	48000000
 1733 003c 3F420F00 		.word	999999
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 90


 1734 0040 40420F00 		.word	1000000
 1735 0044 E7030000 		.word	999
 1736              		.cfi_endproc
 1737              	.LFE33:
 1738              		.size	CyDelayFreq, .-CyDelayFreq
 1739              		.section	.text.CySysTickInit,"ax",%progbits
 1740              		.align	1
 1741              		.global	CySysTickInit
 1742              		.code	16
 1743              		.thumb_func
 1744              		.type	CySysTickInit, %function
 1745              	CySysTickInit:
 1746              	.LFB35:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 91


3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
 1747              		.loc 1 3202 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              	.LVL127:
 1752 0000 10B5     		push	{r4, lr}
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 4, -8
 1755              		.cfi_offset 14, -4
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1756              		.loc 1 3207 0
 1757 0002 0024     		movs	r4, #0
 1758              	.LBB62:
 1759              	.LBB63:
 1760              	.LBB64:
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 92


3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3251:Generated_Source\PSoC4/CyLib.c **** }
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3267:Generated_Source\PSoC4/CyLib.c **** }
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3283:Generated_Source\PSoC4/CyLib.c **** }
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 93


3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
3300:Generated_Source\PSoC4/CyLib.c **** }
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3316:Generated_Source\PSoC4/CyLib.c **** }
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3332:Generated_Source\PSoC4/CyLib.c **** }
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 94


3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1761              		.loc 1 3365 0
 1762 0004 0421     		movs	r1, #4
 1763              	.LBE64:
 1764              	.LBE63:
 1765              	.LBE62:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1766              		.loc 1 3207 0
 1767 0006 0C4B     		ldr	r3, .L130
 1768              	.LBB69:
 1769              	.LBB70:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1770              		.loc 1 2834 0
 1771 0008 0C4A     		ldr	r2, .L130+4
 1772              	.LBE70:
 1773              	.LBE69:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1774              		.loc 1 3207 0
 1775 000a 1C60     		str	r4, [r3]
 1776              	.LVL128:
 1777 000c 1C61     		str	r4, [r3, #16]
 1778 000e 5C60     		str	r4, [r3, #4]
 1779              	.LVL129:
 1780 0010 9C60     		str	r4, [r3, #8]
 1781              	.LVL130:
 1782 0012 DC60     		str	r4, [r3, #12]
 1783              	.LVL131:
 1784              	.LBB73:
 1785              	.LBB71:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1786              		.loc 1 2834 0
 1787 0014 0A4B     		ldr	r3, .L130+8
 1788              	.LVL132:
 1789              	.LBE71:
 1790              	.LBE73:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 3218 0
 1792              		@ sp needed
 1793              	.LBB74:
 1794              	.LBB72:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1795              		.loc 1 2834 0
 1796 0016 1A60     		str	r2, [r3]
 1797              	.LVL133:
 1798              	.LBE72:
 1799              	.LBE74:
 1800              	.LBB75:
 1801              	.LBB67:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 95


 1802              	.LBB65:
 1803              		.loc 1 3365 0
 1804 0018 0A4A     		ldr	r2, .L130+12
 1805 001a 1368     		ldr	r3, [r2]
 1806 001c 0B43     		orrs	r3, r1
 1807              	.LBE65:
 1808              	.LBE67:
 1809              	.LBE75:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1810              		.loc 1 3216 0
 1811 001e FA21     		movs	r1, #250
 1812              	.LBB76:
 1813              	.LBB68:
 1814              	.LBB66:
 1815              		.loc 1 3365 0
 1816 0020 1360     		str	r3, [r2]
 1817              	.LVL134:
 1818              	.LBE66:
 1819              	.LBE68:
 1820              	.LBE76:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1821              		.loc 1 3216 0
 1822 0022 094B     		ldr	r3, .L130+16
 1823 0024 8900     		lsls	r1, r1, #2
 1824 0026 1869     		ldr	r0, [r3, #16]
 1825 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1826              	.LVL135:
 1827              	.LBB77:
 1828              	.LBB78:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1829              		.loc 1 3299 0
 1830 002c 074B     		ldr	r3, .L130+20
 1831 002e 1860     		str	r0, [r3]
 1832              	.LVL136:
 1833              	.LBE78:
 1834              	.LBE77:
 1835              	.LBB79:
 1836              	.LBB80:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 96


3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3412:Generated_Source\PSoC4/CyLib.c **** }
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1837              		.loc 1 3424 0
 1838 0030 074B     		ldr	r3, .L130+24
 1839 0032 1C60     		str	r4, [r3]
 1840              	.LBE80:
 1841              	.LBE79:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1842              		.loc 1 3218 0
 1843 0034 10BD     		pop	{r4, pc}
 1844              	.L131:
 1845 0036 C046     		.align	2
 1846              	.L130:
 1847 0038 00000000 		.word	.LANCHOR2
 1848 003c 00000000 		.word	CySysTickServiceCallbacks
 1849 0040 3C000020 		.word	536870972
 1850 0044 10E000E0 		.word	-536813552
 1851 0048 00000000 		.word	.LANCHOR1
 1852 004c 14E000E0 		.word	-536813548
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 97


 1853 0050 18E000E0 		.word	-536813544
 1854              		.cfi_endproc
 1855              	.LFE35:
 1856              		.size	CySysTickInit, .-CySysTickInit
 1857              		.section	.text.CySysTickStop,"ax",%progbits
 1858              		.align	1
 1859              		.global	CySysTickStop
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CySysTickStop, %function
 1863              	CySysTickStop:
 1864              	.LFB37:
3249:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1865              		.loc 1 3249 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c **** }
 1870              		.loc 1 3250 0
 1871 0000 0121     		movs	r1, #1
 1872 0002 024A     		ldr	r2, .L133
3251:Generated_Source\PSoC4/CyLib.c **** 
 1873              		.loc 1 3251 0
 1874              		@ sp needed
3250:Generated_Source\PSoC4/CyLib.c **** }
 1875              		.loc 1 3250 0
 1876 0004 1368     		ldr	r3, [r2]
 1877 0006 8B43     		bics	r3, r1
 1878 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** 
 1879              		.loc 1 3251 0
 1880 000a 7047     		bx	lr
 1881              	.L134:
 1882              		.align	2
 1883              	.L133:
 1884 000c 10E000E0 		.word	-536813552
 1885              		.cfi_endproc
 1886              	.LFE37:
 1887              		.size	CySysTickStop, .-CySysTickStop
 1888              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1889              		.align	1
 1890              		.global	CySysTickEnableInterrupt
 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	CySysTickEnableInterrupt, %function
 1894              	CySysTickEnableInterrupt:
 1895              	.LFB38:
3265:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1896              		.loc 1 3265 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 0
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c **** }
 1901              		.loc 1 3266 0
 1902 0000 0221     		movs	r1, #2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 98


 1903 0002 024A     		ldr	r2, .L136
3267:Generated_Source\PSoC4/CyLib.c **** 
 1904              		.loc 1 3267 0
 1905              		@ sp needed
3266:Generated_Source\PSoC4/CyLib.c **** }
 1906              		.loc 1 3266 0
 1907 0004 1368     		ldr	r3, [r2]
 1908 0006 0B43     		orrs	r3, r1
 1909 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** 
 1910              		.loc 1 3267 0
 1911 000a 7047     		bx	lr
 1912              	.L137:
 1913              		.align	2
 1914              	.L136:
 1915 000c 10E000E0 		.word	-536813552
 1916              		.cfi_endproc
 1917              	.LFE38:
 1918              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1919              		.section	.text.CySysTickEnable,"ax",%progbits
 1920              		.align	1
 1921              		.global	CySysTickEnable
 1922              		.code	16
 1923              		.thumb_func
 1924              		.type	CySysTickEnable, %function
 1925              	CySysTickEnable:
 1926              	.LFB36:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1927              		.loc 1 3232 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931 0000 10B5     		push	{r4, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 4, -8
 1934              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1935              		.loc 1 3233 0
 1936 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1937              	.LVL137:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1938              		.loc 1 3234 0
 1939 0006 0121     		movs	r1, #1
 1940 0008 024A     		ldr	r2, .L139
3235:Generated_Source\PSoC4/CyLib.c **** 
 1941              		.loc 1 3235 0
 1942              		@ sp needed
3234:Generated_Source\PSoC4/CyLib.c **** }
 1943              		.loc 1 3234 0
 1944 000a 1368     		ldr	r3, [r2]
 1945 000c 0B43     		orrs	r3, r1
 1946 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1947              		.loc 1 3235 0
 1948 0010 10BD     		pop	{r4, pc}
 1949              	.L140:
 1950 0012 C046     		.align	2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 99


 1951              	.L139:
 1952 0014 10E000E0 		.word	-536813552
 1953              		.cfi_endproc
 1954              	.LFE36:
 1955              		.size	CySysTickEnable, .-CySysTickEnable
 1956              		.section	.text.CySysTickStart,"ax",%progbits
 1957              		.align	1
 1958              		.global	CySysTickStart
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	CySysTickStart, %function
 1962              	CySysTickStart:
 1963              	.LFB34:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1964              		.loc 1 3173 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968 0000 10B5     		push	{r4, lr}
 1969              		.cfi_def_cfa_offset 8
 1970              		.cfi_offset 4, -8
 1971              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1972              		.loc 1 3174 0
 1973 0002 054C     		ldr	r4, .L143
 1974 0004 6369     		ldr	r3, [r4, #20]
 1975 0006 002B     		cmp	r3, #0
 1976 0008 03D1     		bne	.L142
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1977              		.loc 1 3176 0
 1978 000a FFF7FEFF 		bl	CySysTickInit
 1979              	.LVL138:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1980              		.loc 1 3177 0
 1981 000e 0123     		movs	r3, #1
 1982 0010 6361     		str	r3, [r4, #20]
 1983              	.L142:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1984              		.loc 1 3180 0
 1985 0012 FFF7FEFF 		bl	CySysTickEnable
 1986              	.LVL139:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1987              		.loc 1 3181 0
 1988              		@ sp needed
 1989 0016 10BD     		pop	{r4, pc}
 1990              	.L144:
 1991              		.align	2
 1992              	.L143:
 1993 0018 00000000 		.word	.LANCHOR2
 1994              		.cfi_endproc
 1995              	.LFE34:
 1996              		.size	CySysTickStart, .-CySysTickStart
 1997              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1998              		.align	1
 1999              		.global	CySysTickDisableInterrupt
 2000              		.code	16
 2001              		.thumb_func
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 100


 2002              		.type	CySysTickDisableInterrupt, %function
 2003              	CySysTickDisableInterrupt:
 2004              	.LFB39:
3281:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2005              		.loc 1 3281 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c **** }
 2010              		.loc 1 3282 0
 2011 0000 0221     		movs	r1, #2
 2012 0002 024A     		ldr	r2, .L146
3283:Generated_Source\PSoC4/CyLib.c **** 
 2013              		.loc 1 3283 0
 2014              		@ sp needed
3282:Generated_Source\PSoC4/CyLib.c **** }
 2015              		.loc 1 3282 0
 2016 0004 1368     		ldr	r3, [r2]
 2017 0006 8B43     		bics	r3, r1
 2018 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** 
 2019              		.loc 1 3283 0
 2020 000a 7047     		bx	lr
 2021              	.L147:
 2022              		.align	2
 2023              	.L146:
 2024 000c 10E000E0 		.word	-536813552
 2025              		.cfi_endproc
 2026              	.LFE39:
 2027              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2028              		.section	.text.CySysTickSetReload,"ax",%progbits
 2029              		.align	1
 2030              		.global	CySysTickSetReload
 2031              		.code	16
 2032              		.thumb_func
 2033              		.type	CySysTickSetReload, %function
 2034              	CySysTickSetReload:
 2035              	.LFB40:
3298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2036              		.loc 1 3298 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 0
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              		@ link register save eliminated.
 2041              	.LVL140:
3299:Generated_Source\PSoC4/CyLib.c **** }
 2042              		.loc 1 3299 0
 2043 0000 024B     		ldr	r3, .L149
 2044 0002 0002     		lsls	r0, r0, #8
 2045              	.LVL141:
 2046 0004 000A     		lsrs	r0, r0, #8
 2047 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** 
 2048              		.loc 1 3300 0
 2049              		@ sp needed
 2050 0008 7047     		bx	lr
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 101


 2051              	.L150:
 2052 000a C046     		.align	2
 2053              	.L149:
 2054 000c 14E000E0 		.word	-536813548
 2055              		.cfi_endproc
 2056              	.LFE40:
 2057              		.size	CySysTickSetReload, .-CySysTickSetReload
 2058              		.section	.text.CySysTickGetReload,"ax",%progbits
 2059              		.align	1
 2060              		.global	CySysTickGetReload
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	CySysTickGetReload, %function
 2064              	CySysTickGetReload:
 2065              	.LFB41:
3314:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2066              		.loc 1 3314 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c **** }
 2071              		.loc 1 3315 0
 2072 0000 024B     		ldr	r3, .L152
3316:Generated_Source\PSoC4/CyLib.c **** 
 2073              		.loc 1 3316 0
 2074              		@ sp needed
3315:Generated_Source\PSoC4/CyLib.c **** }
 2075              		.loc 1 3315 0
 2076 0002 1868     		ldr	r0, [r3]
 2077 0004 0002     		lsls	r0, r0, #8
 2078 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** 
 2079              		.loc 1 3316 0
 2080 0008 7047     		bx	lr
 2081              	.L153:
 2082 000a C046     		.align	2
 2083              	.L152:
 2084 000c 14E000E0 		.word	-536813548
 2085              		.cfi_endproc
 2086              	.LFE41:
 2087              		.size	CySysTickGetReload, .-CySysTickGetReload
 2088              		.section	.text.CySysTickGetValue,"ax",%progbits
 2089              		.align	1
 2090              		.global	CySysTickGetValue
 2091              		.code	16
 2092              		.thumb_func
 2093              		.type	CySysTickGetValue, %function
 2094              	CySysTickGetValue:
 2095              	.LFB42:
3330:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2096              		.loc 1 3330 0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 0
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 102


 2101              		.loc 1 3331 0
 2102 0000 024B     		ldr	r3, .L155
3332:Generated_Source\PSoC4/CyLib.c **** 
 2103              		.loc 1 3332 0
 2104              		@ sp needed
3331:Generated_Source\PSoC4/CyLib.c **** }
 2105              		.loc 1 3331 0
 2106 0002 1868     		ldr	r0, [r3]
 2107 0004 0002     		lsls	r0, r0, #8
 2108 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** 
 2109              		.loc 1 3332 0
 2110 0008 7047     		bx	lr
 2111              	.L156:
 2112 000a C046     		.align	2
 2113              	.L155:
 2114 000c 18E000E0 		.word	-536813544
 2115              		.cfi_endproc
 2116              	.LFE42:
 2117              		.size	CySysTickGetValue, .-CySysTickGetValue
 2118              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2119              		.align	1
 2120              		.global	CySysTickSetClockSource
 2121              		.code	16
 2122              		.thumb_func
 2123              		.type	CySysTickSetClockSource, %function
 2124              	CySysTickSetClockSource:
 2125              	.LFB43:
3362:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2126              		.loc 1 3362 0
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 0
 2129              		@ frame_needed = 0, uses_anonymous_args = 0
 2130              		@ link register save eliminated.
 2131              	.LVL142:
 2132 0000 044B     		ldr	r3, .L161
 2133 0002 0421     		movs	r1, #4
 2134              	.LBB83:
 2135              	.LBB84:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2136              		.loc 1 3365 0
 2137 0004 1A68     		ldr	r2, [r3]
 2138              	.LBE84:
 2139              	.LBE83:
3363:Generated_Source\PSoC4/CyLib.c ****         {
 2140              		.loc 1 3363 0
 2141 0006 0128     		cmp	r0, #1
 2142 0008 01D1     		bne	.L158
 2143              	.LVL143:
 2144              	.LBB86:
 2145              	.LBB85:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2146              		.loc 1 3365 0
 2147 000a 0A43     		orrs	r2, r1
 2148 000c 00E0     		b	.L160
 2149              	.LVL144:
 2150              	.L158:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 103


 2151              	.LBE85:
 2152              	.LBE86:
3369:Generated_Source\PSoC4/CyLib.c ****         }
 2153              		.loc 1 3369 0
 2154 000e 8A43     		bics	r2, r1
 2155              	.L160:
 2156 0010 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2157              		.loc 1 3371 0
 2158              		@ sp needed
 2159 0012 7047     		bx	lr
 2160              	.L162:
 2161              		.align	2
 2162              	.L161:
 2163 0014 10E000E0 		.word	-536813552
 2164              		.cfi_endproc
 2165              	.LFE43:
 2166              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2167              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2168              		.align	1
 2169              		.global	CySysTickGetClockSource
 2170              		.code	16
 2171              		.thumb_func
 2172              		.type	CySysTickGetClockSource, %function
 2173              	CySysTickGetClockSource:
 2174              	.LFB44:
3387:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2175              		.loc 1 3387 0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 0
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 2179              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2180              		.loc 1 3388 0
 2181 0000 024B     		ldr	r3, .L164
3389:Generated_Source\PSoC4/CyLib.c **** 
 2182              		.loc 1 3389 0
 2183              		@ sp needed
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2184              		.loc 1 3388 0
 2185 0002 1868     		ldr	r0, [r3]
 2186 0004 4007     		lsls	r0, r0, #29
 2187 0006 C00F     		lsrs	r0, r0, #31
3389:Generated_Source\PSoC4/CyLib.c **** 
 2188              		.loc 1 3389 0
 2189 0008 7047     		bx	lr
 2190              	.L165:
 2191 000a C046     		.align	2
 2192              	.L164:
 2193 000c 10E000E0 		.word	-536813552
 2194              		.cfi_endproc
 2195              	.LFE44:
 2196              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2197              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2198              		.align	1
 2199              		.global	CySysTickGetCountFlag
 2200              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 104


 2201              		.thumb_func
 2202              		.type	CySysTickGetCountFlag, %function
 2203              	CySysTickGetCountFlag:
 2204              	.LFB45:
3410:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2205              		.loc 1 3410 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c **** }
 2210              		.loc 1 3411 0
 2211 0000 024B     		ldr	r3, .L167
3412:Generated_Source\PSoC4/CyLib.c **** 
 2212              		.loc 1 3412 0
 2213              		@ sp needed
3411:Generated_Source\PSoC4/CyLib.c **** }
 2214              		.loc 1 3411 0
 2215 0002 1868     		ldr	r0, [r3]
 2216 0004 C003     		lsls	r0, r0, #15
 2217 0006 C00F     		lsrs	r0, r0, #31
3412:Generated_Source\PSoC4/CyLib.c **** 
 2218              		.loc 1 3412 0
 2219 0008 7047     		bx	lr
 2220              	.L168:
 2221 000a C046     		.align	2
 2222              	.L167:
 2223 000c 10E000E0 		.word	-536813552
 2224              		.cfi_endproc
 2225              	.LFE45:
 2226              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2227              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2228              		.align	1
 2229              		.code	16
 2230              		.thumb_func
 2231              		.type	CySysTickServiceCallbacks, %function
 2232              	CySysTickServiceCallbacks:
 2233              	.LFB49:
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 105


3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 2234              		.loc 1 3495 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 106


 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 4, -8
 2241              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2242              		.loc 1 3499 0
 2243 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2244              	.LVL145:
 2245 0006 0128     		cmp	r0, #1
 2246 0008 08D1     		bne	.L169
 2247 000a 0024     		movs	r4, #0
 2248              	.L172:
 2249              	.LBB89:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2250              		.loc 1 3503 0
 2251 000c 044B     		ldr	r3, .L178
 2252 000e E358     		ldr	r3, [r4, r3]
 2253 0010 002B     		cmp	r3, #0
 2254 0012 00D0     		beq	.L171
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2255              		.loc 1 3505 0
 2256 0014 9847     		blx	r3
 2257              	.LVL146:
 2258              	.L171:
 2259 0016 0434     		adds	r4, r4, #4
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2260              		.loc 1 3501 0
 2261 0018 142C     		cmp	r4, #20
 2262 001a F7D1     		bne	.L172
 2263              	.L169:
 2264              	.LBE89:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2265              		.loc 1 3509 0
 2266              		@ sp needed
 2267 001c 10BD     		pop	{r4, pc}
 2268              	.L179:
 2269 001e C046     		.align	2
 2270              	.L178:
 2271 0020 00000000 		.word	.LANCHOR2
 2272              		.cfi_endproc
 2273              	.LFE49:
 2274              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2275              		.section	.text.CySysTickClear,"ax",%progbits
 2276              		.align	1
 2277              		.global	CySysTickClear
 2278              		.code	16
 2279              		.thumb_func
 2280              		.type	CySysTickClear, %function
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 107


 2281              	CySysTickClear:
 2282              	.LFB46:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2283              		.loc 1 3423 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 0
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2288              		.loc 1 3424 0
 2289 0000 0022     		movs	r2, #0
 2290 0002 014B     		ldr	r3, .L181
3425:Generated_Source\PSoC4/CyLib.c **** 
 2291              		.loc 1 3425 0
 2292              		@ sp needed
3424:Generated_Source\PSoC4/CyLib.c **** }
 2293              		.loc 1 3424 0
 2294 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2295              		.loc 1 3425 0
 2296 0006 7047     		bx	lr
 2297              	.L182:
 2298              		.align	2
 2299              	.L181:
 2300 0008 18E000E0 		.word	-536813544
 2301              		.cfi_endproc
 2302              	.LFE46:
 2303              		.size	CySysTickClear, .-CySysTickClear
 2304              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2305              		.align	1
 2306              		.global	CySysTickSetCallback
 2307              		.code	16
 2308              		.thumb_func
 2309              		.type	CySysTickSetCallback, %function
 2310              	CySysTickSetCallback:
 2311              	.LFB47:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2312              		.loc 1 3458 0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              		@ link register save eliminated.
 2317              	.LVL147:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2318              		.loc 1 3461 0
 2319 0000 024A     		ldr	r2, .L184
 2320 0002 8300     		lsls	r3, r0, #2
 2321 0004 9858     		ldr	r0, [r3, r2]
 2322              	.LVL148:
3464:Generated_Source\PSoC4/CyLib.c **** 
 2323              		.loc 1 3464 0
 2324              		@ sp needed
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2325              		.loc 1 3462 0
 2326 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2327              		.loc 1 3464 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 108


 2328 0008 7047     		bx	lr
 2329              	.L185:
 2330 000a C046     		.align	2
 2331              	.L184:
 2332 000c 00000000 		.word	.LANCHOR2
 2333              		.cfi_endproc
 2334              	.LFE47:
 2335              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2336              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2337              		.align	1
 2338              		.global	CySysTickGetCallback
 2339              		.code	16
 2340              		.thumb_func
 2341              		.type	CySysTickGetCallback, %function
 2342              	CySysTickGetCallback:
 2343              	.LFB48:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2344              		.loc 1 3482 0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 0
 2347              		@ frame_needed = 0, uses_anonymous_args = 0
 2348              		@ link register save eliminated.
 2349              	.LVL149:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2350              		.loc 1 3483 0
 2351 0000 014B     		ldr	r3, .L187
 2352 0002 8000     		lsls	r0, r0, #2
 2353              	.LVL150:
 2354 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2355              		.loc 1 3484 0
 2356              		@ sp needed
 2357 0006 7047     		bx	lr
 2358              	.L188:
 2359              		.align	2
 2360              	.L187:
 2361 0008 00000000 		.word	.LANCHOR2
 2362              		.cfi_endproc
 2363              	.LFE48:
 2364              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2365              		.section	.text.CyGetUniqueId,"ax",%progbits
 2366              		.align	1
 2367              		.global	CyGetUniqueId
 2368              		.code	16
 2369              		.thumb_func
 2370              		.type	CyGetUniqueId, %function
 2371              	CyGetUniqueId:
 2372              	.LFB50:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 109


3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2373              		.loc 1 3527 0
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 0
 2376              		@ frame_needed = 0, uses_anonymous_args = 0
 2377              		@ link register save eliminated.
 2378              	.LVL151:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2379              		.loc 1 3529 0
 2380 0000 144B     		ldr	r3, .L190
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2381              		.loc 1 3549 0
 2382              		@ sp needed
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2383              		.loc 1 3529 0
 2384 0002 1A78     		ldrb	r2, [r3]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2385              		.loc 1 3530 0
 2386 0004 144B     		ldr	r3, .L190+4
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2387              		.loc 1 3529 0
 2388 0006 D1B2     		uxtb	r1, r2
 2389 0008 0160     		str	r1, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2390              		.loc 1 3530 0
 2391 000a 1B78     		ldrb	r3, [r3]
 2392 000c 1B02     		lsls	r3, r3, #8
 2393 000e 0B43     		orrs	r3, r1
 2394 0010 1A00     		movs	r2, r3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 110


 2395 0012 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2396              		.loc 1 3531 0
 2397 0014 114B     		ldr	r3, .L190+8
 2398 0016 1B78     		ldrb	r3, [r3]
 2399 0018 1B04     		lsls	r3, r3, #16
 2400 001a 1343     		orrs	r3, r2
3532:Generated_Source\PSoC4/CyLib.c **** 
 2401              		.loc 1 3532 0
 2402 001c 104A     		ldr	r2, .L190+12
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2403              		.loc 1 3531 0
 2404 001e 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c **** 
 2405              		.loc 1 3532 0
 2406 0020 1278     		ldrb	r2, [r2]
 2407 0022 1206     		lsls	r2, r2, #24
 2408 0024 1343     		orrs	r3, r2
 2409 0026 0360     		str	r3, [r0]
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2410              		.loc 1 3534 0
 2411 0028 0E4B     		ldr	r3, .L190+16
 2412 002a 1A78     		ldrb	r2, [r3]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2413              		.loc 1 3535 0
 2414 002c 0E4B     		ldr	r3, .L190+20
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2415              		.loc 1 3534 0
 2416 002e D1B2     		uxtb	r1, r2
 2417 0030 4160     		str	r1, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2418              		.loc 1 3535 0
 2419 0032 1B78     		ldrb	r3, [r3]
 2420 0034 1B02     		lsls	r3, r3, #8
 2421 0036 0B43     		orrs	r3, r1
 2422 0038 1A00     		movs	r2, r3
 2423 003a 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2424              		.loc 1 3536 0
 2425 003c 0B4B     		ldr	r3, .L190+24
 2426 003e 1B78     		ldrb	r3, [r3]
 2427 0040 1B04     		lsls	r3, r3, #16
 2428 0042 1343     		orrs	r3, r2
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2429              		.loc 1 3537 0
 2430 0044 0A4A     		ldr	r2, .L190+28
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2431              		.loc 1 3536 0
 2432 0046 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2433              		.loc 1 3537 0
 2434 0048 1278     		ldrb	r2, [r2]
 2435 004a 1206     		lsls	r2, r2, #24
 2436 004c 1343     		orrs	r3, r2
 2437 004e 4360     		str	r3, [r0, #4]
 2438              		.loc 1 3549 0
 2439 0050 7047     		bx	lr
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 111


 2440              	.L191:
 2441 0052 C046     		.align	2
 2442              	.L190:
 2443 0054 78F1FF0F 		.word	268431736
 2444 0058 79F1FF0F 		.word	268431737
 2445 005c 7AF1FF0F 		.word	268431738
 2446 0060 7BF1FF0F 		.word	268431739
 2447 0064 7CF1FF0F 		.word	268431740
 2448 0068 7DF1FF0F 		.word	268431741
 2449 006c 7EF1FF0F 		.word	268431742
 2450 0070 7FF1FF0F 		.word	268431743
 2451              		.cfi_endproc
 2452              	.LFE50:
 2453              		.size	CyGetUniqueId, .-CyGetUniqueId
 2454              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2455              		.align	1
 2456              		.global	CySysSetRamAccessArbPriority
 2457              		.code	16
 2458              		.thumb_func
 2459              		.type	CySysSetRamAccessArbPriority, %function
 2460              	CySysSetRamAccessArbPriority:
 2461              	.LFB51:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2462              		.loc 1 3572 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL152:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2468              		.loc 1 3575 0
 2469 0000 0549     		ldr	r1, .L193
 2470 0002 064B     		ldr	r3, .L193+4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 112


 2471 0004 0A68     		ldr	r2, [r1]
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2472              		.loc 1 3576 0
 2473 0006 4004     		lsls	r0, r0, #17
 2474              	.LVL153:
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2475              		.loc 1 3575 0
 2476 0008 1340     		ands	r3, r2
 2477              	.LVL154:
 2478              		.loc 1 3576 0
 2479 000a C022     		movs	r2, #192
 2480 000c D202     		lsls	r2, r2, #11
 2481 000e 1040     		ands	r0, r2
 2482 0010 1843     		orrs	r0, r3
 2483              	.LVL155:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2484              		.loc 1 3577 0
 2485 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 2486              		.loc 1 3578 0
 2487              		@ sp needed
 2488 0014 7047     		bx	lr
 2489              	.L194:
 2490 0016 C046     		.align	2
 2491              	.L193:
 2492 0018 38001040 		.word	1074790456
 2493 001c FFFFF9FF 		.word	-393217
 2494              		.cfi_endproc
 2495              	.LFE51:
 2496              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2497              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2498              		.align	1
 2499              		.global	CySysSetFlashAccessArbPriority
 2500              		.code	16
 2501              		.thumb_func
 2502              		.type	CySysSetFlashAccessArbPriority, %function
 2503              	CySysSetFlashAccessArbPriority:
 2504              	.LFB52:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 113


3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2505              		.loc 1 3600 0
 2506              		.cfi_startproc
 2507              		@ args = 0, pretend = 0, frame = 0
 2508              		@ frame_needed = 0, uses_anonymous_args = 0
 2509              		@ link register save eliminated.
 2510              	.LVL156:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2511              		.loc 1 3603 0
 2512 0000 0549     		ldr	r1, .L196
 2513 0002 064B     		ldr	r3, .L196+4
 2514 0004 0A68     		ldr	r2, [r1]
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2515              		.loc 1 3604 0
 2516 0006 4004     		lsls	r0, r0, #17
 2517              	.LVL157:
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2518              		.loc 1 3603 0
 2519 0008 1340     		ands	r3, r2
 2520              	.LVL158:
 2521              		.loc 1 3604 0
 2522 000a C022     		movs	r2, #192
 2523 000c D202     		lsls	r2, r2, #11
 2524 000e 1040     		ands	r0, r2
 2525 0010 1843     		orrs	r0, r3
 2526              	.LVL159:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2527              		.loc 1 3605 0
 2528 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2529              		.loc 1 3606 0
 2530              		@ sp needed
 2531 0014 7047     		bx	lr
 2532              	.L197:
 2533 0016 C046     		.align	2
 2534              	.L196:
 2535 0018 30001040 		.word	1074790448
 2536 001c FFFFF9FF 		.word	-393217
 2537              		.cfi_endproc
 2538              	.LFE52:
 2539              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2540              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2541              		.align	1
 2542              		.global	CySysSetDmacAccessArbPriority
 2543              		.code	16
 2544              		.thumb_func
 2545              		.type	CySysSetDmacAccessArbPriority, %function
 2546              	CySysSetDmacAccessArbPriority:
 2547              	.LFB53:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 114


3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2548              		.loc 1 3628 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 0
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 2553              	.LVL160:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2554              		.loc 1 3631 0
 2555 0000 0549     		ldr	r1, .L199
 2556 0002 064B     		ldr	r3, .L199+4
 2557 0004 0A68     		ldr	r2, [r1]
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2558              		.loc 1 3632 0
 2559 0006 4004     		lsls	r0, r0, #17
 2560              	.LVL161:
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2561              		.loc 1 3631 0
 2562 0008 1340     		ands	r3, r2
 2563              	.LVL162:
 2564              		.loc 1 3632 0
 2565 000a C022     		movs	r2, #192
 2566 000c D202     		lsls	r2, r2, #11
 2567 000e 1040     		ands	r0, r2
 2568 0010 1843     		orrs	r0, r3
 2569              	.LVL163:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2570              		.loc 1 3633 0
 2571 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2572              		.loc 1 3634 0
 2573              		@ sp needed
 2574 0014 7047     		bx	lr
 2575              	.L200:
 2576 0016 C046     		.align	2
 2577              	.L199:
 2578 0018 3C001040 		.word	1074790460
 2579 001c FFFFF9FF 		.word	-393217
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 115


 2580              		.cfi_endproc
 2581              	.LFE53:
 2582              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2583              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2584              		.align	1
 2585              		.global	CySysSetPeripheralAccessArbPriority
 2586              		.code	16
 2587              		.thumb_func
 2588              		.type	CySysSetPeripheralAccessArbPriority, %function
 2589              	CySysSetPeripheralAccessArbPriority:
 2590              	.LFB54:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2591              		.loc 1 3658 0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595              		@ link register save eliminated.
 2596              	.LVL164:
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2597              		.loc 1 3661 0
 2598 0000 0028     		cmp	r0, #0
 2599 0002 01D1     		bne	.L202
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2600              		.loc 1 3663 0
 2601 0004 0A48     		ldr	r0, .L207
 2602              	.LVL165:
 2603 0006 06E0     		b	.L206
 2604              	.LVL166:
 2605              	.L202:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 116


3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2606              		.loc 1 3668 0
 2607 0008 0128     		cmp	r0, #1
 2608 000a 01D1     		bne	.L204
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2609              		.loc 1 3670 0
 2610 000c 0948     		ldr	r0, .L207+4
 2611              	.LVL167:
 2612 000e 02E0     		b	.L206
 2613              	.LVL168:
 2614              	.L204:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2615              		.loc 1 3676 0
 2616 0010 0228     		cmp	r0, #2
 2617 0012 0AD1     		bne	.L205
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2618              		.loc 1 3678 0
 2619 0014 0848     		ldr	r0, .L207+8
 2620              	.LVL169:
 2621              	.L206:
 2622 0016 0268     		ldr	r2, [r0]
 2623 0018 084B     		ldr	r3, .L207+12
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2624              		.loc 1 3679 0
 2625 001a 4904     		lsls	r1, r1, #17
 2626              	.LVL170:
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2627              		.loc 1 3678 0
 2628 001c 1340     		ands	r3, r2
 2629              	.LVL171:
 2630              		.loc 1 3679 0
 2631 001e C022     		movs	r2, #192
 2632 0020 D202     		lsls	r2, r2, #11
 2633 0022 1140     		ands	r1, r2
 2634 0024 1943     		orrs	r1, r3
 2635              	.LVL172:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2636              		.loc 1 3680 0
 2637 0026 0160     		str	r1, [r0]
 2638 0028 00E0     		b	.L201
 2639              	.LVL173:
 2640              	.L205:
 2641              	.LBB90:
 2642              	.LBB91:
3069:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 2643              		.loc 1 3069 0
 2644              		.syntax divided
 2645              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 117


 2646 002a 01BE     		    bkpt    1
 2647              	@ 0 "" 2
 2648              	.LVL174:
 2649              		.thumb
 2650              		.syntax unified
 2651              	.L201:
 2652              	.LBE91:
 2653              	.LBE90:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2654              		.loc 1 3687 0
 2655              		@ sp needed
 2656 002c 7047     		bx	lr
 2657              	.L208:
 2658 002e C046     		.align	2
 2659              	.L207:
 2660 0030 00011040 		.word	1074790656
 2661 0034 04011040 		.word	1074790660
 2662 0038 08011040 		.word	1074790664
 2663 003c FFFFF9FF 		.word	-393217
 2664              		.cfi_endproc
 2665              	.LFE54:
 2666              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2667              		.global	CySysClkPumpConfig
 2668              		.global	cyImoFreqMhz2Reg
 2669              		.global	CySysTickInitVar
 2670              		.global	cydelay32kMs
 2671              		.global	cydelayFreqMhz
 2672              		.global	cydelayFreqKhz
 2673              		.global	cydelayFreqHz
 2674              		.section	.rodata
 2675              		.set	.LANCHOR0,. + 0
 2676              		.type	cyImoFreqMhz2Reg, %object
 2677              		.size	cyImoFreqMhz2Reg, 46
 2678              	cyImoFreqMhz2Reg:
 2679 0000 03       		.byte	3
 2680 0001 04       		.byte	4
 2681 0002 05       		.byte	5
 2682 0003 06       		.byte	6
 2683 0004 07       		.byte	7
 2684 0005 08       		.byte	8
 2685 0006 09       		.byte	9
 2686 0007 0A       		.byte	10
 2687 0008 0B       		.byte	11
 2688 0009 0C       		.byte	12
 2689 000a 0E       		.byte	14
 2690 000b 0F       		.byte	15
 2691 000c 10       		.byte	16
 2692 000d 11       		.byte	17
 2693 000e 12       		.byte	18
 2694 000f 13       		.byte	19
 2695 0010 14       		.byte	20
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 118


 2696 0011 15       		.byte	21
 2697 0012 16       		.byte	22
 2698 0013 17       		.byte	23
 2699 0014 18       		.byte	24
 2700 0015 19       		.byte	25
 2701 0016 1B       		.byte	27
 2702 0017 1C       		.byte	28
 2703 0018 1D       		.byte	29
 2704 0019 1E       		.byte	30
 2705 001a 1F       		.byte	31
 2706 001b 20       		.byte	32
 2707 001c 21       		.byte	33
 2708 001d 22       		.byte	34
 2709 001e 23       		.byte	35
 2710 001f 25       		.byte	37
 2711 0020 26       		.byte	38
 2712 0021 27       		.byte	39
 2713 0022 28       		.byte	40
 2714 0023 29       		.byte	41
 2715 0024 2A       		.byte	42
 2716 0025 2B       		.byte	43
 2717 0026 2E       		.byte	46
 2718 0027 2F       		.byte	47
 2719 0028 30       		.byte	48
 2720 0029 31       		.byte	49
 2721 002a 32       		.byte	50
 2722 002b 33       		.byte	51
 2723 002c 34       		.byte	52
 2724 002d 35       		.byte	53
 2725              		.data
 2726              		.align	2
 2727              		.set	.LANCHOR1,. + 0
 2728              		.type	CySysClkPumpConfig, %object
 2729              		.size	CySysClkPumpConfig, 4
 2730              	CySysClkPumpConfig:
 2731 0000 01000000 		.word	1
 2732              		.type	cydelay32kMs, %object
 2733              		.size	cydelay32kMs, 4
 2734              	cydelay32kMs:
 2735 0004 0000C05D 		.word	1572864000
 2736              		.type	cydelayFreqKhz, %object
 2737              		.size	cydelayFreqKhz, 4
 2738              	cydelayFreqKhz:
 2739 0008 80BB0000 		.word	48000
 2740              		.type	cydelayFreqMhz, %object
 2741              		.size	cydelayFreqMhz, 1
 2742              	cydelayFreqMhz:
 2743 000c 30       		.byte	48
 2744 000d 000000   		.space	3
 2745              		.type	cydelayFreqHz, %object
 2746              		.size	cydelayFreqHz, 4
 2747              	cydelayFreqHz:
 2748 0010 006CDC02 		.word	48000000
 2749              		.bss
 2750              		.align	2
 2751              		.set	.LANCHOR2,. + 0
 2752              		.type	CySysTickCallbacks, %object
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 119


 2753              		.size	CySysTickCallbacks, 20
 2754              	CySysTickCallbacks:
 2755 0000 00000000 		.space	20
 2755      00000000 
 2755      00000000 
 2755      00000000 
 2755      00000000 
 2756              		.type	CySysTickInitVar, %object
 2757              		.size	CySysTickInitVar, 4
 2758              	CySysTickInitVar:
 2759 0014 00000000 		.space	4
 2760              		.text
 2761              	.Letext0:
 2762              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2763              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2764              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2765              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2766              		.section	.debug_info,"",%progbits
 2767              	.Ldebug_info0:
 2768 0000 CF0E0000 		.4byte	0xecf
 2769 0004 0400     		.2byte	0x4
 2770 0006 00000000 		.4byte	.Ldebug_abbrev0
 2771 000a 04       		.byte	0x4
 2772 000b 01       		.uleb128 0x1
 2773 000c 86040000 		.4byte	.LASF119
 2774 0010 0C       		.byte	0xc
 2775 0011 96070000 		.4byte	.LASF120
 2776 0015 52000000 		.4byte	.LASF121
 2777 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2778 001d 00000000 		.4byte	0
 2779 0021 00000000 		.4byte	.Ldebug_line0
 2780 0025 02       		.uleb128 0x2
 2781 0026 01       		.byte	0x1
 2782 0027 06       		.byte	0x6
 2783 0028 26010000 		.4byte	.LASF0
 2784 002c 02       		.uleb128 0x2
 2785 002d 01       		.byte	0x1
 2786 002e 08       		.byte	0x8
 2787 002f 06060000 		.4byte	.LASF1
 2788 0033 02       		.uleb128 0x2
 2789 0034 02       		.byte	0x2
 2790 0035 05       		.byte	0x5
 2791 0036 14060000 		.4byte	.LASF2
 2792 003a 02       		.uleb128 0x2
 2793 003b 02       		.byte	0x2
 2794 003c 07       		.byte	0x7
 2795 003d 48030000 		.4byte	.LASF3
 2796 0041 02       		.uleb128 0x2
 2797 0042 04       		.byte	0x4
 2798 0043 05       		.byte	0x5
 2799 0044 8B010000 		.4byte	.LASF4
 2800 0048 02       		.uleb128 0x2
 2801 0049 04       		.byte	0x4
 2802 004a 07       		.byte	0x7
 2803 004b BB020000 		.4byte	.LASF5
 2804 004f 02       		.uleb128 0x2
 2805 0050 08       		.byte	0x8
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 120


 2806 0051 05       		.byte	0x5
 2807 0052 18010000 		.4byte	.LASF6
 2808 0056 02       		.uleb128 0x2
 2809 0057 08       		.byte	0x8
 2810 0058 07       		.byte	0x7
 2811 0059 A2000000 		.4byte	.LASF7
 2812 005d 03       		.uleb128 0x3
 2813 005e 04       		.byte	0x4
 2814 005f 05       		.byte	0x5
 2815 0060 696E7400 		.ascii	"int\000"
 2816 0064 02       		.uleb128 0x2
 2817 0065 04       		.byte	0x4
 2818 0066 07       		.byte	0x7
 2819 0067 9F020000 		.4byte	.LASF8
 2820 006b 04       		.uleb128 0x4
 2821 006c C0010000 		.4byte	.LASF9
 2822 0070 02       		.byte	0x2
 2823 0071 FC01     		.2byte	0x1fc
 2824 0073 2C000000 		.4byte	0x2c
 2825 0077 04       		.uleb128 0x4
 2826 0078 0F000000 		.4byte	.LASF10
 2827 007c 02       		.byte	0x2
 2828 007d FD01     		.2byte	0x1fd
 2829 007f 3A000000 		.4byte	0x3a
 2830 0083 04       		.uleb128 0x4
 2831 0084 00020000 		.4byte	.LASF11
 2832 0088 02       		.byte	0x2
 2833 0089 FE01     		.2byte	0x1fe
 2834 008b 48000000 		.4byte	0x48
 2835 008f 02       		.uleb128 0x2
 2836 0090 04       		.byte	0x4
 2837 0091 04       		.byte	0x4
 2838 0092 6C050000 		.4byte	.LASF12
 2839 0096 02       		.uleb128 0x2
 2840 0097 08       		.byte	0x8
 2841 0098 04       		.byte	0x4
 2842 0099 DC010000 		.4byte	.LASF13
 2843 009d 02       		.uleb128 0x2
 2844 009e 01       		.byte	0x1
 2845 009f 08       		.byte	0x8
 2846 00a0 57060000 		.4byte	.LASF14
 2847 00a4 04       		.uleb128 0x4
 2848 00a5 D3050000 		.4byte	.LASF15
 2849 00a9 02       		.byte	0x2
 2850 00aa A602     		.2byte	0x2a6
 2851 00ac B0000000 		.4byte	0xb0
 2852 00b0 05       		.uleb128 0x5
 2853 00b1 6B000000 		.4byte	0x6b
 2854 00b5 04       		.uleb128 0x4
 2855 00b6 F9030000 		.4byte	.LASF16
 2856 00ba 02       		.byte	0x2
 2857 00bb A802     		.2byte	0x2a8
 2858 00bd C1000000 		.4byte	0xc1
 2859 00c1 05       		.uleb128 0x5
 2860 00c2 83000000 		.4byte	0x83
 2861 00c6 04       		.uleb128 0x4
 2862 00c7 5C060000 		.4byte	.LASF17
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 121


 2863 00cb 02       		.byte	0x2
 2864 00cc B802     		.2byte	0x2b8
 2865 00ce D2000000 		.4byte	0xd2
 2866 00d2 06       		.uleb128 0x6
 2867 00d3 04       		.byte	0x4
 2868 00d4 D8000000 		.4byte	0xd8
 2869 00d8 07       		.uleb128 0x7
 2870 00d9 02       		.uleb128 0x2
 2871 00da 08       		.byte	0x8
 2872 00db 04       		.byte	0x4
 2873 00dc 72040000 		.4byte	.LASF18
 2874 00e0 02       		.uleb128 0x2
 2875 00e1 04       		.byte	0x4
 2876 00e2 07       		.byte	0x7
 2877 00e3 22040000 		.4byte	.LASF19
 2878 00e7 04       		.uleb128 0x4
 2879 00e8 97050000 		.4byte	.LASF20
 2880 00ec 03       		.byte	0x3
 2881 00ed 0801     		.2byte	0x108
 2882 00ef D2000000 		.4byte	0xd2
 2883 00f3 08       		.uleb128 0x8
 2884 00f4 E2050000 		.4byte	.LASF21
 2885 00f8 01       		.byte	0x1
 2886 00f9 F30B     		.2byte	0xbf3
 2887 00fb 01       		.byte	0x1
 2888 00fc 0D010000 		.4byte	0x10d
 2889 0100 09       		.uleb128 0x9
 2890 0101 50060000 		.4byte	.LASF29
 2891 0105 01       		.byte	0x1
 2892 0106 F30B     		.2byte	0xbf3
 2893 0108 6B000000 		.4byte	0x6b
 2894 010c 00       		.byte	0
 2895 010d 0A       		.uleb128 0xa
 2896 010e 24020000 		.4byte	.LASF22
 2897 0112 01       		.byte	0x1
 2898 0113 AE       		.byte	0xae
 2899 0114 01       		.byte	0x1
 2900 0115 5A010000 		.4byte	0x15a
 2901 0119 0B       		.uleb128 0xb
 2902 011a 6900     		.ascii	"i\000"
 2903 011c 01       		.byte	0x1
 2904 011d B1       		.byte	0xb1
 2905 011e 83000000 		.4byte	0x83
 2906 0122 0C       		.uleb128 0xc
 2907 0123 32010000 		.4byte	.LASF23
 2908 0127 01       		.byte	0x1
 2909 0128 B4       		.byte	0xb4
 2910 0129 83000000 		.4byte	0x83
 2911 012d 0C       		.uleb128 0xc
 2912 012e 43010000 		.4byte	.LASF24
 2913 0132 01       		.byte	0x1
 2914 0133 B5       		.byte	0xb5
 2915 0134 6B000000 		.4byte	0x6b
 2916 0138 0C       		.uleb128 0xc
 2917 0139 5B030000 		.4byte	.LASF25
 2918 013d 01       		.byte	0x1
 2919 013e B6       		.byte	0xb6
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 122


 2920 013f 83000000 		.4byte	0x83
 2921 0143 0C       		.uleb128 0xc
 2922 0144 52010000 		.4byte	.LASF26
 2923 0148 01       		.byte	0x1
 2924 0149 B7       		.byte	0xb7
 2925 014a 83000000 		.4byte	0x83
 2926 014e 0C       		.uleb128 0xc
 2927 014f C1060000 		.4byte	.LASF27
 2928 0153 01       		.byte	0x1
 2929 0154 B8       		.byte	0xb8
 2930 0155 C1000000 		.4byte	0xc1
 2931 0159 00       		.byte	0
 2932 015a 0D       		.uleb128 0xd
 2933 015b E9010000 		.4byte	.LASF31
 2934 015f 01       		.byte	0x1
 2935 0160 A60A     		.2byte	0xaa6
 2936 0162 01       		.byte	0x1
 2937 0163 08       		.uleb128 0x8
 2938 0164 62030000 		.4byte	.LASF28
 2939 0168 01       		.byte	0x1
 2940 0169 210D     		.2byte	0xd21
 2941 016b 01       		.byte	0x1
 2942 016c 7D010000 		.4byte	0x17d
 2943 0170 09       		.uleb128 0x9
 2944 0171 6F020000 		.4byte	.LASF30
 2945 0175 01       		.byte	0x1
 2946 0176 210D     		.2byte	0xd21
 2947 0178 83000000 		.4byte	0x83
 2948 017c 00       		.byte	0
 2949 017d 0E       		.uleb128 0xe
 2950 017e DC070000 		.4byte	.LASF122
 2951 0182 01       		.byte	0x1
 2952 0183 A60D     		.2byte	0xda6
 2953 0185 01       		.byte	0x1
 2954 0186 95010000 		.4byte	0x195
 2955 018a 0F       		.uleb128 0xf
 2956 018b 6900     		.ascii	"i\000"
 2957 018d 01       		.byte	0x1
 2958 018e A80D     		.2byte	0xda8
 2959 0190 83000000 		.4byte	0x83
 2960 0194 00       		.byte	0
 2961 0195 0D       		.uleb128 0xd
 2962 0196 AC020000 		.4byte	.LASF32
 2963 019a 01       		.byte	0x1
 2964 019b 5E0D     		.2byte	0xd5e
 2965 019d 01       		.byte	0x1
 2966 019e 08       		.uleb128 0x8
 2967 019f C9070000 		.4byte	.LASF33
 2968 01a3 01       		.byte	0x1
 2969 01a4 E10C     		.2byte	0xce1
 2970 01a6 01       		.byte	0x1
 2971 01a7 B8010000 		.4byte	0x1b8
 2972 01ab 09       		.uleb128 0x9
 2973 01ac 69020000 		.4byte	.LASF34
 2974 01b0 01       		.byte	0x1
 2975 01b1 E10C     		.2byte	0xce1
 2976 01b3 83000000 		.4byte	0x83
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 123


 2977 01b7 00       		.byte	0
 2978 01b8 10       		.uleb128 0x10
 2979 01b9 CD030000 		.4byte	.LASF123
 2980 01bd 01       		.byte	0x1
 2981 01be 070B     		.2byte	0xb07
 2982 01c0 C6000000 		.4byte	0xc6
 2983 01c4 01       		.byte	0x1
 2984 01c5 FA010000 		.4byte	0x1fa
 2985 01c9 09       		.uleb128 0x9
 2986 01ca 89030000 		.4byte	.LASF35
 2987 01ce 01       		.byte	0x1
 2988 01cf 070B     		.2byte	0xb07
 2989 01d1 6B000000 		.4byte	0x6b
 2990 01d5 09       		.uleb128 0x9
 2991 01d6 7E040000 		.4byte	.LASF36
 2992 01da 01       		.byte	0x1
 2993 01db 070B     		.2byte	0xb07
 2994 01dd C6000000 		.4byte	0xc6
 2995 01e1 11       		.uleb128 0x11
 2996 01e2 4B000000 		.4byte	.LASF37
 2997 01e6 01       		.byte	0x1
 2998 01e7 090B     		.2byte	0xb09
 2999 01e9 C6000000 		.4byte	0xc6
 3000 01ed 11       		.uleb128 0x11
 3001 01ee 00000000 		.4byte	.LASF38
 3002 01f2 01       		.byte	0x1
 3003 01f3 0A0B     		.2byte	0xb0a
 3004 01f5 FA010000 		.4byte	0x1fa
 3005 01f9 00       		.byte	0
 3006 01fa 06       		.uleb128 0x6
 3007 01fb 04       		.byte	0x4
 3008 01fc C6000000 		.4byte	0xc6
 3009 0200 12       		.uleb128 0x12
 3010 0201 6D070000 		.4byte	.LASF49
 3011 0205 01       		.byte	0x1
 3012 0206 69       		.byte	0x69
 3013 0207 00000000 		.4byte	.LFB1
 3014 020b 14000000 		.4byte	.LFE1-.LFB1
 3015 020f 01       		.uleb128 0x1
 3016 0210 9C       		.byte	0x9c
 3017 0211 13       		.uleb128 0x13
 3018 0212 DF030000 		.4byte	.LASF39
 3019 0216 01       		.byte	0x1
 3020 0217 1B01     		.2byte	0x11b
 3021 0219 00000000 		.4byte	.LFB4
 3022 021d 50000000 		.4byte	.LFE4-.LFB4
 3023 0221 01       		.uleb128 0x1
 3024 0222 9C       		.byte	0x9c
 3025 0223 46020000 		.4byte	0x246
 3026 0227 14       		.uleb128 0x14
 3027 0228 6900     		.ascii	"i\000"
 3028 022a 01       		.byte	0x1
 3029 022b 1E01     		.2byte	0x11e
 3030 022d 83000000 		.4byte	0x83
 3031 0231 00000000 		.4byte	.LLST0
 3032 0235 15       		.uleb128 0x15
 3033 0236 32010000 		.4byte	.LASF23
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 124


 3034 023a 01       		.byte	0x1
 3035 023b 2101     		.2byte	0x121
 3036 023d 83000000 		.4byte	0x83
 3037 0241 37000000 		.4byte	.LLST1
 3038 0245 00       		.byte	0
 3039 0246 16       		.uleb128 0x16
 3040 0247 E8020000 		.4byte	.LASF40
 3041 024b 01       		.byte	0x1
 3042 024c 8A       		.byte	0x8a
 3043 024d 00000000 		.4byte	.LFB2
 3044 0251 18000000 		.4byte	.LFE2-.LFB2
 3045 0255 01       		.uleb128 0x1
 3046 0256 9C       		.byte	0x9c
 3047 0257 65020000 		.4byte	0x265
 3048 025b 17       		.uleb128 0x17
 3049 025c 06000000 		.4byte	.LVL8
 3050 0260 11020000 		.4byte	0x211
 3051 0264 00       		.byte	0
 3052 0265 18       		.uleb128 0x18
 3053 0266 6D010000 		.4byte	.LASF51
 3054 026a 01       		.byte	0x1
 3055 026b 5301     		.2byte	0x153
 3056 026d 83000000 		.4byte	0x83
 3057 0271 00000000 		.4byte	.LFB5
 3058 0275 10000000 		.4byte	.LFE5-.LFB5
 3059 0279 01       		.uleb128 0x1
 3060 027a 9C       		.byte	0x9c
 3061 027b 13       		.uleb128 0x13
 3062 027c 1F000000 		.4byte	.LASF41
 3063 0280 01       		.byte	0x1
 3064 0281 4802     		.2byte	0x248
 3065 0283 00000000 		.4byte	.LFB6
 3066 0287 20000000 		.4byte	.LFE6-.LFB6
 3067 028b 01       		.uleb128 0x1
 3068 028c 9C       		.byte	0x9c
 3069 028d D4020000 		.4byte	0x2d4
 3070 0291 19       		.uleb128 0x19
 3071 0292 3C060000 		.4byte	.LASF44
 3072 0296 01       		.byte	0x1
 3073 0297 4802     		.2byte	0x248
 3074 0299 83000000 		.4byte	0x83
 3075 029d 7E000000 		.4byte	.LLST2
 3076 02a1 15       		.uleb128 0x15
 3077 02a2 43010000 		.4byte	.LASF24
 3078 02a6 01       		.byte	0x1
 3079 02a7 4A02     		.2byte	0x24a
 3080 02a9 6B000000 		.4byte	0x6b
 3081 02ad AA000000 		.4byte	.LLST3
 3082 02b1 15       		.uleb128 0x15
 3083 02b2 C2070000 		.4byte	.LASF42
 3084 02b6 01       		.byte	0x1
 3085 02b7 4B02     		.2byte	0x24b
 3086 02b9 83000000 		.4byte	0x83
 3087 02bd BD000000 		.4byte	.LLST4
 3088 02c1 17       		.uleb128 0x17
 3089 02c2 08000000 		.4byte	.LVL10
 3090 02c6 9B0E0000 		.4byte	0xe9b
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 125


 3091 02ca 17       		.uleb128 0x17
 3092 02cb 1A000000 		.4byte	.LVL13
 3093 02cf A60E0000 		.4byte	0xea6
 3094 02d3 00       		.byte	0
 3095 02d4 13       		.uleb128 0x13
 3096 02d5 AB010000 		.4byte	.LASF43
 3097 02d9 01       		.byte	0x1
 3098 02da 9502     		.2byte	0x295
 3099 02dc 00000000 		.4byte	.LFB7
 3100 02e0 34000000 		.4byte	.LFE7-.LFB7
 3101 02e4 01       		.uleb128 0x1
 3102 02e5 9C       		.byte	0x9c
 3103 02e6 F9020000 		.4byte	0x2f9
 3104 02ea 1A       		.uleb128 0x1a
 3105 02eb D5010000 		.4byte	.LASF45
 3106 02ef 01       		.byte	0x1
 3107 02f0 9502     		.2byte	0x295
 3108 02f2 83000000 		.4byte	0x83
 3109 02f6 01       		.uleb128 0x1
 3110 02f7 50       		.byte	0x50
 3111 02f8 00       		.byte	0
 3112 02f9 1B       		.uleb128 0x1b
 3113 02fa 0C020000 		.4byte	.LASF53
 3114 02fe 01       		.byte	0x1
 3115 02ff BA02     		.2byte	0x2ba
 3116 0301 83000000 		.4byte	0x83
 3117 0305 00000000 		.4byte	.LFB8
 3118 0309 18000000 		.4byte	.LFE8-.LFB8
 3119 030d 01       		.uleb128 0x1
 3120 030e 9C       		.byte	0x9c
 3121 030f 46030000 		.4byte	0x346
 3122 0313 15       		.uleb128 0x15
 3123 0314 43010000 		.4byte	.LASF24
 3124 0318 01       		.byte	0x1
 3125 0319 BC02     		.2byte	0x2bc
 3126 031b 6B000000 		.4byte	0x6b
 3127 031f DB000000 		.4byte	.LLST5
 3128 0323 15       		.uleb128 0x15
 3129 0324 14050000 		.4byte	.LASF46
 3130 0328 01       		.byte	0x1
 3131 0329 BD02     		.2byte	0x2bd
 3132 032b 83000000 		.4byte	0x83
 3133 032f EE000000 		.4byte	.LLST6
 3134 0333 17       		.uleb128 0x17
 3135 0334 06000000 		.4byte	.LVL16
 3136 0338 9B0E0000 		.4byte	0xe9b
 3137 033c 17       		.uleb128 0x17
 3138 033d 0E000000 		.4byte	.LVL18
 3139 0341 A60E0000 		.4byte	0xea6
 3140 0345 00       		.byte	0
 3141 0346 13       		.uleb128 0x13
 3142 0347 79060000 		.4byte	.LASF47
 3143 034b 01       		.byte	0x1
 3144 034c F702     		.2byte	0x2f7
 3145 034e 00000000 		.4byte	.LFB9
 3146 0352 2C000000 		.4byte	.LFE9-.LFB9
 3147 0356 01       		.uleb128 0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 126


 3148 0357 9C       		.byte	0x9c
 3149 0358 8F030000 		.4byte	0x38f
 3150 035c 19       		.uleb128 0x19
 3151 035d 65070000 		.4byte	.LASF48
 3152 0361 01       		.byte	0x1
 3153 0362 F702     		.2byte	0x2f7
 3154 0364 83000000 		.4byte	0x83
 3155 0368 10010000 		.4byte	.LLST7
 3156 036c 15       		.uleb128 0x15
 3157 036d 43010000 		.4byte	.LASF24
 3158 0371 01       		.byte	0x1
 3159 0372 F902     		.2byte	0x2f9
 3160 0374 6B000000 		.4byte	0x6b
 3161 0378 3C010000 		.4byte	.LLST8
 3162 037c 17       		.uleb128 0x17
 3163 037d 08000000 		.4byte	.LVL21
 3164 0381 9B0E0000 		.4byte	0xe9b
 3165 0385 17       		.uleb128 0x17
 3166 0386 22000000 		.4byte	.LVL23
 3167 038a A60E0000 		.4byte	0xea6
 3168 038e 00       		.byte	0
 3169 038f 1C       		.uleb128 0x1c
 3170 0390 07070000 		.4byte	.LASF50
 3171 0394 01       		.byte	0x1
 3172 0395 840A     		.2byte	0xa84
 3173 0397 00000000 		.4byte	.LFB12
 3174 039b 20000000 		.4byte	.LFE12-.LFB12
 3175 039f 01       		.uleb128 0x1
 3176 03a0 9C       		.byte	0x9c
 3177 03a1 18       		.uleb128 0x18
 3178 03a2 CD020000 		.4byte	.LASF52
 3179 03a6 01       		.byte	0x1
 3180 03a7 960A     		.2byte	0xa96
 3181 03a9 83000000 		.4byte	0x83
 3182 03ad 00000000 		.4byte	.LFB13
 3183 03b1 10000000 		.4byte	.LFE13-.LFB13
 3184 03b5 01       		.uleb128 0x1
 3185 03b6 9C       		.byte	0x9c
 3186 03b7 1D       		.uleb128 0x1d
 3187 03b8 5A010000 		.4byte	0x15a
 3188 03bc 00000000 		.4byte	.LFB14
 3189 03c0 0C000000 		.4byte	.LFE14-.LFB14
 3190 03c4 01       		.uleb128 0x1
 3191 03c5 9C       		.byte	0x9c
 3192 03c6 1B       		.uleb128 0x1b
 3193 03c7 34030000 		.4byte	.LASF54
 3194 03cb 01       		.byte	0x1
 3195 03cc C00A     		.2byte	0xac0
 3196 03ce 83000000 		.4byte	0x83
 3197 03d2 00000000 		.4byte	.LFB15
 3198 03d6 14000000 		.4byte	.LFE15-.LFB15
 3199 03da 01       		.uleb128 0x1
 3200 03db 9C       		.byte	0x9c
 3201 03dc 01040000 		.4byte	0x401
 3202 03e0 19       		.uleb128 0x19
 3203 03e1 50060000 		.4byte	.LASF29
 3204 03e5 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 127


 3205 03e6 C00A     		.2byte	0xac0
 3206 03e8 83000000 		.4byte	0x83
 3207 03ec 4F010000 		.4byte	.LLST9
 3208 03f0 15       		.uleb128 0x15
 3209 03f1 0E040000 		.4byte	.LASF55
 3210 03f5 01       		.byte	0x1
 3211 03f6 C20A     		.2byte	0xac2
 3212 03f8 83000000 		.4byte	0x83
 3213 03fc 6D010000 		.4byte	.LLST10
 3214 0400 00       		.byte	0
 3215 0401 1B       		.uleb128 0x1b
 3216 0402 94000000 		.4byte	.LASF56
 3217 0406 01       		.byte	0x1
 3218 0407 D70A     		.2byte	0xad7
 3219 0409 83000000 		.4byte	0x83
 3220 040d 00000000 		.4byte	.LFB16
 3221 0411 10000000 		.4byte	.LFE16-.LFB16
 3222 0415 01       		.uleb128 0x1
 3223 0416 9C       		.byte	0x9c
 3224 0417 2A040000 		.4byte	0x42a
 3225 041b 1E       		.uleb128 0x1e
 3226 041c 16000000 		.4byte	.LASF57
 3227 0420 01       		.byte	0x1
 3228 0421 D90A     		.2byte	0xad9
 3229 0423 83000000 		.4byte	0x83
 3230 0427 01       		.uleb128 0x1
 3231 0428 50       		.byte	0x50
 3232 0429 00       		.byte	0
 3233 042a 13       		.uleb128 0x13
 3234 042b C4000000 		.4byte	.LASF58
 3235 042f 01       		.byte	0x1
 3236 0430 EE0A     		.2byte	0xaee
 3237 0432 00000000 		.4byte	.LFB17
 3238 0436 0C000000 		.4byte	.LFE17-.LFB17
 3239 043a 01       		.uleb128 0x1
 3240 043b 9C       		.byte	0x9c
 3241 043c 4F040000 		.4byte	0x44f
 3242 0440 1A       		.uleb128 0x1a
 3243 0441 07020000 		.4byte	.LASF59
 3244 0445 01       		.byte	0x1
 3245 0446 EE0A     		.2byte	0xaee
 3246 0448 83000000 		.4byte	0x83
 3247 044c 01       		.uleb128 0x1
 3248 044d 50       		.byte	0x50
 3249 044e 00       		.byte	0
 3250 044f 1F       		.uleb128 0x1f
 3251 0450 B8010000 		.4byte	0x1b8
 3252 0454 00000000 		.4byte	.LFB18
 3253 0458 14000000 		.4byte	.LFE18-.LFB18
 3254 045c 01       		.uleb128 0x1
 3255 045d 9C       		.byte	0x9c
 3256 045e 9D040000 		.4byte	0x49d
 3257 0462 20       		.uleb128 0x20
 3258 0463 C9010000 		.4byte	0x1c9
 3259 0467 8F010000 		.4byte	.LLST11
 3260 046b 21       		.uleb128 0x21
 3261 046c D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 128


 3262 0470 01       		.uleb128 0x1
 3263 0471 51       		.byte	0x51
 3264 0472 22       		.uleb128 0x22
 3265 0473 E1010000 		.4byte	0x1e1
 3266 0477 01       		.uleb128 0x1
 3267 0478 50       		.byte	0x50
 3268 0479 23       		.uleb128 0x23
 3269 047a ED010000 		.4byte	0x1ed
 3270 047e 00000020 		.4byte	0x20000000
 3271 0482 24       		.uleb128 0x24
 3272 0483 F3000000 		.4byte	0xf3
 3273 0487 04000000 		.4byte	.LBB30
 3274 048b 02000000 		.4byte	.LBE30-.LBB30
 3275 048f 01       		.byte	0x1
 3276 0490 0C0B     		.2byte	0xb0c
 3277 0492 20       		.uleb128 0x20
 3278 0493 00010000 		.4byte	0x100
 3279 0497 B0010000 		.4byte	.LLST12
 3280 049b 00       		.byte	0
 3281 049c 00       		.byte	0
 3282 049d 1B       		.uleb128 0x1b
 3283 049e 2A060000 		.4byte	.LASF60
 3284 04a2 01       		.byte	0x1
 3285 04a3 290B     		.2byte	0xb29
 3286 04a5 C6000000 		.4byte	0xc6
 3287 04a9 00000000 		.4byte	.LFB19
 3288 04ad 12000000 		.4byte	.LFE19-.LFB19
 3289 04b1 01       		.uleb128 0x1
 3290 04b2 9C       		.byte	0x9c
 3291 04b3 F2040000 		.4byte	0x4f2
 3292 04b7 19       		.uleb128 0x19
 3293 04b8 89030000 		.4byte	.LASF35
 3294 04bc 01       		.byte	0x1
 3295 04bd 290B     		.2byte	0xb29
 3296 04bf 6B000000 		.4byte	0x6b
 3297 04c3 C4010000 		.4byte	.LLST13
 3298 04c7 25       		.uleb128 0x25
 3299 04c8 00000000 		.4byte	.LASF38
 3300 04cc 01       		.byte	0x1
 3301 04cd 2B0B     		.2byte	0xb2b
 3302 04cf FA010000 		.4byte	0x1fa
 3303 04d3 00000020 		.4byte	0x20000000
 3304 04d7 24       		.uleb128 0x24
 3305 04d8 F3000000 		.4byte	0xf3
 3306 04dc 04000000 		.4byte	.LBB32
 3307 04e0 02000000 		.4byte	.LBE32-.LBB32
 3308 04e4 01       		.byte	0x1
 3309 04e5 2D0B     		.2byte	0xb2d
 3310 04e7 20       		.uleb128 0x20
 3311 04e8 00010000 		.4byte	0x100
 3312 04ec E5010000 		.4byte	.LLST14
 3313 04f0 00       		.byte	0
 3314 04f1 00       		.byte	0
 3315 04f2 1B       		.uleb128 0x1b
 3316 04f3 7A030000 		.4byte	.LASF61
 3317 04f7 01       		.byte	0x1
 3318 04f8 3F0B     		.2byte	0xb3f
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 129


 3319 04fa C6000000 		.4byte	0xc6
 3320 04fe 00000000 		.4byte	.LFB20
 3321 0502 18000000 		.4byte	.LFE20-.LFB20
 3322 0506 01       		.uleb128 0x1
 3323 0507 9C       		.byte	0x9c
 3324 0508 63050000 		.4byte	0x563
 3325 050c 19       		.uleb128 0x19
 3326 050d 89030000 		.4byte	.LASF35
 3327 0511 01       		.byte	0x1
 3328 0512 3F0B     		.2byte	0xb3f
 3329 0514 6B000000 		.4byte	0x6b
 3330 0518 F9010000 		.4byte	.LLST15
 3331 051c 1A       		.uleb128 0x1a
 3332 051d 7E040000 		.4byte	.LASF36
 3333 0521 01       		.byte	0x1
 3334 0522 3F0B     		.2byte	0xb3f
 3335 0524 C6000000 		.4byte	0xc6
 3336 0528 01       		.uleb128 0x1
 3337 0529 51       		.byte	0x51
 3338 052a 1E       		.uleb128 0x1e
 3339 052b 4B000000 		.4byte	.LASF37
 3340 052f 01       		.byte	0x1
 3341 0530 410B     		.2byte	0xb41
 3342 0532 C6000000 		.4byte	0xc6
 3343 0536 01       		.uleb128 0x1
 3344 0537 50       		.byte	0x50
 3345 0538 25       		.uleb128 0x25
 3346 0539 00000000 		.4byte	.LASF38
 3347 053d 01       		.byte	0x1
 3348 053e 420B     		.2byte	0xb42
 3349 0540 FA010000 		.4byte	0x1fa
 3350 0544 00000020 		.4byte	0x20000000
 3351 0548 24       		.uleb128 0x24
 3352 0549 F3000000 		.4byte	0xf3
 3353 054d 04000000 		.4byte	.LBB34
 3354 0551 02000000 		.4byte	.LBE34-.LBB34
 3355 0555 01       		.byte	0x1
 3356 0556 440B     		.2byte	0xb44
 3357 0558 20       		.uleb128 0x20
 3358 0559 00010000 		.4byte	0x100
 3359 055d 1A020000 		.4byte	.LLST16
 3360 0561 00       		.byte	0
 3361 0562 00       		.byte	0
 3362 0563 1B       		.uleb128 0x1b
 3363 0564 A9050000 		.4byte	.LASF62
 3364 0568 01       		.byte	0x1
 3365 0569 5B0B     		.2byte	0xb5b
 3366 056b C6000000 		.4byte	0xc6
 3367 056f 00000000 		.4byte	.LFB21
 3368 0573 14000000 		.4byte	.LFE21-.LFB21
 3369 0577 01       		.uleb128 0x1
 3370 0578 9C       		.byte	0x9c
 3371 0579 B8050000 		.4byte	0x5b8
 3372 057d 19       		.uleb128 0x19
 3373 057e 89030000 		.4byte	.LASF35
 3374 0582 01       		.byte	0x1
 3375 0583 5B0B     		.2byte	0xb5b
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 130


 3376 0585 6B000000 		.4byte	0x6b
 3377 0589 2E020000 		.4byte	.LLST17
 3378 058d 25       		.uleb128 0x25
 3379 058e 00000000 		.4byte	.LASF38
 3380 0592 01       		.byte	0x1
 3381 0593 5D0B     		.2byte	0xb5d
 3382 0595 FA010000 		.4byte	0x1fa
 3383 0599 00000020 		.4byte	0x20000000
 3384 059d 24       		.uleb128 0x24
 3385 059e F3000000 		.4byte	0xf3
 3386 05a2 04000000 		.4byte	.LBB36
 3387 05a6 02000000 		.4byte	.LBE36-.LBB36
 3388 05aa 01       		.byte	0x1
 3389 05ab 5F0B     		.2byte	0xb5f
 3390 05ad 20       		.uleb128 0x20
 3391 05ae 00010000 		.4byte	0x100
 3392 05b2 4F020000 		.4byte	.LLST18
 3393 05b6 00       		.byte	0
 3394 05b7 00       		.byte	0
 3395 05b8 13       		.uleb128 0x13
 3396 05b9 5B050000 		.4byte	.LASF63
 3397 05bd 01       		.byte	0x1
 3398 05be 6E0B     		.2byte	0xb6e
 3399 05c0 00000000 		.4byte	.LFB22
 3400 05c4 40000000 		.4byte	.LFE22-.LFB22
 3401 05c8 01       		.uleb128 0x1
 3402 05c9 9C       		.byte	0x9c
 3403 05ca 6D060000 		.4byte	0x66d
 3404 05ce 19       		.uleb128 0x19
 3405 05cf 89030000 		.4byte	.LASF35
 3406 05d3 01       		.byte	0x1
 3407 05d4 6E0B     		.2byte	0xb6e
 3408 05d6 6B000000 		.4byte	0x6b
 3409 05da 63020000 		.4byte	.LLST19
 3410 05de 19       		.uleb128 0x19
 3411 05df 90030000 		.4byte	.LASF64
 3412 05e3 01       		.byte	0x1
 3413 05e4 6E0B     		.2byte	0xb6e
 3414 05e6 6B000000 		.4byte	0x6b
 3415 05ea 84020000 		.4byte	.LLST20
 3416 05ee 15       		.uleb128 0x15
 3417 05ef 43010000 		.4byte	.LASF24
 3418 05f3 01       		.byte	0x1
 3419 05f4 700B     		.2byte	0xb70
 3420 05f6 6B000000 		.4byte	0x6b
 3421 05fa A5020000 		.4byte	.LLST21
 3422 05fe 15       		.uleb128 0x15
 3423 05ff E3010000 		.4byte	.LASF65
 3424 0603 01       		.byte	0x1
 3425 0604 710B     		.2byte	0xb71
 3426 0606 83000000 		.4byte	0x83
 3427 060a B8020000 		.4byte	.LLST22
 3428 060e 15       		.uleb128 0x15
 3429 060f 69020000 		.4byte	.LASF34
 3430 0613 01       		.byte	0x1
 3431 0614 720B     		.2byte	0xb72
 3432 0616 83000000 		.4byte	0x83
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 131


 3433 061a CB020000 		.4byte	.LLST23
 3434 061e 26       		.uleb128 0x26
 3435 061f F3000000 		.4byte	0xf3
 3436 0623 0A000000 		.4byte	.LBB38
 3437 0627 02000000 		.4byte	.LBE38-.LBB38
 3438 062b 01       		.byte	0x1
 3439 062c 740B     		.2byte	0xb74
 3440 062e 3C060000 		.4byte	0x63c
 3441 0632 20       		.uleb128 0x20
 3442 0633 00010000 		.4byte	0x100
 3443 0637 E9020000 		.4byte	.LLST24
 3444 063b 00       		.byte	0
 3445 063c 26       		.uleb128 0x26
 3446 063d F3000000 		.4byte	0xf3
 3447 0641 10000000 		.4byte	.LBB40
 3448 0645 02000000 		.4byte	.LBE40-.LBB40
 3449 0649 01       		.byte	0x1
 3450 064a 750B     		.2byte	0xb75
 3451 064c 5A060000 		.4byte	0x65a
 3452 0650 20       		.uleb128 0x20
 3453 0651 00010000 		.4byte	0x100
 3454 0655 FD020000 		.4byte	.LLST25
 3455 0659 00       		.byte	0
 3456 065a 17       		.uleb128 0x17
 3457 065b 24000000 		.4byte	.LVL54
 3458 065f 9B0E0000 		.4byte	0xe9b
 3459 0663 17       		.uleb128 0x17
 3460 0664 38000000 		.4byte	.LVL58
 3461 0668 A60E0000 		.4byte	0xea6
 3462 066c 00       		.byte	0
 3463 066d 1B       		.uleb128 0x1b
 3464 066e 3D020000 		.4byte	.LASF66
 3465 0672 01       		.byte	0x1
 3466 0673 900B     		.2byte	0xb90
 3467 0675 6B000000 		.4byte	0x6b
 3468 0679 00000000 		.4byte	.LFB23
 3469 067d 28000000 		.4byte	.LFE23-.LFB23
 3470 0681 01       		.uleb128 0x1
 3471 0682 9C       		.byte	0x9c
 3472 0683 C2060000 		.4byte	0x6c2
 3473 0687 19       		.uleb128 0x19
 3474 0688 89030000 		.4byte	.LASF35
 3475 068c 01       		.byte	0x1
 3476 068d 900B     		.2byte	0xb90
 3477 068f 6B000000 		.4byte	0x6b
 3478 0693 11030000 		.4byte	.LLST26
 3479 0697 15       		.uleb128 0x15
 3480 0698 90030000 		.4byte	.LASF64
 3481 069c 01       		.byte	0x1
 3482 069d 920B     		.2byte	0xb92
 3483 069f 6B000000 		.4byte	0x6b
 3484 06a3 32030000 		.4byte	.LLST27
 3485 06a7 24       		.uleb128 0x24
 3486 06a8 F3000000 		.4byte	0xf3
 3487 06ac 04000000 		.4byte	.LBB42
 3488 06b0 02000000 		.4byte	.LBE42-.LBB42
 3489 06b4 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 132


 3490 06b5 940B     		.2byte	0xb94
 3491 06b7 20       		.uleb128 0x20
 3492 06b8 00010000 		.4byte	0x100
 3493 06bc 53030000 		.4byte	.LLST28
 3494 06c0 00       		.byte	0
 3495 06c1 00       		.byte	0
 3496 06c2 13       		.uleb128 0x13
 3497 06c3 1E060000 		.4byte	.LASF67
 3498 06c7 01       		.byte	0x1
 3499 06c8 A50B     		.2byte	0xba5
 3500 06ca 00000000 		.4byte	.LFB24
 3501 06ce 14000000 		.4byte	.LFE24-.LFB24
 3502 06d2 01       		.uleb128 0x1
 3503 06d3 9C       		.byte	0x9c
 3504 06d4 E9060000 		.4byte	0x6e9
 3505 06d8 19       		.uleb128 0x19
 3506 06d9 89030000 		.4byte	.LASF35
 3507 06dd 01       		.byte	0x1
 3508 06de A50B     		.2byte	0xba5
 3509 06e0 6B000000 		.4byte	0x6b
 3510 06e4 67030000 		.4byte	.LLST29
 3511 06e8 00       		.byte	0
 3512 06e9 1B       		.uleb128 0x1b
 3513 06ea 0A010000 		.4byte	.LASF68
 3514 06ee 01       		.byte	0x1
 3515 06ef B70B     		.2byte	0xbb7
 3516 06f1 6B000000 		.4byte	0x6b
 3517 06f5 00000000 		.4byte	.LFB25
 3518 06f9 18000000 		.4byte	.LFE25-.LFB25
 3519 06fd 01       		.uleb128 0x1
 3520 06fe 9C       		.byte	0x9c
 3521 06ff 14070000 		.4byte	0x714
 3522 0703 19       		.uleb128 0x19
 3523 0704 89030000 		.4byte	.LASF35
 3524 0708 01       		.byte	0x1
 3525 0709 B70B     		.2byte	0xbb7
 3526 070b 6B000000 		.4byte	0x6b
 3527 070f 88030000 		.4byte	.LLST30
 3528 0713 00       		.byte	0
 3529 0714 13       		.uleb128 0x13
 3530 0715 94010000 		.4byte	.LASF69
 3531 0719 01       		.byte	0x1
 3532 071a C70B     		.2byte	0xbc7
 3533 071c 00000000 		.4byte	.LFB26
 3534 0720 14000000 		.4byte	.LFE26-.LFB26
 3535 0724 01       		.uleb128 0x1
 3536 0725 9C       		.byte	0x9c
 3537 0726 3B070000 		.4byte	0x73b
 3538 072a 19       		.uleb128 0x19
 3539 072b 89030000 		.4byte	.LASF35
 3540 072f 01       		.byte	0x1
 3541 0730 C70B     		.2byte	0xbc7
 3542 0732 6B000000 		.4byte	0x6b
 3543 0736 A9030000 		.4byte	.LLST31
 3544 073a 00       		.byte	0
 3545 073b 13       		.uleb128 0x13
 3546 073c 0F030000 		.4byte	.LASF70
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 133


 3547 0740 01       		.byte	0x1
 3548 0741 D50B     		.2byte	0xbd5
 3549 0743 00000000 		.4byte	.LFB27
 3550 0747 14000000 		.4byte	.LFE27-.LFB27
 3551 074b 01       		.uleb128 0x1
 3552 074c 9C       		.byte	0x9c
 3553 074d 62070000 		.4byte	0x762
 3554 0751 19       		.uleb128 0x19
 3555 0752 89030000 		.4byte	.LASF35
 3556 0756 01       		.byte	0x1
 3557 0757 D50B     		.2byte	0xbd5
 3558 0759 6B000000 		.4byte	0x6b
 3559 075d CA030000 		.4byte	.LLST32
 3560 0761 00       		.byte	0
 3561 0762 13       		.uleb128 0x13
 3562 0763 60040000 		.4byte	.LASF71
 3563 0767 01       		.byte	0x1
 3564 0768 E40B     		.2byte	0xbe4
 3565 076a 00000000 		.4byte	.LFB28
 3566 076e 14000000 		.4byte	.LFE28-.LFB28
 3567 0772 01       		.uleb128 0x1
 3568 0773 9C       		.byte	0x9c
 3569 0774 89070000 		.4byte	0x789
 3570 0778 19       		.uleb128 0x19
 3571 0779 89030000 		.4byte	.LASF35
 3572 077d 01       		.byte	0x1
 3573 077e E40B     		.2byte	0xbe4
 3574 0780 6B000000 		.4byte	0x6b
 3575 0784 EB030000 		.4byte	.LLST33
 3576 0788 00       		.byte	0
 3577 0789 1F       		.uleb128 0x1f
 3578 078a F3000000 		.4byte	0xf3
 3579 078e 00000000 		.4byte	.LFB29
 3580 0792 04000000 		.4byte	.LFE29-.LFB29
 3581 0796 01       		.uleb128 0x1
 3582 0797 9C       		.byte	0x9c
 3583 0798 A4070000 		.4byte	0x7a4
 3584 079c 21       		.uleb128 0x21
 3585 079d 00010000 		.4byte	0x100
 3586 07a1 01       		.uleb128 0x1
 3587 07a2 50       		.byte	0x50
 3588 07a3 00       		.byte	0
 3589 07a4 1C       		.uleb128 0x1c
 3590 07a5 E1000000 		.4byte	.LASF72
 3591 07a9 01       		.byte	0x1
 3592 07aa 0B0C     		.2byte	0xc0b
 3593 07ac 00000000 		.4byte	.LFB30
 3594 07b0 18000000 		.4byte	.LFE30-.LFB30
 3595 07b4 01       		.uleb128 0x1
 3596 07b5 9C       		.byte	0x9c
 3597 07b6 13       		.uleb128 0x13
 3598 07b7 CD060000 		.4byte	.LASF73
 3599 07bb 01       		.byte	0x1
 3600 07bc 1F0C     		.2byte	0xc1f
 3601 07be 00000000 		.4byte	.LFB31
 3602 07c2 2C000000 		.4byte	.LFE31-.LFB31
 3603 07c6 01       		.uleb128 0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 134


 3604 07c7 9C       		.byte	0x9c
 3605 07c8 EF070000 		.4byte	0x7ef
 3606 07cc 19       		.uleb128 0x19
 3607 07cd B8050000 		.4byte	.LASF74
 3608 07d1 01       		.byte	0x1
 3609 07d2 1F0C     		.2byte	0xc1f
 3610 07d4 83000000 		.4byte	0x83
 3611 07d8 0C040000 		.4byte	.LLST34
 3612 07dc 17       		.uleb128 0x17
 3613 07dd 14000000 		.4byte	.LVL80
 3614 07e1 B10E0000 		.4byte	0xeb1
 3615 07e5 17       		.uleb128 0x17
 3616 07e6 22000000 		.4byte	.LVL82
 3617 07ea B10E0000 		.4byte	0xeb1
 3618 07ee 00       		.byte	0
 3619 07ef 1F       		.uleb128 0x1f
 3620 07f0 0D010000 		.4byte	0x10d
 3621 07f4 00000000 		.4byte	.LFB3
 3622 07f8 E4000000 		.4byte	.LFE3-.LFB3
 3623 07fc 01       		.uleb128 0x1
 3624 07fd 9C       		.byte	0x9c
 3625 07fe C3080000 		.4byte	0x8c3
 3626 0802 27       		.uleb128 0x27
 3627 0803 19010000 		.4byte	0x119
 3628 0807 27       		.uleb128 0x27
 3629 0808 22010000 		.4byte	0x122
 3630 080c 27       		.uleb128 0x27
 3631 080d 2D010000 		.4byte	0x12d
 3632 0811 27       		.uleb128 0x27
 3633 0812 38010000 		.4byte	0x138
 3634 0816 28       		.uleb128 0x28
 3635 0817 43010000 		.4byte	0x143
 3636 081b 00       		.byte	0
 3637 081c 27       		.uleb128 0x27
 3638 081d 4E010000 		.4byte	0x14e
 3639 0821 29       		.uleb128 0x29
 3640 0822 0C000000 		.4byte	.LBB47
 3641 0826 AC000000 		.4byte	.LBE47-.LBB47
 3642 082a B9080000 		.4byte	0x8b9
 3643 082e 2A       		.uleb128 0x2a
 3644 082f 19010000 		.4byte	0x119
 3645 0833 2A040000 		.4byte	.LLST35
 3646 0837 2A       		.uleb128 0x2a
 3647 0838 22010000 		.4byte	0x122
 3648 083c 61040000 		.4byte	.LLST36
 3649 0840 2A       		.uleb128 0x2a
 3650 0841 2D010000 		.4byte	0x12d
 3651 0845 97040000 		.4byte	.LLST37
 3652 0849 2A       		.uleb128 0x2a
 3653 084a 38010000 		.4byte	0x138
 3654 084e AB040000 		.4byte	.LLST38
 3655 0852 2A       		.uleb128 0x2a
 3656 0853 43010000 		.4byte	0x143
 3657 0857 F4040000 		.4byte	.LLST39
 3658 085b 22       		.uleb128 0x22
 3659 085c 4E010000 		.4byte	0x14e
 3660 0860 02       		.uleb128 0x2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 135


 3661 0861 91       		.byte	0x91
 3662 0862 64       		.sleb128 -28
 3663 0863 17       		.uleb128 0x17
 3664 0864 10000000 		.4byte	.LVL86
 3665 0868 9B0E0000 		.4byte	0xe9b
 3666 086c 2B       		.uleb128 0x2b
 3667 086d 78000000 		.4byte	.LVL100
 3668 0871 BC0E0000 		.4byte	0xebc
 3669 0875 80080000 		.4byte	0x880
 3670 0879 2C       		.uleb128 0x2c
 3671 087a 01       		.uleb128 0x1
 3672 087b 50       		.byte	0x50
 3673 087c 02       		.uleb128 0x2
 3674 087d 08       		.byte	0x8
 3675 087e 30       		.byte	0x30
 3676 087f 00       		.byte	0
 3677 0880 2B       		.uleb128 0x2b
 3678 0881 94000000 		.4byte	.LVL103
 3679 0885 B6070000 		.4byte	0x7b6
 3680 0889 93080000 		.4byte	0x893
 3681 088d 2C       		.uleb128 0x2c
 3682 088e 01       		.uleb128 0x1
 3683 088f 50       		.byte	0x50
 3684 0890 01       		.uleb128 0x1
 3685 0891 31       		.byte	0x31
 3686 0892 00       		.byte	0
 3687 0893 2B       		.uleb128 0x2b
 3688 0894 A4000000 		.4byte	.LVL104
 3689 0898 B6070000 		.4byte	0x7b6
 3690 089c A6080000 		.4byte	0x8a6
 3691 08a0 2C       		.uleb128 0x2c
 3692 08a1 01       		.uleb128 0x1
 3693 08a2 50       		.byte	0x50
 3694 08a3 01       		.uleb128 0x1
 3695 08a4 31       		.byte	0x31
 3696 08a5 00       		.byte	0
 3697 08a6 2D       		.uleb128 0x2d
 3698 08a7 B8000000 		.4byte	.LVL105
 3699 08ab A60E0000 		.4byte	0xea6
 3700 08af 2C       		.uleb128 0x2c
 3701 08b0 01       		.uleb128 0x1
 3702 08b1 50       		.byte	0x50
 3703 08b2 04       		.uleb128 0x4
 3704 08b3 91       		.byte	0x91
 3705 08b4 5C       		.sleb128 -36
 3706 08b5 94       		.byte	0x94
 3707 08b6 01       		.byte	0x1
 3708 08b7 00       		.byte	0
 3709 08b8 00       		.byte	0
 3710 08b9 17       		.uleb128 0x17
 3711 08ba 08000000 		.4byte	.LVL85
 3712 08be C70E0000 		.4byte	0xec7
 3713 08c2 00       		.byte	0
 3714 08c3 13       		.uleb128 0x13
 3715 08c4 99030000 		.4byte	.LASF75
 3716 08c8 01       		.byte	0x1
 3717 08c9 3103     		.2byte	0x331
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 136


 3718 08cb 00000000 		.4byte	.LFB10
 3719 08cf 80000000 		.4byte	.LFE10-.LFB10
 3720 08d3 01       		.uleb128 0x1
 3721 08d4 9C       		.byte	0x9c
 3722 08d5 5C090000 		.4byte	0x95c
 3723 08d9 19       		.uleb128 0x19
 3724 08da 32010000 		.4byte	.LASF23
 3725 08de 01       		.byte	0x1
 3726 08df 3103     		.2byte	0x331
 3727 08e1 83000000 		.4byte	0x83
 3728 08e5 1F050000 		.4byte	.LLST40
 3729 08e9 1E       		.uleb128 0x1e
 3730 08ea B9000000 		.4byte	.LASF76
 3731 08ee 01       		.byte	0x1
 3732 08ef 3403     		.2byte	0x334
 3733 08f1 6C090000 		.4byte	0x96c
 3734 08f5 02       		.uleb128 0x2
 3735 08f6 91       		.byte	0x91
 3736 08f7 58       		.sleb128 -40
 3737 08f8 1E       		.uleb128 0x1e
 3738 08f9 A1010000 		.4byte	.LASF77
 3739 08fd 01       		.byte	0x1
 3740 08fe 3503     		.2byte	0x335
 3741 0900 81090000 		.4byte	0x981
 3742 0904 02       		.uleb128 0x2
 3743 0905 91       		.byte	0x91
 3744 0906 60       		.sleb128 -32
 3745 0907 15       		.uleb128 0x15
 3746 0908 83010000 		.4byte	.LASF78
 3747 090c 01       		.byte	0x1
 3748 090d 3E03     		.2byte	0x33e
 3749 090f 83000000 		.4byte	0x83
 3750 0913 4B050000 		.4byte	.LLST41
 3751 0917 15       		.uleb128 0x15
 3752 0918 43010000 		.4byte	.LASF24
 3753 091c 01       		.byte	0x1
 3754 091d 4503     		.2byte	0x345
 3755 091f 6B000000 		.4byte	0x6b
 3756 0923 76050000 		.4byte	.LLST42
 3757 0927 17       		.uleb128 0x17
 3758 0928 0A000000 		.4byte	.LVL107
 3759 092c 9B0E0000 		.4byte	0xe9b
 3760 0930 17       		.uleb128 0x17
 3761 0931 10000000 		.4byte	.LVL109
 3762 0935 65020000 		.4byte	0x265
 3763 0939 17       		.uleb128 0x17
 3764 093a 1A000000 		.4byte	.LVL111
 3765 093e 11020000 		.4byte	0x211
 3766 0942 17       		.uleb128 0x17
 3767 0943 56000000 		.4byte	.LVL114
 3768 0947 0D010000 		.4byte	0x10d
 3769 094b 2D       		.uleb128 0x2d
 3770 094c 5C000000 		.4byte	.LVL115
 3771 0950 A60E0000 		.4byte	0xea6
 3772 0954 2C       		.uleb128 0x2c
 3773 0955 01       		.uleb128 0x1
 3774 0956 50       		.byte	0x50
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 137


 3775 0957 02       		.uleb128 0x2
 3776 0958 75       		.byte	0x75
 3777 0959 00       		.sleb128 0
 3778 095a 00       		.byte	0
 3779 095b 00       		.byte	0
 3780 095c 2E       		.uleb128 0x2e
 3781 095d C1000000 		.4byte	0xc1
 3782 0961 6C090000 		.4byte	0x96c
 3783 0965 2F       		.uleb128 0x2f
 3784 0966 E0000000 		.4byte	0xe0
 3785 096a 01       		.byte	0x1
 3786 096b 00       		.byte	0
 3787 096c 05       		.uleb128 0x5
 3788 096d 5C090000 		.4byte	0x95c
 3789 0971 2E       		.uleb128 0x2e
 3790 0972 C1000000 		.4byte	0xc1
 3791 0976 81090000 		.4byte	0x981
 3792 097a 2F       		.uleb128 0x2f
 3793 097b E0000000 		.4byte	0xe0
 3794 097f 03       		.byte	0x3
 3795 0980 00       		.byte	0
 3796 0981 05       		.uleb128 0x5
 3797 0982 71090000 		.4byte	0x971
 3798 0986 13       		.uleb128 0x13
 3799 0987 46060000 		.4byte	.LASF79
 3800 098b 01       		.byte	0x1
 3801 098c 360C     		.2byte	0xc36
 3802 098e 00000000 		.4byte	.LFB32
 3803 0992 14000000 		.4byte	.LFE32-.LFB32
 3804 0996 01       		.uleb128 0x1
 3805 0997 9C       		.byte	0x9c
 3806 0998 B6090000 		.4byte	0x9b6
 3807 099c 19       		.uleb128 0x19
 3808 099d B5070000 		.4byte	.LASF80
 3809 09a1 01       		.byte	0x1
 3810 09a2 360C     		.2byte	0xc36
 3811 09a4 77000000 		.4byte	0x77
 3812 09a8 89050000 		.4byte	.LLST43
 3813 09ac 17       		.uleb128 0x17
 3814 09ad 0C000000 		.4byte	.LVL119
 3815 09b1 B10E0000 		.4byte	0xeb1
 3816 09b5 00       		.byte	0
 3817 09b6 13       		.uleb128 0x13
 3818 09b7 88050000 		.4byte	.LASF81
 3819 09bb 01       		.byte	0x1
 3820 09bc 660A     		.2byte	0xa66
 3821 09be 00000000 		.4byte	.LFB11
 3822 09c2 44000000 		.4byte	.LFE11-.LFB11
 3823 09c6 01       		.uleb128 0x1
 3824 09c7 9C       		.byte	0x9c
 3825 09c8 FE090000 		.4byte	0x9fe
 3826 09cc 19       		.uleb128 0x19
 3827 09cd D8050000 		.4byte	.LASF82
 3828 09d1 01       		.byte	0x1
 3829 09d2 660A     		.2byte	0xa66
 3830 09d4 83000000 		.4byte	0x83
 3831 09d8 AA050000 		.4byte	.LLST44
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 138


 3832 09dc 30       		.uleb128 0x30
 3833 09dd 5A010000 		.4byte	0x15a
 3834 09e1 2C000000 		.4byte	.LBB48
 3835 09e5 00000000 		.4byte	.Ldebug_ranges0+0
 3836 09e9 01       		.byte	0x1
 3837 09ea 760A     		.2byte	0xa76
 3838 09ec 2D       		.uleb128 0x2d
 3839 09ed 2C000000 		.4byte	.LVL122
 3840 09f1 86090000 		.4byte	0x986
 3841 09f5 2C       		.uleb128 0x2c
 3842 09f6 01       		.uleb128 0x1
 3843 09f7 50       		.byte	0x50
 3844 09f8 03       		.uleb128 0x3
 3845 09f9 0A       		.byte	0xa
 3846 09fa E803     		.2byte	0x3e8
 3847 09fc 00       		.byte	0
 3848 09fd 00       		.byte	0
 3849 09fe 31       		.uleb128 0x31
 3850 09ff 37010000 		.4byte	.LASF83
 3851 0a03 01       		.byte	0x1
 3852 0a04 440C     		.2byte	0xc44
 3853 0a06 00000000 		.4byte	.LFB33
 3854 0a0a 48000000 		.4byte	.LFE33-.LFB33
 3855 0a0e 01       		.uleb128 0x1
 3856 0a0f 9C       		.byte	0x9c
 3857 0a10 250A0000 		.4byte	0xa25
 3858 0a14 19       		.uleb128 0x19
 3859 0a15 32010000 		.4byte	.LASF23
 3860 0a19 01       		.byte	0x1
 3861 0a1a 440C     		.2byte	0xc44
 3862 0a1c 83000000 		.4byte	0x83
 3863 0a20 CB050000 		.4byte	.LLST45
 3864 0a24 00       		.byte	0
 3865 0a25 31       		.uleb128 0x31
 3866 0a26 5B020000 		.4byte	.LASF84
 3867 0a2a 01       		.byte	0x1
 3868 0a2b 810C     		.2byte	0xc81
 3869 0a2d 00000000 		.4byte	.LFB35
 3870 0a31 54000000 		.4byte	.LFE35-.LFB35
 3871 0a35 01       		.uleb128 0x1
 3872 0a36 9C       		.byte	0x9c
 3873 0a37 E40A0000 		.4byte	0xae4
 3874 0a3b 14       		.uleb128 0x14
 3875 0a3c 6900     		.ascii	"i\000"
 3876 0a3e 01       		.byte	0x1
 3877 0a3f 830C     		.2byte	0xc83
 3878 0a41 83000000 		.4byte	0x83
 3879 0a45 EC050000 		.4byte	.LLST46
 3880 0a49 32       		.uleb128 0x32
 3881 0a4a 63010000 		.4byte	0x163
 3882 0a4e 04000000 		.4byte	.LBB62
 3883 0a52 18000000 		.4byte	.Ldebug_ranges0+0x18
 3884 0a56 01       		.byte	0x1
 3885 0a57 8D0C     		.2byte	0xc8d
 3886 0a59 760A0000 		.4byte	0xa76
 3887 0a5d 20       		.uleb128 0x20
 3888 0a5e 70010000 		.4byte	0x170
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 139


 3889 0a62 30060000 		.4byte	.LLST47
 3890 0a66 33       		.uleb128 0x33
 3891 0a67 18000000 		.4byte	.Ldebug_ranges0+0x18
 3892 0a6b 20       		.uleb128 0x20
 3893 0a6c 70010000 		.4byte	0x170
 3894 0a70 30060000 		.4byte	.LLST47
 3895 0a74 00       		.byte	0
 3896 0a75 00       		.byte	0
 3897 0a76 32       		.uleb128 0x32
 3898 0a77 B8010000 		.4byte	0x1b8
 3899 0a7b 08000000 		.4byte	.LBB69
 3900 0a7f 38000000 		.4byte	.Ldebug_ranges0+0x38
 3901 0a83 01       		.byte	0x1
 3902 0a84 8A0C     		.2byte	0xc8a
 3903 0a86 B50A0000 		.4byte	0xab5
 3904 0a8a 20       		.uleb128 0x20
 3905 0a8b D5010000 		.4byte	0x1d5
 3906 0a8f 44060000 		.4byte	.LLST49
 3907 0a93 20       		.uleb128 0x20
 3908 0a94 C9010000 		.4byte	0x1c9
 3909 0a98 5C060000 		.4byte	.LLST50
 3910 0a9c 33       		.uleb128 0x33
 3911 0a9d 38000000 		.4byte	.Ldebug_ranges0+0x38
 3912 0aa1 2A       		.uleb128 0x2a
 3913 0aa2 E1010000 		.4byte	0x1e1
 3914 0aa6 70060000 		.4byte	.LLST51
 3915 0aaa 23       		.uleb128 0x23
 3916 0aab ED010000 		.4byte	0x1ed
 3917 0aaf 00000020 		.4byte	0x20000000
 3918 0ab3 00       		.byte	0
 3919 0ab4 00       		.byte	0
 3920 0ab5 26       		.uleb128 0x26
 3921 0ab6 9E010000 		.4byte	0x19e
 3922 0aba 2C000000 		.4byte	.LBB77
 3923 0abe 04000000 		.4byte	.LBE77-.LBB77
 3924 0ac2 01       		.byte	0x1
 3925 0ac3 900C     		.2byte	0xc90
 3926 0ac5 D30A0000 		.4byte	0xad3
 3927 0ac9 20       		.uleb128 0x20
 3928 0aca AB010000 		.4byte	0x1ab
 3929 0ace 93060000 		.4byte	.LLST52
 3930 0ad2 00       		.byte	0
 3931 0ad3 34       		.uleb128 0x34
 3932 0ad4 95010000 		.4byte	0x195
 3933 0ad8 30000000 		.4byte	.LBB79
 3934 0adc 04000000 		.4byte	.LBE79-.LBB79
 3935 0ae0 01       		.byte	0x1
 3936 0ae1 910C     		.2byte	0xc91
 3937 0ae3 00       		.byte	0
 3938 0ae4 1C       		.uleb128 0x1c
 3939 0ae5 57070000 		.4byte	.LASF85
 3940 0ae9 01       		.byte	0x1
 3941 0aea B00C     		.2byte	0xcb0
 3942 0aec 00000000 		.4byte	.LFB37
 3943 0af0 10000000 		.4byte	.LFE37-.LFB37
 3944 0af4 01       		.uleb128 0x1
 3945 0af5 9C       		.byte	0x9c
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 140


 3946 0af6 1C       		.uleb128 0x1c
 3947 0af7 F1000000 		.4byte	.LASF86
 3948 0afb 01       		.byte	0x1
 3949 0afc C00C     		.2byte	0xcc0
 3950 0afe 00000000 		.4byte	.LFB38
 3951 0b02 10000000 		.4byte	.LFE38-.LFB38
 3952 0b06 01       		.uleb128 0x1
 3953 0b07 9C       		.byte	0x9c
 3954 0b08 13       		.uleb128 0x13
 3955 0b09 69060000 		.4byte	.LASF87
 3956 0b0d 01       		.byte	0x1
 3957 0b0e 9F0C     		.2byte	0xc9f
 3958 0b10 00000000 		.4byte	.LFB36
 3959 0b14 18000000 		.4byte	.LFE36-.LFB36
 3960 0b18 01       		.uleb128 0x1
 3961 0b19 9C       		.byte	0x9c
 3962 0b1a 280B0000 		.4byte	0xb28
 3963 0b1e 17       		.uleb128 0x17
 3964 0b1f 06000000 		.4byte	.LVL137
 3965 0b23 F60A0000 		.4byte	0xaf6
 3966 0b27 00       		.byte	0
 3967 0b28 13       		.uleb128 0x13
 3968 0b29 FF030000 		.4byte	.LASF88
 3969 0b2d 01       		.byte	0x1
 3970 0b2e 640C     		.2byte	0xc64
 3971 0b30 00000000 		.4byte	.LFB34
 3972 0b34 1C000000 		.4byte	.LFE34-.LFB34
 3973 0b38 01       		.uleb128 0x1
 3974 0b39 9C       		.byte	0x9c
 3975 0b3a 510B0000 		.4byte	0xb51
 3976 0b3e 17       		.uleb128 0x17
 3977 0b3f 0E000000 		.4byte	.LVL138
 3978 0b43 250A0000 		.4byte	0xa25
 3979 0b47 17       		.uleb128 0x17
 3980 0b48 16000000 		.4byte	.LVL139
 3981 0b4c 080B0000 		.4byte	0xb08
 3982 0b50 00       		.byte	0
 3983 0b51 1C       		.uleb128 0x1c
 3984 0b52 ED060000 		.4byte	.LASF89
 3985 0b56 01       		.byte	0x1
 3986 0b57 D00C     		.2byte	0xcd0
 3987 0b59 00000000 		.4byte	.LFB39
 3988 0b5d 10000000 		.4byte	.LFE39-.LFB39
 3989 0b61 01       		.uleb128 0x1
 3990 0b62 9C       		.byte	0x9c
 3991 0b63 1F       		.uleb128 0x1f
 3992 0b64 9E010000 		.4byte	0x19e
 3993 0b68 00000000 		.4byte	.LFB40
 3994 0b6c 10000000 		.4byte	.LFE40-.LFB40
 3995 0b70 01       		.uleb128 0x1
 3996 0b71 9C       		.byte	0x9c
 3997 0b72 800B0000 		.4byte	0xb80
 3998 0b76 20       		.uleb128 0x20
 3999 0b77 AB010000 		.4byte	0x1ab
 4000 0b7b A6060000 		.4byte	.LLST53
 4001 0b7f 00       		.byte	0
 4002 0b80 18       		.uleb128 0x18
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 141


 4003 0b81 5A010000 		.4byte	.LASF90
 4004 0b85 01       		.byte	0x1
 4005 0b86 F10C     		.2byte	0xcf1
 4006 0b88 83000000 		.4byte	0x83
 4007 0b8c 00000000 		.4byte	.LFB41
 4008 0b90 10000000 		.4byte	.LFE41-.LFB41
 4009 0b94 01       		.uleb128 0x1
 4010 0b95 9C       		.byte	0x9c
 4011 0b96 18       		.uleb128 0x18
 4012 0b97 3B050000 		.4byte	.LASF91
 4013 0b9b 01       		.byte	0x1
 4014 0b9c 010D     		.2byte	0xd01
 4015 0b9e 83000000 		.4byte	0x83
 4016 0ba2 00000000 		.4byte	.LFB42
 4017 0ba6 10000000 		.4byte	.LFE42-.LFB42
 4018 0baa 01       		.uleb128 0x1
 4019 0bab 9C       		.byte	0x9c
 4020 0bac 1F       		.uleb128 0x1f
 4021 0bad 63010000 		.4byte	0x163
 4022 0bb1 00000000 		.4byte	.LFB43
 4023 0bb5 18000000 		.4byte	.LFE43-.LFB43
 4024 0bb9 01       		.uleb128 0x1
 4025 0bba 9C       		.byte	0x9c
 4026 0bbb D60B0000 		.4byte	0xbd6
 4027 0bbf 21       		.uleb128 0x21
 4028 0bc0 70010000 		.4byte	0x170
 4029 0bc4 01       		.uleb128 0x1
 4030 0bc5 50       		.byte	0x50
 4031 0bc6 33       		.uleb128 0x33
 4032 0bc7 58000000 		.4byte	.Ldebug_ranges0+0x58
 4033 0bcb 20       		.uleb128 0x20
 4034 0bcc 70010000 		.4byte	0x170
 4035 0bd0 C7060000 		.4byte	.LLST54
 4036 0bd4 00       		.byte	0
 4037 0bd5 00       		.byte	0
 4038 0bd6 18       		.uleb128 0x18
 4039 0bd7 D5060000 		.4byte	.LASF92
 4040 0bdb 01       		.byte	0x1
 4041 0bdc 3A0D     		.2byte	0xd3a
 4042 0bde 83000000 		.4byte	0x83
 4043 0be2 00000000 		.4byte	.LFB44
 4044 0be6 10000000 		.4byte	.LFE44-.LFB44
 4045 0bea 01       		.uleb128 0x1
 4046 0beb 9C       		.byte	0x9c
 4047 0bec 18       		.uleb128 0x18
 4048 0bed 89020000 		.4byte	.LASF93
 4049 0bf1 01       		.byte	0x1
 4050 0bf2 510D     		.2byte	0xd51
 4051 0bf4 83000000 		.4byte	0x83
 4052 0bf8 00000000 		.4byte	.LFB45
 4053 0bfc 10000000 		.4byte	.LFE45-.LFB45
 4054 0c00 01       		.uleb128 0x1
 4055 0c01 9C       		.byte	0x9c
 4056 0c02 35       		.uleb128 0x35
 4057 0c03 7D010000 		.4byte	0x17d
 4058 0c07 00000000 		.4byte	.LFB49
 4059 0c0b 24000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 142


 4060 0c0f 01       		.uleb128 0x1
 4061 0c10 9C       		.byte	0x9c
 4062 0c11 370C0000 		.4byte	0xc37
 4063 0c15 27       		.uleb128 0x27
 4064 0c16 8A010000 		.4byte	0x18a
 4065 0c1a 29       		.uleb128 0x29
 4066 0c1b 0C000000 		.4byte	.LBB89
 4067 0c1f 10000000 		.4byte	.LBE89-.LBB89
 4068 0c23 2D0C0000 		.4byte	0xc2d
 4069 0c27 27       		.uleb128 0x27
 4070 0c28 8A010000 		.4byte	0x18a
 4071 0c2c 00       		.byte	0
 4072 0c2d 17       		.uleb128 0x17
 4073 0c2e 06000000 		.4byte	.LVL145
 4074 0c32 EC0B0000 		.4byte	0xbec
 4075 0c36 00       		.byte	0
 4076 0c37 1D       		.uleb128 0x1d
 4077 0c38 95010000 		.4byte	0x195
 4078 0c3c 00000000 		.4byte	.LFB46
 4079 0c40 0C000000 		.4byte	.LFE46-.LFB46
 4080 0c44 01       		.uleb128 0x1
 4081 0c45 9C       		.byte	0x9c
 4082 0c46 1B       		.uleb128 0x1b
 4083 0c47 90060000 		.4byte	.LASF94
 4084 0c4b 01       		.byte	0x1
 4085 0c4c 810D     		.2byte	0xd81
 4086 0c4e E7000000 		.4byte	0xe7
 4087 0c52 00000000 		.4byte	.LFB47
 4088 0c56 10000000 		.4byte	.LFE47-.LFB47
 4089 0c5a 01       		.uleb128 0x1
 4090 0c5b 9C       		.byte	0x9c
 4091 0c5c 8D0C0000 		.4byte	0xc8d
 4092 0c60 19       		.uleb128 0x19
 4093 0c61 89030000 		.4byte	.LASF35
 4094 0c65 01       		.byte	0x1
 4095 0c66 810D     		.2byte	0xd81
 4096 0c68 83000000 		.4byte	0x83
 4097 0c6c DB060000 		.4byte	.LLST55
 4098 0c70 1A       		.uleb128 0x1a
 4099 0c71 21050000 		.4byte	.LASF95
 4100 0c75 01       		.byte	0x1
 4101 0c76 810D     		.2byte	0xd81
 4102 0c78 E7000000 		.4byte	0xe7
 4103 0c7c 01       		.uleb128 0x1
 4104 0c7d 51       		.byte	0x51
 4105 0c7e 1E       		.uleb128 0x1e
 4106 0c7f 8D000000 		.4byte	.LASF96
 4107 0c83 01       		.byte	0x1
 4108 0c84 830D     		.2byte	0xd83
 4109 0c86 E7000000 		.4byte	0xe7
 4110 0c8a 01       		.uleb128 0x1
 4111 0c8b 50       		.byte	0x50
 4112 0c8c 00       		.byte	0
 4113 0c8d 1B       		.uleb128 0x1b
 4114 0c8e 1F030000 		.4byte	.LASF97
 4115 0c92 01       		.byte	0x1
 4116 0c93 990D     		.2byte	0xd99
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 143


 4117 0c95 E7000000 		.4byte	0xe7
 4118 0c99 00000000 		.4byte	.LFB48
 4119 0c9d 0C000000 		.4byte	.LFE48-.LFB48
 4120 0ca1 01       		.uleb128 0x1
 4121 0ca2 9C       		.byte	0x9c
 4122 0ca3 B80C0000 		.4byte	0xcb8
 4123 0ca7 19       		.uleb128 0x19
 4124 0ca8 89030000 		.4byte	.LASF35
 4125 0cac 01       		.byte	0x1
 4126 0cad 990D     		.2byte	0xd99
 4127 0caf 83000000 		.4byte	0x83
 4128 0cb3 FC060000 		.4byte	.LLST56
 4129 0cb7 00       		.byte	0
 4130 0cb8 13       		.uleb128 0x13
 4131 0cb9 7B020000 		.4byte	.LASF98
 4132 0cbd 01       		.byte	0x1
 4133 0cbe C60D     		.2byte	0xdc6
 4134 0cc0 00000000 		.4byte	.LFB50
 4135 0cc4 74000000 		.4byte	.LFE50-.LFB50
 4136 0cc8 01       		.uleb128 0x1
 4137 0cc9 9C       		.byte	0x9c
 4138 0cca DD0C0000 		.4byte	0xcdd
 4139 0cce 1A       		.uleb128 0x1a
 4140 0ccf B8060000 		.4byte	.LASF99
 4141 0cd3 01       		.byte	0x1
 4142 0cd4 C60D     		.2byte	0xdc6
 4143 0cd6 DD0C0000 		.4byte	0xcdd
 4144 0cda 01       		.uleb128 0x1
 4145 0cdb 50       		.byte	0x50
 4146 0cdc 00       		.byte	0
 4147 0cdd 06       		.uleb128 0x6
 4148 0cde 04       		.byte	0x4
 4149 0cdf 83000000 		.4byte	0x83
 4150 0ce3 13       		.uleb128 0x13
 4151 0ce4 E9050000 		.4byte	.LASF100
 4152 0ce8 01       		.byte	0x1
 4153 0ce9 F30D     		.2byte	0xdf3
 4154 0ceb 00000000 		.4byte	.LFB51
 4155 0cef 20000000 		.4byte	.LFE51-.LFB51
 4156 0cf3 01       		.uleb128 0x1
 4157 0cf4 9C       		.byte	0x9c
 4158 0cf5 1A0D0000 		.4byte	0xd1a
 4159 0cf9 19       		.uleb128 0x19
 4160 0cfa 1B040000 		.4byte	.LASF101
 4161 0cfe 01       		.byte	0x1
 4162 0cff F30D     		.2byte	0xdf3
 4163 0d01 83000000 		.4byte	0x83
 4164 0d05 1D070000 		.4byte	.LLST57
 4165 0d09 15       		.uleb128 0x15
 4166 0d0a 5B030000 		.4byte	.LASF25
 4167 0d0e 01       		.byte	0x1
 4168 0d0f F50D     		.2byte	0xdf5
 4169 0d11 83000000 		.4byte	0x83
 4170 0d15 3E070000 		.4byte	.LLST58
 4171 0d19 00       		.byte	0
 4172 0d1a 13       		.uleb128 0x13
 4173 0d1b AE030000 		.4byte	.LASF102
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 144


 4174 0d1f 01       		.byte	0x1
 4175 0d20 0F0E     		.2byte	0xe0f
 4176 0d22 00000000 		.4byte	.LFB52
 4177 0d26 20000000 		.4byte	.LFE52-.LFB52
 4178 0d2a 01       		.uleb128 0x1
 4179 0d2b 9C       		.byte	0x9c
 4180 0d2c 510D0000 		.4byte	0xd51
 4181 0d30 19       		.uleb128 0x19
 4182 0d31 1B040000 		.4byte	.LASF101
 4183 0d35 01       		.byte	0x1
 4184 0d36 0F0E     		.2byte	0xe0f
 4185 0d38 83000000 		.4byte	0x83
 4186 0d3c 5C070000 		.4byte	.LLST59
 4187 0d40 15       		.uleb128 0x15
 4188 0d41 5B030000 		.4byte	.LASF25
 4189 0d45 01       		.byte	0x1
 4190 0d46 110E     		.2byte	0xe11
 4191 0d48 83000000 		.4byte	0x83
 4192 0d4c 7D070000 		.4byte	.LLST60
 4193 0d50 00       		.byte	0
 4194 0d51 13       		.uleb128 0x13
 4195 0d52 39070000 		.4byte	.LASF103
 4196 0d56 01       		.byte	0x1
 4197 0d57 2B0E     		.2byte	0xe2b
 4198 0d59 00000000 		.4byte	.LFB53
 4199 0d5d 20000000 		.4byte	.LFE53-.LFB53
 4200 0d61 01       		.uleb128 0x1
 4201 0d62 9C       		.byte	0x9c
 4202 0d63 880D0000 		.4byte	0xd88
 4203 0d67 19       		.uleb128 0x19
 4204 0d68 1B040000 		.4byte	.LASF101
 4205 0d6c 01       		.byte	0x1
 4206 0d6d 2B0E     		.2byte	0xe2b
 4207 0d6f 83000000 		.4byte	0x83
 4208 0d73 9B070000 		.4byte	.LLST61
 4209 0d77 15       		.uleb128 0x15
 4210 0d78 5B030000 		.4byte	.LASF25
 4211 0d7c 01       		.byte	0x1
 4212 0d7d 2D0E     		.2byte	0xe2d
 4213 0d7f 83000000 		.4byte	0x83
 4214 0d83 BC070000 		.4byte	.LLST62
 4215 0d87 00       		.byte	0
 4216 0d88 13       		.uleb128 0x13
 4217 0d89 3C040000 		.4byte	.LASF104
 4218 0d8d 01       		.byte	0x1
 4219 0d8e 490E     		.2byte	0xe49
 4220 0d90 00000000 		.4byte	.LFB54
 4221 0d94 40000000 		.4byte	.LFE54-.LFB54
 4222 0d98 01       		.uleb128 0x1
 4223 0d99 9C       		.byte	0x9c
 4224 0d9a E90D0000 		.4byte	0xde9
 4225 0d9e 19       		.uleb128 0x19
 4226 0d9f D1000000 		.4byte	.LASF105
 4227 0da3 01       		.byte	0x1
 4228 0da4 490E     		.2byte	0xe49
 4229 0da6 83000000 		.4byte	0x83
 4230 0daa DA070000 		.4byte	.LLST63
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 145


 4231 0dae 19       		.uleb128 0x19
 4232 0daf 1B040000 		.4byte	.LASF101
 4233 0db3 01       		.byte	0x1
 4234 0db4 490E     		.2byte	0xe49
 4235 0db6 83000000 		.4byte	0x83
 4236 0dba 46080000 		.4byte	.LLST64
 4237 0dbe 15       		.uleb128 0x15
 4238 0dbf 5B030000 		.4byte	.LASF25
 4239 0dc3 01       		.byte	0x1
 4240 0dc4 4B0E     		.2byte	0xe4b
 4241 0dc6 83000000 		.4byte	0x83
 4242 0dca 80080000 		.4byte	.LLST65
 4243 0dce 24       		.uleb128 0x24
 4244 0dcf F3000000 		.4byte	0xf3
 4245 0dd3 2A000000 		.4byte	.LBB90
 4246 0dd7 02000000 		.4byte	.LBE90-.LBB90
 4247 0ddb 01       		.byte	0x1
 4248 0ddc 650E     		.2byte	0xe65
 4249 0dde 20       		.uleb128 0x20
 4250 0ddf 00010000 		.4byte	0x100
 4251 0de3 9E080000 		.4byte	.LLST66
 4252 0de7 00       		.byte	0
 4253 0de8 00       		.byte	0
 4254 0de9 2E       		.uleb128 0x2e
 4255 0dea E7000000 		.4byte	0xe7
 4256 0dee F90D0000 		.4byte	0xdf9
 4257 0df2 2F       		.uleb128 0x2f
 4258 0df3 E0000000 		.4byte	0xe0
 4259 0df7 04       		.byte	0x4
 4260 0df8 00       		.byte	0
 4261 0df9 36       		.uleb128 0x36
 4262 0dfa A5060000 		.4byte	.LASF106
 4263 0dfe 01       		.byte	0x1
 4264 0dff 22       		.byte	0x22
 4265 0e00 E90D0000 		.4byte	0xde9
 4266 0e04 05       		.uleb128 0x5
 4267 0e05 03       		.byte	0x3
 4268 0e06 00000000 		.4byte	CySysTickCallbacks
 4269 0e0a 37       		.uleb128 0x37
 4270 0e0b 4D050000 		.4byte	.LASF107
 4271 0e0f 01       		.byte	0x1
 4272 0e10 1B       		.byte	0x1b
 4273 0e11 83000000 		.4byte	0x83
 4274 0e15 05       		.uleb128 0x5
 4275 0e16 03       		.byte	0x3
 4276 0e17 00000000 		.4byte	cydelayFreqHz
 4277 0e1b 37       		.uleb128 0x37
 4278 0e1c C6010000 		.4byte	.LASF108
 4279 0e20 01       		.byte	0x1
 4280 0e21 1C       		.byte	0x1c
 4281 0e22 83000000 		.4byte	0x83
 4282 0e26 05       		.uleb128 0x5
 4283 0e27 03       		.byte	0x3
 4284 0e28 00000000 		.4byte	cydelayFreqKhz
 4285 0e2c 37       		.uleb128 0x37
 4286 0e2d 17070000 		.4byte	.LASF109
 4287 0e31 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 146


 4288 0e32 1D       		.byte	0x1d
 4289 0e33 6B000000 		.4byte	0x6b
 4290 0e37 05       		.uleb128 0x5
 4291 0e38 03       		.byte	0x3
 4292 0e39 00000000 		.4byte	cydelayFreqMhz
 4293 0e3d 37       		.uleb128 0x37
 4294 0e3e 4E020000 		.4byte	.LASF110
 4295 0e42 01       		.byte	0x1
 4296 0e43 1E       		.byte	0x1e
 4297 0e44 83000000 		.4byte	0x83
 4298 0e48 05       		.uleb128 0x5
 4299 0e49 03       		.byte	0x3
 4300 0e4a 00000000 		.4byte	cydelay32kMs
 4301 0e4e 37       		.uleb128 0x37
 4302 0e4f 2B040000 		.4byte	.LASF111
 4303 0e53 01       		.byte	0x1
 4304 0e54 36       		.byte	0x36
 4305 0e55 83000000 		.4byte	0x83
 4306 0e59 05       		.uleb128 0x5
 4307 0e5a 03       		.byte	0x3
 4308 0e5b 00000000 		.4byte	CySysTickInitVar
 4309 0e5f 2E       		.uleb128 0x2e
 4310 0e60 6F0E0000 		.4byte	0xe6f
 4311 0e64 6F0E0000 		.4byte	0xe6f
 4312 0e68 2F       		.uleb128 0x2f
 4313 0e69 E0000000 		.4byte	0xe0
 4314 0e6d 2D       		.byte	0x2d
 4315 0e6e 00       		.byte	0
 4316 0e6f 38       		.uleb128 0x38
 4317 0e70 6B000000 		.4byte	0x6b
 4318 0e74 37       		.uleb128 0x37
 4319 0e75 2A050000 		.4byte	.LASF112
 4320 0e79 01       		.byte	0x1
 4321 0e7a 3B       		.byte	0x3b
 4322 0e7b 850E0000 		.4byte	0xe85
 4323 0e7f 05       		.uleb128 0x5
 4324 0e80 03       		.byte	0x3
 4325 0e81 00000000 		.4byte	cyImoFreqMhz2Reg
 4326 0e85 38       		.uleb128 0x38
 4327 0e86 5F0E0000 		.4byte	0xe5f
 4328 0e8a 37       		.uleb128 0x37
 4329 0e8b 38000000 		.4byte	.LASF113
 4330 0e8f 01       		.byte	0x1
 4331 0e90 58       		.byte	0x58
 4332 0e91 83000000 		.4byte	0x83
 4333 0e95 05       		.uleb128 0x5
 4334 0e96 03       		.byte	0x3
 4335 0e97 00000000 		.4byte	CySysClkPumpConfig
 4336 0e9b 39       		.uleb128 0x39
 4337 0e9c F8020000 		.4byte	.LASF114
 4338 0ea0 F8020000 		.4byte	.LASF114
 4339 0ea4 03       		.byte	0x3
 4340 0ea5 F8       		.byte	0xf8
 4341 0ea6 39       		.uleb128 0x39
 4342 0ea7 72050000 		.4byte	.LASF115
 4343 0eab 72050000 		.4byte	.LASF115
 4344 0eaf 03       		.byte	0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 147


 4345 0eb0 F9       		.byte	0xf9
 4346 0eb1 39       		.uleb128 0x39
 4347 0eb2 C5050000 		.4byte	.LASF116
 4348 0eb6 C5050000 		.4byte	.LASF116
 4349 0eba 03       		.byte	0x3
 4350 0ebb EF       		.byte	0xef
 4351 0ebc 39       		.uleb128 0x39
 4352 0ebd 7E070000 		.4byte	.LASF117
 4353 0ec1 7E070000 		.4byte	.LASF117
 4354 0ec5 04       		.byte	0x4
 4355 0ec6 52       		.byte	0x52
 4356 0ec7 39       		.uleb128 0x39
 4357 0ec8 26070000 		.4byte	.LASF118
 4358 0ecc 26070000 		.4byte	.LASF118
 4359 0ed0 05       		.byte	0x5
 4360 0ed1 54       		.byte	0x54
 4361 0ed2 00       		.byte	0
 4362              		.section	.debug_abbrev,"",%progbits
 4363              	.Ldebug_abbrev0:
 4364 0000 01       		.uleb128 0x1
 4365 0001 11       		.uleb128 0x11
 4366 0002 01       		.byte	0x1
 4367 0003 25       		.uleb128 0x25
 4368 0004 0E       		.uleb128 0xe
 4369 0005 13       		.uleb128 0x13
 4370 0006 0B       		.uleb128 0xb
 4371 0007 03       		.uleb128 0x3
 4372 0008 0E       		.uleb128 0xe
 4373 0009 1B       		.uleb128 0x1b
 4374 000a 0E       		.uleb128 0xe
 4375 000b 55       		.uleb128 0x55
 4376 000c 17       		.uleb128 0x17
 4377 000d 11       		.uleb128 0x11
 4378 000e 01       		.uleb128 0x1
 4379 000f 10       		.uleb128 0x10
 4380 0010 17       		.uleb128 0x17
 4381 0011 00       		.byte	0
 4382 0012 00       		.byte	0
 4383 0013 02       		.uleb128 0x2
 4384 0014 24       		.uleb128 0x24
 4385 0015 00       		.byte	0
 4386 0016 0B       		.uleb128 0xb
 4387 0017 0B       		.uleb128 0xb
 4388 0018 3E       		.uleb128 0x3e
 4389 0019 0B       		.uleb128 0xb
 4390 001a 03       		.uleb128 0x3
 4391 001b 0E       		.uleb128 0xe
 4392 001c 00       		.byte	0
 4393 001d 00       		.byte	0
 4394 001e 03       		.uleb128 0x3
 4395 001f 24       		.uleb128 0x24
 4396 0020 00       		.byte	0
 4397 0021 0B       		.uleb128 0xb
 4398 0022 0B       		.uleb128 0xb
 4399 0023 3E       		.uleb128 0x3e
 4400 0024 0B       		.uleb128 0xb
 4401 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 148


 4402 0026 08       		.uleb128 0x8
 4403 0027 00       		.byte	0
 4404 0028 00       		.byte	0
 4405 0029 04       		.uleb128 0x4
 4406 002a 16       		.uleb128 0x16
 4407 002b 00       		.byte	0
 4408 002c 03       		.uleb128 0x3
 4409 002d 0E       		.uleb128 0xe
 4410 002e 3A       		.uleb128 0x3a
 4411 002f 0B       		.uleb128 0xb
 4412 0030 3B       		.uleb128 0x3b
 4413 0031 05       		.uleb128 0x5
 4414 0032 49       		.uleb128 0x49
 4415 0033 13       		.uleb128 0x13
 4416 0034 00       		.byte	0
 4417 0035 00       		.byte	0
 4418 0036 05       		.uleb128 0x5
 4419 0037 35       		.uleb128 0x35
 4420 0038 00       		.byte	0
 4421 0039 49       		.uleb128 0x49
 4422 003a 13       		.uleb128 0x13
 4423 003b 00       		.byte	0
 4424 003c 00       		.byte	0
 4425 003d 06       		.uleb128 0x6
 4426 003e 0F       		.uleb128 0xf
 4427 003f 00       		.byte	0
 4428 0040 0B       		.uleb128 0xb
 4429 0041 0B       		.uleb128 0xb
 4430 0042 49       		.uleb128 0x49
 4431 0043 13       		.uleb128 0x13
 4432 0044 00       		.byte	0
 4433 0045 00       		.byte	0
 4434 0046 07       		.uleb128 0x7
 4435 0047 15       		.uleb128 0x15
 4436 0048 00       		.byte	0
 4437 0049 27       		.uleb128 0x27
 4438 004a 19       		.uleb128 0x19
 4439 004b 00       		.byte	0
 4440 004c 00       		.byte	0
 4441 004d 08       		.uleb128 0x8
 4442 004e 2E       		.uleb128 0x2e
 4443 004f 01       		.byte	0x1
 4444 0050 3F       		.uleb128 0x3f
 4445 0051 19       		.uleb128 0x19
 4446 0052 03       		.uleb128 0x3
 4447 0053 0E       		.uleb128 0xe
 4448 0054 3A       		.uleb128 0x3a
 4449 0055 0B       		.uleb128 0xb
 4450 0056 3B       		.uleb128 0x3b
 4451 0057 05       		.uleb128 0x5
 4452 0058 27       		.uleb128 0x27
 4453 0059 19       		.uleb128 0x19
 4454 005a 20       		.uleb128 0x20
 4455 005b 0B       		.uleb128 0xb
 4456 005c 01       		.uleb128 0x1
 4457 005d 13       		.uleb128 0x13
 4458 005e 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 149


 4459 005f 00       		.byte	0
 4460 0060 09       		.uleb128 0x9
 4461 0061 05       		.uleb128 0x5
 4462 0062 00       		.byte	0
 4463 0063 03       		.uleb128 0x3
 4464 0064 0E       		.uleb128 0xe
 4465 0065 3A       		.uleb128 0x3a
 4466 0066 0B       		.uleb128 0xb
 4467 0067 3B       		.uleb128 0x3b
 4468 0068 05       		.uleb128 0x5
 4469 0069 49       		.uleb128 0x49
 4470 006a 13       		.uleb128 0x13
 4471 006b 00       		.byte	0
 4472 006c 00       		.byte	0
 4473 006d 0A       		.uleb128 0xa
 4474 006e 2E       		.uleb128 0x2e
 4475 006f 01       		.byte	0x1
 4476 0070 3F       		.uleb128 0x3f
 4477 0071 19       		.uleb128 0x19
 4478 0072 03       		.uleb128 0x3
 4479 0073 0E       		.uleb128 0xe
 4480 0074 3A       		.uleb128 0x3a
 4481 0075 0B       		.uleb128 0xb
 4482 0076 3B       		.uleb128 0x3b
 4483 0077 0B       		.uleb128 0xb
 4484 0078 27       		.uleb128 0x27
 4485 0079 19       		.uleb128 0x19
 4486 007a 20       		.uleb128 0x20
 4487 007b 0B       		.uleb128 0xb
 4488 007c 01       		.uleb128 0x1
 4489 007d 13       		.uleb128 0x13
 4490 007e 00       		.byte	0
 4491 007f 00       		.byte	0
 4492 0080 0B       		.uleb128 0xb
 4493 0081 34       		.uleb128 0x34
 4494 0082 00       		.byte	0
 4495 0083 03       		.uleb128 0x3
 4496 0084 08       		.uleb128 0x8
 4497 0085 3A       		.uleb128 0x3a
 4498 0086 0B       		.uleb128 0xb
 4499 0087 3B       		.uleb128 0x3b
 4500 0088 0B       		.uleb128 0xb
 4501 0089 49       		.uleb128 0x49
 4502 008a 13       		.uleb128 0x13
 4503 008b 00       		.byte	0
 4504 008c 00       		.byte	0
 4505 008d 0C       		.uleb128 0xc
 4506 008e 34       		.uleb128 0x34
 4507 008f 00       		.byte	0
 4508 0090 03       		.uleb128 0x3
 4509 0091 0E       		.uleb128 0xe
 4510 0092 3A       		.uleb128 0x3a
 4511 0093 0B       		.uleb128 0xb
 4512 0094 3B       		.uleb128 0x3b
 4513 0095 0B       		.uleb128 0xb
 4514 0096 49       		.uleb128 0x49
 4515 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 150


 4516 0098 00       		.byte	0
 4517 0099 00       		.byte	0
 4518 009a 0D       		.uleb128 0xd
 4519 009b 2E       		.uleb128 0x2e
 4520 009c 00       		.byte	0
 4521 009d 3F       		.uleb128 0x3f
 4522 009e 19       		.uleb128 0x19
 4523 009f 03       		.uleb128 0x3
 4524 00a0 0E       		.uleb128 0xe
 4525 00a1 3A       		.uleb128 0x3a
 4526 00a2 0B       		.uleb128 0xb
 4527 00a3 3B       		.uleb128 0x3b
 4528 00a4 05       		.uleb128 0x5
 4529 00a5 27       		.uleb128 0x27
 4530 00a6 19       		.uleb128 0x19
 4531 00a7 20       		.uleb128 0x20
 4532 00a8 0B       		.uleb128 0xb
 4533 00a9 00       		.byte	0
 4534 00aa 00       		.byte	0
 4535 00ab 0E       		.uleb128 0xe
 4536 00ac 2E       		.uleb128 0x2e
 4537 00ad 01       		.byte	0x1
 4538 00ae 03       		.uleb128 0x3
 4539 00af 0E       		.uleb128 0xe
 4540 00b0 3A       		.uleb128 0x3a
 4541 00b1 0B       		.uleb128 0xb
 4542 00b2 3B       		.uleb128 0x3b
 4543 00b3 05       		.uleb128 0x5
 4544 00b4 27       		.uleb128 0x27
 4545 00b5 19       		.uleb128 0x19
 4546 00b6 20       		.uleb128 0x20
 4547 00b7 0B       		.uleb128 0xb
 4548 00b8 01       		.uleb128 0x1
 4549 00b9 13       		.uleb128 0x13
 4550 00ba 00       		.byte	0
 4551 00bb 00       		.byte	0
 4552 00bc 0F       		.uleb128 0xf
 4553 00bd 34       		.uleb128 0x34
 4554 00be 00       		.byte	0
 4555 00bf 03       		.uleb128 0x3
 4556 00c0 08       		.uleb128 0x8
 4557 00c1 3A       		.uleb128 0x3a
 4558 00c2 0B       		.uleb128 0xb
 4559 00c3 3B       		.uleb128 0x3b
 4560 00c4 05       		.uleb128 0x5
 4561 00c5 49       		.uleb128 0x49
 4562 00c6 13       		.uleb128 0x13
 4563 00c7 00       		.byte	0
 4564 00c8 00       		.byte	0
 4565 00c9 10       		.uleb128 0x10
 4566 00ca 2E       		.uleb128 0x2e
 4567 00cb 01       		.byte	0x1
 4568 00cc 3F       		.uleb128 0x3f
 4569 00cd 19       		.uleb128 0x19
 4570 00ce 03       		.uleb128 0x3
 4571 00cf 0E       		.uleb128 0xe
 4572 00d0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 151


 4573 00d1 0B       		.uleb128 0xb
 4574 00d2 3B       		.uleb128 0x3b
 4575 00d3 05       		.uleb128 0x5
 4576 00d4 27       		.uleb128 0x27
 4577 00d5 19       		.uleb128 0x19
 4578 00d6 49       		.uleb128 0x49
 4579 00d7 13       		.uleb128 0x13
 4580 00d8 20       		.uleb128 0x20
 4581 00d9 0B       		.uleb128 0xb
 4582 00da 01       		.uleb128 0x1
 4583 00db 13       		.uleb128 0x13
 4584 00dc 00       		.byte	0
 4585 00dd 00       		.byte	0
 4586 00de 11       		.uleb128 0x11
 4587 00df 34       		.uleb128 0x34
 4588 00e0 00       		.byte	0
 4589 00e1 03       		.uleb128 0x3
 4590 00e2 0E       		.uleb128 0xe
 4591 00e3 3A       		.uleb128 0x3a
 4592 00e4 0B       		.uleb128 0xb
 4593 00e5 3B       		.uleb128 0x3b
 4594 00e6 05       		.uleb128 0x5
 4595 00e7 49       		.uleb128 0x49
 4596 00e8 13       		.uleb128 0x13
 4597 00e9 00       		.byte	0
 4598 00ea 00       		.byte	0
 4599 00eb 12       		.uleb128 0x12
 4600 00ec 2E       		.uleb128 0x2e
 4601 00ed 00       		.byte	0
 4602 00ee 3F       		.uleb128 0x3f
 4603 00ef 19       		.uleb128 0x19
 4604 00f0 03       		.uleb128 0x3
 4605 00f1 0E       		.uleb128 0xe
 4606 00f2 3A       		.uleb128 0x3a
 4607 00f3 0B       		.uleb128 0xb
 4608 00f4 3B       		.uleb128 0x3b
 4609 00f5 0B       		.uleb128 0xb
 4610 00f6 27       		.uleb128 0x27
 4611 00f7 19       		.uleb128 0x19
 4612 00f8 11       		.uleb128 0x11
 4613 00f9 01       		.uleb128 0x1
 4614 00fa 12       		.uleb128 0x12
 4615 00fb 06       		.uleb128 0x6
 4616 00fc 40       		.uleb128 0x40
 4617 00fd 18       		.uleb128 0x18
 4618 00fe 9742     		.uleb128 0x2117
 4619 0100 19       		.uleb128 0x19
 4620 0101 00       		.byte	0
 4621 0102 00       		.byte	0
 4622 0103 13       		.uleb128 0x13
 4623 0104 2E       		.uleb128 0x2e
 4624 0105 01       		.byte	0x1
 4625 0106 3F       		.uleb128 0x3f
 4626 0107 19       		.uleb128 0x19
 4627 0108 03       		.uleb128 0x3
 4628 0109 0E       		.uleb128 0xe
 4629 010a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 152


 4630 010b 0B       		.uleb128 0xb
 4631 010c 3B       		.uleb128 0x3b
 4632 010d 05       		.uleb128 0x5
 4633 010e 27       		.uleb128 0x27
 4634 010f 19       		.uleb128 0x19
 4635 0110 11       		.uleb128 0x11
 4636 0111 01       		.uleb128 0x1
 4637 0112 12       		.uleb128 0x12
 4638 0113 06       		.uleb128 0x6
 4639 0114 40       		.uleb128 0x40
 4640 0115 18       		.uleb128 0x18
 4641 0116 9742     		.uleb128 0x2117
 4642 0118 19       		.uleb128 0x19
 4643 0119 01       		.uleb128 0x1
 4644 011a 13       		.uleb128 0x13
 4645 011b 00       		.byte	0
 4646 011c 00       		.byte	0
 4647 011d 14       		.uleb128 0x14
 4648 011e 34       		.uleb128 0x34
 4649 011f 00       		.byte	0
 4650 0120 03       		.uleb128 0x3
 4651 0121 08       		.uleb128 0x8
 4652 0122 3A       		.uleb128 0x3a
 4653 0123 0B       		.uleb128 0xb
 4654 0124 3B       		.uleb128 0x3b
 4655 0125 05       		.uleb128 0x5
 4656 0126 49       		.uleb128 0x49
 4657 0127 13       		.uleb128 0x13
 4658 0128 02       		.uleb128 0x2
 4659 0129 17       		.uleb128 0x17
 4660 012a 00       		.byte	0
 4661 012b 00       		.byte	0
 4662 012c 15       		.uleb128 0x15
 4663 012d 34       		.uleb128 0x34
 4664 012e 00       		.byte	0
 4665 012f 03       		.uleb128 0x3
 4666 0130 0E       		.uleb128 0xe
 4667 0131 3A       		.uleb128 0x3a
 4668 0132 0B       		.uleb128 0xb
 4669 0133 3B       		.uleb128 0x3b
 4670 0134 05       		.uleb128 0x5
 4671 0135 49       		.uleb128 0x49
 4672 0136 13       		.uleb128 0x13
 4673 0137 02       		.uleb128 0x2
 4674 0138 17       		.uleb128 0x17
 4675 0139 00       		.byte	0
 4676 013a 00       		.byte	0
 4677 013b 16       		.uleb128 0x16
 4678 013c 2E       		.uleb128 0x2e
 4679 013d 01       		.byte	0x1
 4680 013e 3F       		.uleb128 0x3f
 4681 013f 19       		.uleb128 0x19
 4682 0140 03       		.uleb128 0x3
 4683 0141 0E       		.uleb128 0xe
 4684 0142 3A       		.uleb128 0x3a
 4685 0143 0B       		.uleb128 0xb
 4686 0144 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 153


 4687 0145 0B       		.uleb128 0xb
 4688 0146 27       		.uleb128 0x27
 4689 0147 19       		.uleb128 0x19
 4690 0148 11       		.uleb128 0x11
 4691 0149 01       		.uleb128 0x1
 4692 014a 12       		.uleb128 0x12
 4693 014b 06       		.uleb128 0x6
 4694 014c 40       		.uleb128 0x40
 4695 014d 18       		.uleb128 0x18
 4696 014e 9742     		.uleb128 0x2117
 4697 0150 19       		.uleb128 0x19
 4698 0151 01       		.uleb128 0x1
 4699 0152 13       		.uleb128 0x13
 4700 0153 00       		.byte	0
 4701 0154 00       		.byte	0
 4702 0155 17       		.uleb128 0x17
 4703 0156 898201   		.uleb128 0x4109
 4704 0159 00       		.byte	0
 4705 015a 11       		.uleb128 0x11
 4706 015b 01       		.uleb128 0x1
 4707 015c 31       		.uleb128 0x31
 4708 015d 13       		.uleb128 0x13
 4709 015e 00       		.byte	0
 4710 015f 00       		.byte	0
 4711 0160 18       		.uleb128 0x18
 4712 0161 2E       		.uleb128 0x2e
 4713 0162 00       		.byte	0
 4714 0163 3F       		.uleb128 0x3f
 4715 0164 19       		.uleb128 0x19
 4716 0165 03       		.uleb128 0x3
 4717 0166 0E       		.uleb128 0xe
 4718 0167 3A       		.uleb128 0x3a
 4719 0168 0B       		.uleb128 0xb
 4720 0169 3B       		.uleb128 0x3b
 4721 016a 05       		.uleb128 0x5
 4722 016b 27       		.uleb128 0x27
 4723 016c 19       		.uleb128 0x19
 4724 016d 49       		.uleb128 0x49
 4725 016e 13       		.uleb128 0x13
 4726 016f 11       		.uleb128 0x11
 4727 0170 01       		.uleb128 0x1
 4728 0171 12       		.uleb128 0x12
 4729 0172 06       		.uleb128 0x6
 4730 0173 40       		.uleb128 0x40
 4731 0174 18       		.uleb128 0x18
 4732 0175 9742     		.uleb128 0x2117
 4733 0177 19       		.uleb128 0x19
 4734 0178 00       		.byte	0
 4735 0179 00       		.byte	0
 4736 017a 19       		.uleb128 0x19
 4737 017b 05       		.uleb128 0x5
 4738 017c 00       		.byte	0
 4739 017d 03       		.uleb128 0x3
 4740 017e 0E       		.uleb128 0xe
 4741 017f 3A       		.uleb128 0x3a
 4742 0180 0B       		.uleb128 0xb
 4743 0181 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 154


 4744 0182 05       		.uleb128 0x5
 4745 0183 49       		.uleb128 0x49
 4746 0184 13       		.uleb128 0x13
 4747 0185 02       		.uleb128 0x2
 4748 0186 17       		.uleb128 0x17
 4749 0187 00       		.byte	0
 4750 0188 00       		.byte	0
 4751 0189 1A       		.uleb128 0x1a
 4752 018a 05       		.uleb128 0x5
 4753 018b 00       		.byte	0
 4754 018c 03       		.uleb128 0x3
 4755 018d 0E       		.uleb128 0xe
 4756 018e 3A       		.uleb128 0x3a
 4757 018f 0B       		.uleb128 0xb
 4758 0190 3B       		.uleb128 0x3b
 4759 0191 05       		.uleb128 0x5
 4760 0192 49       		.uleb128 0x49
 4761 0193 13       		.uleb128 0x13
 4762 0194 02       		.uleb128 0x2
 4763 0195 18       		.uleb128 0x18
 4764 0196 00       		.byte	0
 4765 0197 00       		.byte	0
 4766 0198 1B       		.uleb128 0x1b
 4767 0199 2E       		.uleb128 0x2e
 4768 019a 01       		.byte	0x1
 4769 019b 3F       		.uleb128 0x3f
 4770 019c 19       		.uleb128 0x19
 4771 019d 03       		.uleb128 0x3
 4772 019e 0E       		.uleb128 0xe
 4773 019f 3A       		.uleb128 0x3a
 4774 01a0 0B       		.uleb128 0xb
 4775 01a1 3B       		.uleb128 0x3b
 4776 01a2 05       		.uleb128 0x5
 4777 01a3 27       		.uleb128 0x27
 4778 01a4 19       		.uleb128 0x19
 4779 01a5 49       		.uleb128 0x49
 4780 01a6 13       		.uleb128 0x13
 4781 01a7 11       		.uleb128 0x11
 4782 01a8 01       		.uleb128 0x1
 4783 01a9 12       		.uleb128 0x12
 4784 01aa 06       		.uleb128 0x6
 4785 01ab 40       		.uleb128 0x40
 4786 01ac 18       		.uleb128 0x18
 4787 01ad 9742     		.uleb128 0x2117
 4788 01af 19       		.uleb128 0x19
 4789 01b0 01       		.uleb128 0x1
 4790 01b1 13       		.uleb128 0x13
 4791 01b2 00       		.byte	0
 4792 01b3 00       		.byte	0
 4793 01b4 1C       		.uleb128 0x1c
 4794 01b5 2E       		.uleb128 0x2e
 4795 01b6 00       		.byte	0
 4796 01b7 3F       		.uleb128 0x3f
 4797 01b8 19       		.uleb128 0x19
 4798 01b9 03       		.uleb128 0x3
 4799 01ba 0E       		.uleb128 0xe
 4800 01bb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 155


 4801 01bc 0B       		.uleb128 0xb
 4802 01bd 3B       		.uleb128 0x3b
 4803 01be 05       		.uleb128 0x5
 4804 01bf 27       		.uleb128 0x27
 4805 01c0 19       		.uleb128 0x19
 4806 01c1 11       		.uleb128 0x11
 4807 01c2 01       		.uleb128 0x1
 4808 01c3 12       		.uleb128 0x12
 4809 01c4 06       		.uleb128 0x6
 4810 01c5 40       		.uleb128 0x40
 4811 01c6 18       		.uleb128 0x18
 4812 01c7 9742     		.uleb128 0x2117
 4813 01c9 19       		.uleb128 0x19
 4814 01ca 00       		.byte	0
 4815 01cb 00       		.byte	0
 4816 01cc 1D       		.uleb128 0x1d
 4817 01cd 2E       		.uleb128 0x2e
 4818 01ce 00       		.byte	0
 4819 01cf 31       		.uleb128 0x31
 4820 01d0 13       		.uleb128 0x13
 4821 01d1 11       		.uleb128 0x11
 4822 01d2 01       		.uleb128 0x1
 4823 01d3 12       		.uleb128 0x12
 4824 01d4 06       		.uleb128 0x6
 4825 01d5 40       		.uleb128 0x40
 4826 01d6 18       		.uleb128 0x18
 4827 01d7 9742     		.uleb128 0x2117
 4828 01d9 19       		.uleb128 0x19
 4829 01da 00       		.byte	0
 4830 01db 00       		.byte	0
 4831 01dc 1E       		.uleb128 0x1e
 4832 01dd 34       		.uleb128 0x34
 4833 01de 00       		.byte	0
 4834 01df 03       		.uleb128 0x3
 4835 01e0 0E       		.uleb128 0xe
 4836 01e1 3A       		.uleb128 0x3a
 4837 01e2 0B       		.uleb128 0xb
 4838 01e3 3B       		.uleb128 0x3b
 4839 01e4 05       		.uleb128 0x5
 4840 01e5 49       		.uleb128 0x49
 4841 01e6 13       		.uleb128 0x13
 4842 01e7 02       		.uleb128 0x2
 4843 01e8 18       		.uleb128 0x18
 4844 01e9 00       		.byte	0
 4845 01ea 00       		.byte	0
 4846 01eb 1F       		.uleb128 0x1f
 4847 01ec 2E       		.uleb128 0x2e
 4848 01ed 01       		.byte	0x1
 4849 01ee 31       		.uleb128 0x31
 4850 01ef 13       		.uleb128 0x13
 4851 01f0 11       		.uleb128 0x11
 4852 01f1 01       		.uleb128 0x1
 4853 01f2 12       		.uleb128 0x12
 4854 01f3 06       		.uleb128 0x6
 4855 01f4 40       		.uleb128 0x40
 4856 01f5 18       		.uleb128 0x18
 4857 01f6 9742     		.uleb128 0x2117
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 156


 4858 01f8 19       		.uleb128 0x19
 4859 01f9 01       		.uleb128 0x1
 4860 01fa 13       		.uleb128 0x13
 4861 01fb 00       		.byte	0
 4862 01fc 00       		.byte	0
 4863 01fd 20       		.uleb128 0x20
 4864 01fe 05       		.uleb128 0x5
 4865 01ff 00       		.byte	0
 4866 0200 31       		.uleb128 0x31
 4867 0201 13       		.uleb128 0x13
 4868 0202 02       		.uleb128 0x2
 4869 0203 17       		.uleb128 0x17
 4870 0204 00       		.byte	0
 4871 0205 00       		.byte	0
 4872 0206 21       		.uleb128 0x21
 4873 0207 05       		.uleb128 0x5
 4874 0208 00       		.byte	0
 4875 0209 31       		.uleb128 0x31
 4876 020a 13       		.uleb128 0x13
 4877 020b 02       		.uleb128 0x2
 4878 020c 18       		.uleb128 0x18
 4879 020d 00       		.byte	0
 4880 020e 00       		.byte	0
 4881 020f 22       		.uleb128 0x22
 4882 0210 34       		.uleb128 0x34
 4883 0211 00       		.byte	0
 4884 0212 31       		.uleb128 0x31
 4885 0213 13       		.uleb128 0x13
 4886 0214 02       		.uleb128 0x2
 4887 0215 18       		.uleb128 0x18
 4888 0216 00       		.byte	0
 4889 0217 00       		.byte	0
 4890 0218 23       		.uleb128 0x23
 4891 0219 34       		.uleb128 0x34
 4892 021a 00       		.byte	0
 4893 021b 31       		.uleb128 0x31
 4894 021c 13       		.uleb128 0x13
 4895 021d 1C       		.uleb128 0x1c
 4896 021e 06       		.uleb128 0x6
 4897 021f 00       		.byte	0
 4898 0220 00       		.byte	0
 4899 0221 24       		.uleb128 0x24
 4900 0222 1D       		.uleb128 0x1d
 4901 0223 01       		.byte	0x1
 4902 0224 31       		.uleb128 0x31
 4903 0225 13       		.uleb128 0x13
 4904 0226 11       		.uleb128 0x11
 4905 0227 01       		.uleb128 0x1
 4906 0228 12       		.uleb128 0x12
 4907 0229 06       		.uleb128 0x6
 4908 022a 58       		.uleb128 0x58
 4909 022b 0B       		.uleb128 0xb
 4910 022c 59       		.uleb128 0x59
 4911 022d 05       		.uleb128 0x5
 4912 022e 00       		.byte	0
 4913 022f 00       		.byte	0
 4914 0230 25       		.uleb128 0x25
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 157


 4915 0231 34       		.uleb128 0x34
 4916 0232 00       		.byte	0
 4917 0233 03       		.uleb128 0x3
 4918 0234 0E       		.uleb128 0xe
 4919 0235 3A       		.uleb128 0x3a
 4920 0236 0B       		.uleb128 0xb
 4921 0237 3B       		.uleb128 0x3b
 4922 0238 05       		.uleb128 0x5
 4923 0239 49       		.uleb128 0x49
 4924 023a 13       		.uleb128 0x13
 4925 023b 1C       		.uleb128 0x1c
 4926 023c 06       		.uleb128 0x6
 4927 023d 00       		.byte	0
 4928 023e 00       		.byte	0
 4929 023f 26       		.uleb128 0x26
 4930 0240 1D       		.uleb128 0x1d
 4931 0241 01       		.byte	0x1
 4932 0242 31       		.uleb128 0x31
 4933 0243 13       		.uleb128 0x13
 4934 0244 11       		.uleb128 0x11
 4935 0245 01       		.uleb128 0x1
 4936 0246 12       		.uleb128 0x12
 4937 0247 06       		.uleb128 0x6
 4938 0248 58       		.uleb128 0x58
 4939 0249 0B       		.uleb128 0xb
 4940 024a 59       		.uleb128 0x59
 4941 024b 05       		.uleb128 0x5
 4942 024c 01       		.uleb128 0x1
 4943 024d 13       		.uleb128 0x13
 4944 024e 00       		.byte	0
 4945 024f 00       		.byte	0
 4946 0250 27       		.uleb128 0x27
 4947 0251 34       		.uleb128 0x34
 4948 0252 00       		.byte	0
 4949 0253 31       		.uleb128 0x31
 4950 0254 13       		.uleb128 0x13
 4951 0255 00       		.byte	0
 4952 0256 00       		.byte	0
 4953 0257 28       		.uleb128 0x28
 4954 0258 34       		.uleb128 0x34
 4955 0259 00       		.byte	0
 4956 025a 31       		.uleb128 0x31
 4957 025b 13       		.uleb128 0x13
 4958 025c 1C       		.uleb128 0x1c
 4959 025d 0B       		.uleb128 0xb
 4960 025e 00       		.byte	0
 4961 025f 00       		.byte	0
 4962 0260 29       		.uleb128 0x29
 4963 0261 0B       		.uleb128 0xb
 4964 0262 01       		.byte	0x1
 4965 0263 11       		.uleb128 0x11
 4966 0264 01       		.uleb128 0x1
 4967 0265 12       		.uleb128 0x12
 4968 0266 06       		.uleb128 0x6
 4969 0267 01       		.uleb128 0x1
 4970 0268 13       		.uleb128 0x13
 4971 0269 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 158


 4972 026a 00       		.byte	0
 4973 026b 2A       		.uleb128 0x2a
 4974 026c 34       		.uleb128 0x34
 4975 026d 00       		.byte	0
 4976 026e 31       		.uleb128 0x31
 4977 026f 13       		.uleb128 0x13
 4978 0270 02       		.uleb128 0x2
 4979 0271 17       		.uleb128 0x17
 4980 0272 00       		.byte	0
 4981 0273 00       		.byte	0
 4982 0274 2B       		.uleb128 0x2b
 4983 0275 898201   		.uleb128 0x4109
 4984 0278 01       		.byte	0x1
 4985 0279 11       		.uleb128 0x11
 4986 027a 01       		.uleb128 0x1
 4987 027b 31       		.uleb128 0x31
 4988 027c 13       		.uleb128 0x13
 4989 027d 01       		.uleb128 0x1
 4990 027e 13       		.uleb128 0x13
 4991 027f 00       		.byte	0
 4992 0280 00       		.byte	0
 4993 0281 2C       		.uleb128 0x2c
 4994 0282 8A8201   		.uleb128 0x410a
 4995 0285 00       		.byte	0
 4996 0286 02       		.uleb128 0x2
 4997 0287 18       		.uleb128 0x18
 4998 0288 9142     		.uleb128 0x2111
 4999 028a 18       		.uleb128 0x18
 5000 028b 00       		.byte	0
 5001 028c 00       		.byte	0
 5002 028d 2D       		.uleb128 0x2d
 5003 028e 898201   		.uleb128 0x4109
 5004 0291 01       		.byte	0x1
 5005 0292 11       		.uleb128 0x11
 5006 0293 01       		.uleb128 0x1
 5007 0294 31       		.uleb128 0x31
 5008 0295 13       		.uleb128 0x13
 5009 0296 00       		.byte	0
 5010 0297 00       		.byte	0
 5011 0298 2E       		.uleb128 0x2e
 5012 0299 01       		.uleb128 0x1
 5013 029a 01       		.byte	0x1
 5014 029b 49       		.uleb128 0x49
 5015 029c 13       		.uleb128 0x13
 5016 029d 01       		.uleb128 0x1
 5017 029e 13       		.uleb128 0x13
 5018 029f 00       		.byte	0
 5019 02a0 00       		.byte	0
 5020 02a1 2F       		.uleb128 0x2f
 5021 02a2 21       		.uleb128 0x21
 5022 02a3 00       		.byte	0
 5023 02a4 49       		.uleb128 0x49
 5024 02a5 13       		.uleb128 0x13
 5025 02a6 2F       		.uleb128 0x2f
 5026 02a7 0B       		.uleb128 0xb
 5027 02a8 00       		.byte	0
 5028 02a9 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 159


 5029 02aa 30       		.uleb128 0x30
 5030 02ab 1D       		.uleb128 0x1d
 5031 02ac 00       		.byte	0
 5032 02ad 31       		.uleb128 0x31
 5033 02ae 13       		.uleb128 0x13
 5034 02af 52       		.uleb128 0x52
 5035 02b0 01       		.uleb128 0x1
 5036 02b1 55       		.uleb128 0x55
 5037 02b2 17       		.uleb128 0x17
 5038 02b3 58       		.uleb128 0x58
 5039 02b4 0B       		.uleb128 0xb
 5040 02b5 59       		.uleb128 0x59
 5041 02b6 05       		.uleb128 0x5
 5042 02b7 00       		.byte	0
 5043 02b8 00       		.byte	0
 5044 02b9 31       		.uleb128 0x31
 5045 02ba 2E       		.uleb128 0x2e
 5046 02bb 01       		.byte	0x1
 5047 02bc 3F       		.uleb128 0x3f
 5048 02bd 19       		.uleb128 0x19
 5049 02be 03       		.uleb128 0x3
 5050 02bf 0E       		.uleb128 0xe
 5051 02c0 3A       		.uleb128 0x3a
 5052 02c1 0B       		.uleb128 0xb
 5053 02c2 3B       		.uleb128 0x3b
 5054 02c3 05       		.uleb128 0x5
 5055 02c4 27       		.uleb128 0x27
 5056 02c5 19       		.uleb128 0x19
 5057 02c6 11       		.uleb128 0x11
 5058 02c7 01       		.uleb128 0x1
 5059 02c8 12       		.uleb128 0x12
 5060 02c9 06       		.uleb128 0x6
 5061 02ca 40       		.uleb128 0x40
 5062 02cb 18       		.uleb128 0x18
 5063 02cc 9642     		.uleb128 0x2116
 5064 02ce 19       		.uleb128 0x19
 5065 02cf 01       		.uleb128 0x1
 5066 02d0 13       		.uleb128 0x13
 5067 02d1 00       		.byte	0
 5068 02d2 00       		.byte	0
 5069 02d3 32       		.uleb128 0x32
 5070 02d4 1D       		.uleb128 0x1d
 5071 02d5 01       		.byte	0x1
 5072 02d6 31       		.uleb128 0x31
 5073 02d7 13       		.uleb128 0x13
 5074 02d8 52       		.uleb128 0x52
 5075 02d9 01       		.uleb128 0x1
 5076 02da 55       		.uleb128 0x55
 5077 02db 17       		.uleb128 0x17
 5078 02dc 58       		.uleb128 0x58
 5079 02dd 0B       		.uleb128 0xb
 5080 02de 59       		.uleb128 0x59
 5081 02df 05       		.uleb128 0x5
 5082 02e0 01       		.uleb128 0x1
 5083 02e1 13       		.uleb128 0x13
 5084 02e2 00       		.byte	0
 5085 02e3 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 160


 5086 02e4 33       		.uleb128 0x33
 5087 02e5 0B       		.uleb128 0xb
 5088 02e6 01       		.byte	0x1
 5089 02e7 55       		.uleb128 0x55
 5090 02e8 17       		.uleb128 0x17
 5091 02e9 00       		.byte	0
 5092 02ea 00       		.byte	0
 5093 02eb 34       		.uleb128 0x34
 5094 02ec 1D       		.uleb128 0x1d
 5095 02ed 00       		.byte	0
 5096 02ee 31       		.uleb128 0x31
 5097 02ef 13       		.uleb128 0x13
 5098 02f0 11       		.uleb128 0x11
 5099 02f1 01       		.uleb128 0x1
 5100 02f2 12       		.uleb128 0x12
 5101 02f3 06       		.uleb128 0x6
 5102 02f4 58       		.uleb128 0x58
 5103 02f5 0B       		.uleb128 0xb
 5104 02f6 59       		.uleb128 0x59
 5105 02f7 05       		.uleb128 0x5
 5106 02f8 00       		.byte	0
 5107 02f9 00       		.byte	0
 5108 02fa 35       		.uleb128 0x35
 5109 02fb 2E       		.uleb128 0x2e
 5110 02fc 01       		.byte	0x1
 5111 02fd 31       		.uleb128 0x31
 5112 02fe 13       		.uleb128 0x13
 5113 02ff 11       		.uleb128 0x11
 5114 0300 01       		.uleb128 0x1
 5115 0301 12       		.uleb128 0x12
 5116 0302 06       		.uleb128 0x6
 5117 0303 40       		.uleb128 0x40
 5118 0304 18       		.uleb128 0x18
 5119 0305 9642     		.uleb128 0x2116
 5120 0307 19       		.uleb128 0x19
 5121 0308 01       		.uleb128 0x1
 5122 0309 13       		.uleb128 0x13
 5123 030a 00       		.byte	0
 5124 030b 00       		.byte	0
 5125 030c 36       		.uleb128 0x36
 5126 030d 34       		.uleb128 0x34
 5127 030e 00       		.byte	0
 5128 030f 03       		.uleb128 0x3
 5129 0310 0E       		.uleb128 0xe
 5130 0311 3A       		.uleb128 0x3a
 5131 0312 0B       		.uleb128 0xb
 5132 0313 3B       		.uleb128 0x3b
 5133 0314 0B       		.uleb128 0xb
 5134 0315 49       		.uleb128 0x49
 5135 0316 13       		.uleb128 0x13
 5136 0317 02       		.uleb128 0x2
 5137 0318 18       		.uleb128 0x18
 5138 0319 00       		.byte	0
 5139 031a 00       		.byte	0
 5140 031b 37       		.uleb128 0x37
 5141 031c 34       		.uleb128 0x34
 5142 031d 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 161


 5143 031e 03       		.uleb128 0x3
 5144 031f 0E       		.uleb128 0xe
 5145 0320 3A       		.uleb128 0x3a
 5146 0321 0B       		.uleb128 0xb
 5147 0322 3B       		.uleb128 0x3b
 5148 0323 0B       		.uleb128 0xb
 5149 0324 49       		.uleb128 0x49
 5150 0325 13       		.uleb128 0x13
 5151 0326 3F       		.uleb128 0x3f
 5152 0327 19       		.uleb128 0x19
 5153 0328 02       		.uleb128 0x2
 5154 0329 18       		.uleb128 0x18
 5155 032a 00       		.byte	0
 5156 032b 00       		.byte	0
 5157 032c 38       		.uleb128 0x38
 5158 032d 26       		.uleb128 0x26
 5159 032e 00       		.byte	0
 5160 032f 49       		.uleb128 0x49
 5161 0330 13       		.uleb128 0x13
 5162 0331 00       		.byte	0
 5163 0332 00       		.byte	0
 5164 0333 39       		.uleb128 0x39
 5165 0334 2E       		.uleb128 0x2e
 5166 0335 00       		.byte	0
 5167 0336 3F       		.uleb128 0x3f
 5168 0337 19       		.uleb128 0x19
 5169 0338 3C       		.uleb128 0x3c
 5170 0339 19       		.uleb128 0x19
 5171 033a 6E       		.uleb128 0x6e
 5172 033b 0E       		.uleb128 0xe
 5173 033c 03       		.uleb128 0x3
 5174 033d 0E       		.uleb128 0xe
 5175 033e 3A       		.uleb128 0x3a
 5176 033f 0B       		.uleb128 0xb
 5177 0340 3B       		.uleb128 0x3b
 5178 0341 0B       		.uleb128 0xb
 5179 0342 00       		.byte	0
 5180 0343 00       		.byte	0
 5181 0344 00       		.byte	0
 5182              		.section	.debug_loc,"",%progbits
 5183              	.Ldebug_loc0:
 5184              	.LLST0:
 5185 0000 00000000 		.4byte	.LVL0
 5186 0004 0A000000 		.4byte	.LVL1
 5187 0008 0200     		.2byte	0x2
 5188 000a 30       		.byte	0x30
 5189 000b 9F       		.byte	0x9f
 5190 000c 0A000000 		.4byte	.LVL1
 5191 0010 16000000 		.4byte	.LVL2
 5192 0014 0100     		.2byte	0x1
 5193 0016 53       		.byte	0x53
 5194 0017 16000000 		.4byte	.LVL2
 5195 001b 18000000 		.4byte	.LVL3
 5196 001f 0300     		.2byte	0x3
 5197 0021 73       		.byte	0x73
 5198 0022 7D       		.sleb128 -3
 5199 0023 9F       		.byte	0x9f
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 162


 5200 0024 18000000 		.4byte	.LVL3
 5201 0028 20000000 		.4byte	.LVL5
 5202 002c 0100     		.2byte	0x1
 5203 002e 53       		.byte	0x53
 5204 002f 00000000 		.4byte	0
 5205 0033 00000000 		.4byte	0
 5206              	.LLST1:
 5207 0037 00000000 		.4byte	.LVL0
 5208 003b 16000000 		.4byte	.LVL2
 5209 003f 0200     		.2byte	0x2
 5210 0041 33       		.byte	0x33
 5211 0042 9F       		.byte	0x9f
 5212 0043 16000000 		.4byte	.LVL2
 5213 0047 18000000 		.4byte	.LVL3
 5214 004b 0100     		.2byte	0x1
 5215 004d 53       		.byte	0x53
 5216 004e 18000000 		.4byte	.LVL3
 5217 0052 20000000 		.4byte	.LVL5
 5218 0056 0200     		.2byte	0x2
 5219 0058 33       		.byte	0x33
 5220 0059 9F       		.byte	0x9f
 5221 005a 20000000 		.4byte	.LVL5
 5222 005e 2E000000 		.4byte	.LVL6
 5223 0062 0100     		.2byte	0x1
 5224 0064 53       		.byte	0x53
 5225 0065 2E000000 		.4byte	.LVL6
 5226 0069 30000000 		.4byte	.LVL7
 5227 006d 0700     		.2byte	0x7
 5228 006f 73       		.byte	0x73
 5229 0070 B39C8080 		.sleb128 -268431821
 5229      7F
 5230 0075 9F       		.byte	0x9f
 5231 0076 00000000 		.4byte	0
 5232 007a 00000000 		.4byte	0
 5233              	.LLST2:
 5234 007e 00000000 		.4byte	.LVL9
 5235 0082 07000000 		.4byte	.LVL10-1
 5236 0086 0100     		.2byte	0x1
 5237 0088 50       		.byte	0x50
 5238 0089 07000000 		.4byte	.LVL10-1
 5239 008d 1A000000 		.4byte	.LVL14
 5240 0091 0100     		.2byte	0x1
 5241 0093 54       		.byte	0x54
 5242 0094 1A000000 		.4byte	.LVL14
 5243 0098 20000000 		.4byte	.LFE6
 5244 009c 0400     		.2byte	0x4
 5245 009e F3       		.byte	0xf3
 5246 009f 01       		.uleb128 0x1
 5247 00a0 50       		.byte	0x50
 5248 00a1 9F       		.byte	0x9f
 5249 00a2 00000000 		.4byte	0
 5250 00a6 00000000 		.4byte	0
 5251              	.LLST3:
 5252 00aa 08000000 		.4byte	.LVL10
 5253 00ae 19000000 		.4byte	.LVL13-1
 5254 00b2 0100     		.2byte	0x1
 5255 00b4 50       		.byte	0x50
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 163


 5256 00b5 00000000 		.4byte	0
 5257 00b9 00000000 		.4byte	0
 5258              	.LLST4:
 5259 00bd 10000000 		.4byte	.LVL11
 5260 00c1 14000000 		.4byte	.LVL12
 5261 00c5 0100     		.2byte	0x1
 5262 00c7 52       		.byte	0x52
 5263 00c8 14000000 		.4byte	.LVL12
 5264 00cc 19000000 		.4byte	.LVL13-1
 5265 00d0 0100     		.2byte	0x1
 5266 00d2 53       		.byte	0x53
 5267 00d3 00000000 		.4byte	0
 5268 00d7 00000000 		.4byte	0
 5269              	.LLST5:
 5270 00db 06000000 		.4byte	.LVL16
 5271 00df 0D000000 		.4byte	.LVL18-1
 5272 00e3 0100     		.2byte	0x1
 5273 00e5 50       		.byte	0x50
 5274 00e6 00000000 		.4byte	0
 5275 00ea 00000000 		.4byte	0
 5276              	.LLST6:
 5277 00ee 0A000000 		.4byte	.LVL17
 5278 00f2 12000000 		.4byte	.LVL19
 5279 00f6 0500     		.2byte	0x5
 5280 00f8 74       		.byte	0x74
 5281 00f9 00       		.sleb128 0
 5282 00fa 37       		.byte	0x37
 5283 00fb 1A       		.byte	0x1a
 5284 00fc 9F       		.byte	0x9f
 5285 00fd 12000000 		.4byte	.LVL19
 5286 0101 18000000 		.4byte	.LFE8
 5287 0105 0100     		.2byte	0x1
 5288 0107 50       		.byte	0x50
 5289 0108 00000000 		.4byte	0
 5290 010c 00000000 		.4byte	0
 5291              	.LLST7:
 5292 0110 00000000 		.4byte	.LVL20
 5293 0114 07000000 		.4byte	.LVL21-1
 5294 0118 0100     		.2byte	0x1
 5295 011a 50       		.byte	0x50
 5296 011b 07000000 		.4byte	.LVL21-1
 5297 011f 0C000000 		.4byte	.LVL22
 5298 0123 0100     		.2byte	0x1
 5299 0125 54       		.byte	0x54
 5300 0126 0C000000 		.4byte	.LVL22
 5301 012a 2C000000 		.4byte	.LFE9
 5302 012e 0400     		.2byte	0x4
 5303 0130 F3       		.byte	0xf3
 5304 0131 01       		.uleb128 0x1
 5305 0132 50       		.byte	0x50
 5306 0133 9F       		.byte	0x9f
 5307 0134 00000000 		.4byte	0
 5308 0138 00000000 		.4byte	0
 5309              	.LLST8:
 5310 013c 08000000 		.4byte	.LVL21
 5311 0140 21000000 		.4byte	.LVL23-1
 5312 0144 0100     		.2byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 164


 5313 0146 50       		.byte	0x50
 5314 0147 00000000 		.4byte	0
 5315 014b 00000000 		.4byte	0
 5316              	.LLST9:
 5317 014f 00000000 		.4byte	.LVL24
 5318 0153 08000000 		.4byte	.LVL25
 5319 0157 0100     		.2byte	0x1
 5320 0159 50       		.byte	0x50
 5321 015a 08000000 		.4byte	.LVL25
 5322 015e 14000000 		.4byte	.LFE15
 5323 0162 0100     		.2byte	0x1
 5324 0164 52       		.byte	0x52
 5325 0165 00000000 		.4byte	0
 5326 0169 00000000 		.4byte	0
 5327              	.LLST10:
 5328 016d 0A000000 		.4byte	.LVL26
 5329 0171 0C000000 		.4byte	.LVL27
 5330 0175 0500     		.2byte	0x5
 5331 0177 70       		.byte	0x70
 5332 0178 00       		.sleb128 0
 5333 0179 49       		.byte	0x49
 5334 017a 1A       		.byte	0x1a
 5335 017b 9F       		.byte	0x9f
 5336 017c 0C000000 		.4byte	.LVL27
 5337 0180 14000000 		.4byte	.LFE15
 5338 0184 0100     		.2byte	0x1
 5339 0186 50       		.byte	0x50
 5340 0187 00000000 		.4byte	0
 5341 018b 00000000 		.4byte	0
 5342              	.LLST11:
 5343 018f 00000000 		.4byte	.LVL30
 5344 0193 0A000000 		.4byte	.LVL33
 5345 0197 0100     		.2byte	0x1
 5346 0199 50       		.byte	0x50
 5347 019a 0A000000 		.4byte	.LVL33
 5348 019e 14000000 		.4byte	.LFE18
 5349 01a2 0400     		.2byte	0x4
 5350 01a4 F3       		.byte	0xf3
 5351 01a5 01       		.uleb128 0x1
 5352 01a6 50       		.byte	0x50
 5353 01a7 9F       		.byte	0x9f
 5354 01a8 00000000 		.4byte	0
 5355 01ac 00000000 		.4byte	0
 5356              	.LLST12:
 5357 01b0 04000000 		.4byte	.LVL31
 5358 01b4 06000000 		.4byte	.LVL32
 5359 01b8 0200     		.2byte	0x2
 5360 01ba 30       		.byte	0x30
 5361 01bb 9F       		.byte	0x9f
 5362 01bc 00000000 		.4byte	0
 5363 01c0 00000000 		.4byte	0
 5364              	.LLST13:
 5365 01c4 00000000 		.4byte	.LVL35
 5366 01c8 0A000000 		.4byte	.LVL38
 5367 01cc 0100     		.2byte	0x1
 5368 01ce 50       		.byte	0x50
 5369 01cf 0A000000 		.4byte	.LVL38
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 165


 5370 01d3 12000000 		.4byte	.LFE19
 5371 01d7 0400     		.2byte	0x4
 5372 01d9 F3       		.byte	0xf3
 5373 01da 01       		.uleb128 0x1
 5374 01db 50       		.byte	0x50
 5375 01dc 9F       		.byte	0x9f
 5376 01dd 00000000 		.4byte	0
 5377 01e1 00000000 		.4byte	0
 5378              	.LLST14:
 5379 01e5 04000000 		.4byte	.LVL36
 5380 01e9 06000000 		.4byte	.LVL37
 5381 01ed 0200     		.2byte	0x2
 5382 01ef 30       		.byte	0x30
 5383 01f0 9F       		.byte	0x9f
 5384 01f1 00000000 		.4byte	0
 5385 01f5 00000000 		.4byte	0
 5386              	.LLST15:
 5387 01f9 00000000 		.4byte	.LVL39
 5388 01fd 0A000000 		.4byte	.LVL42
 5389 0201 0100     		.2byte	0x1
 5390 0203 50       		.byte	0x50
 5391 0204 0A000000 		.4byte	.LVL42
 5392 0208 18000000 		.4byte	.LFE20
 5393 020c 0400     		.2byte	0x4
 5394 020e F3       		.byte	0xf3
 5395 020f 01       		.uleb128 0x1
 5396 0210 50       		.byte	0x50
 5397 0211 9F       		.byte	0x9f
 5398 0212 00000000 		.4byte	0
 5399 0216 00000000 		.4byte	0
 5400              	.LLST16:
 5401 021a 04000000 		.4byte	.LVL40
 5402 021e 06000000 		.4byte	.LVL41
 5403 0222 0200     		.2byte	0x2
 5404 0224 30       		.byte	0x30
 5405 0225 9F       		.byte	0x9f
 5406 0226 00000000 		.4byte	0
 5407 022a 00000000 		.4byte	0
 5408              	.LLST17:
 5409 022e 00000000 		.4byte	.LVL44
 5410 0232 0A000000 		.4byte	.LVL47
 5411 0236 0100     		.2byte	0x1
 5412 0238 50       		.byte	0x50
 5413 0239 0A000000 		.4byte	.LVL47
 5414 023d 14000000 		.4byte	.LFE21
 5415 0241 0400     		.2byte	0x4
 5416 0243 F3       		.byte	0xf3
 5417 0244 01       		.uleb128 0x1
 5418 0245 50       		.byte	0x50
 5419 0246 9F       		.byte	0x9f
 5420 0247 00000000 		.4byte	0
 5421 024b 00000000 		.4byte	0
 5422              	.LLST18:
 5423 024f 04000000 		.4byte	.LVL45
 5424 0253 06000000 		.4byte	.LVL46
 5425 0257 0200     		.2byte	0x2
 5426 0259 30       		.byte	0x30
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 166


 5427 025a 9F       		.byte	0x9f
 5428 025b 00000000 		.4byte	0
 5429 025f 00000000 		.4byte	0
 5430              	.LLST19:
 5431 0263 00000000 		.4byte	.LVL48
 5432 0267 23000000 		.4byte	.LVL54-1
 5433 026b 0100     		.2byte	0x1
 5434 026d 50       		.byte	0x50
 5435 026e 23000000 		.4byte	.LVL54-1
 5436 0272 40000000 		.4byte	.LFE22
 5437 0276 0400     		.2byte	0x4
 5438 0278 F3       		.byte	0xf3
 5439 0279 01       		.uleb128 0x1
 5440 027a 50       		.byte	0x50
 5441 027b 9F       		.byte	0x9f
 5442 027c 00000000 		.4byte	0
 5443 0280 00000000 		.4byte	0
 5444              	.LLST20:
 5445 0284 00000000 		.4byte	.LVL48
 5446 0288 23000000 		.4byte	.LVL54-1
 5447 028c 0100     		.2byte	0x1
 5448 028e 51       		.byte	0x51
 5449 028f 23000000 		.4byte	.LVL54-1
 5450 0293 40000000 		.4byte	.LFE22
 5451 0297 0400     		.2byte	0x4
 5452 0299 F3       		.byte	0xf3
 5453 029a 01       		.uleb128 0x1
 5454 029b 51       		.byte	0x51
 5455 029c 9F       		.byte	0x9f
 5456 029d 00000000 		.4byte	0
 5457 02a1 00000000 		.4byte	0
 5458              	.LLST21:
 5459 02a5 24000000 		.4byte	.LVL54
 5460 02a9 37000000 		.4byte	.LVL58-1
 5461 02ad 0100     		.2byte	0x1
 5462 02af 50       		.byte	0x50
 5463 02b0 00000000 		.4byte	0
 5464 02b4 00000000 		.4byte	0
 5465              	.LLST22:
 5466 02b8 1C000000 		.4byte	.LVL53
 5467 02bc 38000000 		.4byte	.LVL59
 5468 02c0 0100     		.2byte	0x1
 5469 02c2 55       		.byte	0x55
 5470 02c3 00000000 		.4byte	0
 5471 02c7 00000000 		.4byte	0
 5472              	.LLST23:
 5473 02cb 2E000000 		.4byte	.LVL55
 5474 02cf 32000000 		.4byte	.LVL57
 5475 02d3 0100     		.2byte	0x1
 5476 02d5 53       		.byte	0x53
 5477 02d6 32000000 		.4byte	.LVL57
 5478 02da 38000000 		.4byte	.LVL60
 5479 02de 0100     		.2byte	0x1
 5480 02e0 56       		.byte	0x56
 5481 02e1 00000000 		.4byte	0
 5482 02e5 00000000 		.4byte	0
 5483              	.LLST24:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 167


 5484 02e9 0A000000 		.4byte	.LVL49
 5485 02ed 0C000000 		.4byte	.LVL50
 5486 02f1 0200     		.2byte	0x2
 5487 02f3 30       		.byte	0x30
 5488 02f4 9F       		.byte	0x9f
 5489 02f5 00000000 		.4byte	0
 5490 02f9 00000000 		.4byte	0
 5491              	.LLST25:
 5492 02fd 10000000 		.4byte	.LVL51
 5493 0301 12000000 		.4byte	.LVL52
 5494 0305 0200     		.2byte	0x2
 5495 0307 30       		.byte	0x30
 5496 0308 9F       		.byte	0x9f
 5497 0309 00000000 		.4byte	0
 5498 030d 00000000 		.4byte	0
 5499              	.LLST26:
 5500 0311 00000000 		.4byte	.LVL61
 5501 0315 1E000000 		.4byte	.LVL66
 5502 0319 0100     		.2byte	0x1
 5503 031b 50       		.byte	0x50
 5504 031c 1E000000 		.4byte	.LVL66
 5505 0320 28000000 		.4byte	.LFE23
 5506 0324 0400     		.2byte	0x4
 5507 0326 F3       		.byte	0xf3
 5508 0327 01       		.uleb128 0x1
 5509 0328 50       		.byte	0x50
 5510 0329 9F       		.byte	0x9f
 5511 032a 00000000 		.4byte	0
 5512 032e 00000000 		.4byte	0
 5513              	.LLST27:
 5514 0332 10000000 		.4byte	.LVL64
 5515 0336 1C000000 		.4byte	.LVL65
 5516 033a 0F00     		.2byte	0xf
 5517 033c 71       		.byte	0x71
 5518 033d 00       		.sleb128 0
 5519 033e 70       		.byte	0x70
 5520 033f 00       		.sleb128 0
 5521 0340 33       		.byte	0x33
 5522 0341 1A       		.byte	0x1a
 5523 0342 08       		.byte	0x8
 5524 0343 FF       		.byte	0xff
 5525 0344 1A       		.byte	0x1a
 5526 0345 33       		.byte	0x33
 5527 0346 24       		.byte	0x24
 5528 0347 23       		.byte	0x23
 5529 0348 06       		.uleb128 0x6
 5530 0349 25       		.byte	0x25
 5531 034a 9F       		.byte	0x9f
 5532 034b 00000000 		.4byte	0
 5533 034f 00000000 		.4byte	0
 5534              	.LLST28:
 5535 0353 04000000 		.4byte	.LVL62
 5536 0357 06000000 		.4byte	.LVL63
 5537 035b 0200     		.2byte	0x2
 5538 035d 30       		.byte	0x30
 5539 035e 9F       		.byte	0x9f
 5540 035f 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 168


 5541 0363 00000000 		.4byte	0
 5542              	.LLST29:
 5543 0367 00000000 		.4byte	.LVL67
 5544 036b 04000000 		.4byte	.LVL68
 5545 036f 0100     		.2byte	0x1
 5546 0371 50       		.byte	0x50
 5547 0372 04000000 		.4byte	.LVL68
 5548 0376 14000000 		.4byte	.LFE24
 5549 037a 0400     		.2byte	0x4
 5550 037c F3       		.byte	0xf3
 5551 037d 01       		.uleb128 0x1
 5552 037e 50       		.byte	0x50
 5553 037f 9F       		.byte	0x9f
 5554 0380 00000000 		.4byte	0
 5555 0384 00000000 		.4byte	0
 5556              	.LLST30:
 5557 0388 00000000 		.4byte	.LVL69
 5558 038c 06000000 		.4byte	.LVL70
 5559 0390 0100     		.2byte	0x1
 5560 0392 50       		.byte	0x50
 5561 0393 06000000 		.4byte	.LVL70
 5562 0397 18000000 		.4byte	.LFE25
 5563 039b 0400     		.2byte	0x4
 5564 039d F3       		.byte	0xf3
 5565 039e 01       		.uleb128 0x1
 5566 039f 50       		.byte	0x50
 5567 03a0 9F       		.byte	0x9f
 5568 03a1 00000000 		.4byte	0
 5569 03a5 00000000 		.4byte	0
 5570              	.LLST31:
 5571 03a9 00000000 		.4byte	.LVL71
 5572 03ad 04000000 		.4byte	.LVL72
 5573 03b1 0100     		.2byte	0x1
 5574 03b3 50       		.byte	0x50
 5575 03b4 04000000 		.4byte	.LVL72
 5576 03b8 14000000 		.4byte	.LFE26
 5577 03bc 0400     		.2byte	0x4
 5578 03be F3       		.byte	0xf3
 5579 03bf 01       		.uleb128 0x1
 5580 03c0 50       		.byte	0x50
 5581 03c1 9F       		.byte	0x9f
 5582 03c2 00000000 		.4byte	0
 5583 03c6 00000000 		.4byte	0
 5584              	.LLST32:
 5585 03ca 00000000 		.4byte	.LVL73
 5586 03ce 04000000 		.4byte	.LVL74
 5587 03d2 0100     		.2byte	0x1
 5588 03d4 50       		.byte	0x50
 5589 03d5 04000000 		.4byte	.LVL74
 5590 03d9 14000000 		.4byte	.LFE27
 5591 03dd 0400     		.2byte	0x4
 5592 03df F3       		.byte	0xf3
 5593 03e0 01       		.uleb128 0x1
 5594 03e1 50       		.byte	0x50
 5595 03e2 9F       		.byte	0x9f
 5596 03e3 00000000 		.4byte	0
 5597 03e7 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 169


 5598              	.LLST33:
 5599 03eb 00000000 		.4byte	.LVL75
 5600 03ef 04000000 		.4byte	.LVL76
 5601 03f3 0100     		.2byte	0x1
 5602 03f5 50       		.byte	0x50
 5603 03f6 04000000 		.4byte	.LVL76
 5604 03fa 14000000 		.4byte	.LFE28
 5605 03fe 0400     		.2byte	0x4
 5606 0400 F3       		.byte	0xf3
 5607 0401 01       		.uleb128 0x1
 5608 0402 50       		.byte	0x50
 5609 0403 9F       		.byte	0x9f
 5610 0404 00000000 		.4byte	0
 5611 0408 00000000 		.4byte	0
 5612              	.LLST34:
 5613 040c 00000000 		.4byte	.LVL78
 5614 0410 08000000 		.4byte	.LVL79
 5615 0414 0100     		.2byte	0x1
 5616 0416 50       		.byte	0x50
 5617 0417 08000000 		.4byte	.LVL79
 5618 041b 22000000 		.4byte	.LVL83
 5619 041f 0100     		.2byte	0x1
 5620 0421 54       		.byte	0x54
 5621 0422 00000000 		.4byte	0
 5622 0426 00000000 		.4byte	0
 5623              	.LLST35:
 5624 042a 14000000 		.4byte	.LVL87
 5625 042e 1A000000 		.4byte	.LVL88
 5626 0432 0200     		.2byte	0x2
 5627 0434 30       		.byte	0x30
 5628 0435 9F       		.byte	0x9f
 5629 0436 1A000000 		.4byte	.LVL88
 5630 043a 26000000 		.4byte	.LVL89
 5631 043e 0100     		.2byte	0x1
 5632 0440 53       		.byte	0x53
 5633 0441 26000000 		.4byte	.LVL89
 5634 0445 28000000 		.4byte	.LVL90
 5635 0449 0300     		.2byte	0x3
 5636 044b 73       		.byte	0x73
 5637 044c 7D       		.sleb128 -3
 5638 044d 9F       		.byte	0x9f
 5639 044e 28000000 		.4byte	.LVL90
 5640 0452 30000000 		.4byte	.LVL92
 5641 0456 0100     		.2byte	0x1
 5642 0458 53       		.byte	0x53
 5643 0459 00000000 		.4byte	0
 5644 045d 00000000 		.4byte	0
 5645              	.LLST36:
 5646 0461 14000000 		.4byte	.LVL87
 5647 0465 26000000 		.4byte	.LVL89
 5648 0469 0200     		.2byte	0x2
 5649 046b 33       		.byte	0x33
 5650 046c 9F       		.byte	0x9f
 5651 046d 26000000 		.4byte	.LVL89
 5652 0471 28000000 		.4byte	.LVL90
 5653 0475 0100     		.2byte	0x1
 5654 0477 53       		.byte	0x53
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 170


 5655 0478 28000000 		.4byte	.LVL90
 5656 047c 30000000 		.4byte	.LVL92
 5657 0480 0200     		.2byte	0x2
 5658 0482 33       		.byte	0x33
 5659 0483 9F       		.byte	0x9f
 5660 0484 30000000 		.4byte	.LVL92
 5661 0488 60000000 		.4byte	.LVL96
 5662 048c 0100     		.2byte	0x1
 5663 048e 53       		.byte	0x53
 5664 048f 00000000 		.4byte	0
 5665 0493 00000000 		.4byte	0
 5666              	.LLST37:
 5667 0497 14000000 		.4byte	.LVL87
 5668 049b B8000000 		.4byte	.LVL105
 5669 049f 0200     		.2byte	0x2
 5670 04a1 91       		.byte	0x91
 5671 04a2 5C       		.sleb128 -36
 5672 04a3 00000000 		.4byte	0
 5673 04a7 00000000 		.4byte	0
 5674              	.LLST38:
 5675 04ab 50000000 		.4byte	.LVL93
 5676 04af 54000000 		.4byte	.LVL94
 5677 04b3 0A00     		.2byte	0xa
 5678 04b5 71       		.byte	0x71
 5679 04b6 00       		.sleb128 0
 5680 04b7 11       		.byte	0x11
 5681 04b8 80F08380 		.sleb128 -1073678336
 5681      7C
 5682 04bd 1A       		.byte	0x1a
 5683 04be 9F       		.byte	0x9f
 5684 04bf 54000000 		.4byte	.LVL94
 5685 04c3 5A000000 		.4byte	.LVL95
 5686 04c7 0100     		.2byte	0x1
 5687 04c9 51       		.byte	0x51
 5688 04ca 6C000000 		.4byte	.LVL97
 5689 04ce 70000000 		.4byte	.LVL98
 5690 04d2 0100     		.2byte	0x1
 5691 04d4 53       		.byte	0x53
 5692 04d5 70000000 		.4byte	.LVL98
 5693 04d9 74000000 		.4byte	.LVL99
 5694 04dd 0200     		.2byte	0x2
 5695 04df 74       		.byte	0x74
 5696 04e0 00       		.sleb128 0
 5697 04e1 8C000000 		.4byte	.LVL101
 5698 04e5 B8000000 		.4byte	.LVL105
 5699 04e9 0100     		.2byte	0x1
 5700 04eb 57       		.byte	0x57
 5701 04ec 00000000 		.4byte	0
 5702 04f0 00000000 		.4byte	0
 5703              	.LLST39:
 5704 04f4 8C000000 		.4byte	.LVL101
 5705 04f8 90000000 		.4byte	.LVL102
 5706 04fc 0100     		.2byte	0x1
 5707 04fe 55       		.byte	0x55
 5708 04ff 90000000 		.4byte	.LVL102
 5709 0503 94000000 		.4byte	.LVL103
 5710 0507 0300     		.2byte	0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 171


 5711 0509 75       		.byte	0x75
 5712 050a 70       		.sleb128 -16
 5713 050b 9F       		.byte	0x9f
 5714 050c 94000000 		.4byte	.LVL103
 5715 0510 B8000000 		.4byte	.LVL105
 5716 0514 0100     		.2byte	0x1
 5717 0516 55       		.byte	0x55
 5718 0517 00000000 		.4byte	0
 5719 051b 00000000 		.4byte	0
 5720              	.LLST40:
 5721 051f 00000000 		.4byte	.LVL106
 5722 0523 09000000 		.4byte	.LVL107-1
 5723 0527 0100     		.2byte	0x1
 5724 0529 50       		.byte	0x50
 5725 052a 09000000 		.4byte	.LVL107-1
 5726 052e 30000000 		.4byte	.LVL113
 5727 0532 0100     		.2byte	0x1
 5728 0534 54       		.byte	0x54
 5729 0535 30000000 		.4byte	.LVL113
 5730 0539 80000000 		.4byte	.LFE10
 5731 053d 0400     		.2byte	0x4
 5732 053f F3       		.byte	0xf3
 5733 0540 01       		.uleb128 0x1
 5734 0541 50       		.byte	0x50
 5735 0542 9F       		.byte	0x9f
 5736 0543 00000000 		.4byte	0
 5737 0547 00000000 		.4byte	0
 5738              	.LLST41:
 5739 054b 00000000 		.4byte	.LVL106
 5740 054f 16000000 		.4byte	.LVL110
 5741 0553 0200     		.2byte	0x2
 5742 0555 30       		.byte	0x30
 5743 0556 9F       		.byte	0x9f
 5744 0557 16000000 		.4byte	.LVL110
 5745 055b 1C000000 		.4byte	.LVL112
 5746 055f 0200     		.2byte	0x2
 5747 0561 31       		.byte	0x31
 5748 0562 9F       		.byte	0x9f
 5749 0563 1C000000 		.4byte	.LVL112
 5750 0567 55000000 		.4byte	.LVL114-1
 5751 056b 0100     		.2byte	0x1
 5752 056d 52       		.byte	0x52
 5753 056e 00000000 		.4byte	0
 5754 0572 00000000 		.4byte	0
 5755              	.LLST42:
 5756 0576 0C000000 		.4byte	.LVL108
 5757 057a 5E000000 		.4byte	.LVL116
 5758 057e 0100     		.2byte	0x1
 5759 0580 55       		.byte	0x55
 5760 0581 00000000 		.4byte	0
 5761 0585 00000000 		.4byte	0
 5762              	.LLST43:
 5763 0589 00000000 		.4byte	.LVL117
 5764 058d 08000000 		.4byte	.LVL118
 5765 0591 0100     		.2byte	0x1
 5766 0593 50       		.byte	0x50
 5767 0594 08000000 		.4byte	.LVL118
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 172


 5768 0598 14000000 		.4byte	.LFE32
 5769 059c 0400     		.2byte	0x4
 5770 059e F3       		.byte	0xf3
 5771 059f 01       		.uleb128 0x1
 5772 05a0 50       		.byte	0x50
 5773 05a1 9F       		.byte	0x9f
 5774 05a2 00000000 		.4byte	0
 5775 05a6 00000000 		.4byte	0
 5776              	.LLST44:
 5777 05aa 00000000 		.4byte	.LVL120
 5778 05ae 0E000000 		.4byte	.LVL121
 5779 05b2 0100     		.2byte	0x1
 5780 05b4 50       		.byte	0x50
 5781 05b5 0E000000 		.4byte	.LVL121
 5782 05b9 44000000 		.4byte	.LFE11
 5783 05bd 0400     		.2byte	0x4
 5784 05bf F3       		.byte	0xf3
 5785 05c0 01       		.uleb128 0x1
 5786 05c1 50       		.byte	0x50
 5787 05c2 9F       		.byte	0x9f
 5788 05c3 00000000 		.4byte	0
 5789 05c7 00000000 		.4byte	0
 5790              	.LLST45:
 5791 05cb 00000000 		.4byte	.LVL123
 5792 05cf 18000000 		.4byte	.LVL124
 5793 05d3 0100     		.2byte	0x1
 5794 05d5 50       		.byte	0x50
 5795 05d6 18000000 		.4byte	.LVL124
 5796 05da 48000000 		.4byte	.LFE33
 5797 05de 0400     		.2byte	0x4
 5798 05e0 F3       		.byte	0xf3
 5799 05e1 01       		.uleb128 0x1
 5800 05e2 50       		.byte	0x50
 5801 05e3 9F       		.byte	0x9f
 5802 05e4 00000000 		.4byte	0
 5803 05e8 00000000 		.4byte	0
 5804              	.LLST46:
 5805 05ec 00000000 		.4byte	.LVL127
 5806 05f0 0C000000 		.4byte	.LVL128
 5807 05f4 0200     		.2byte	0x2
 5808 05f6 30       		.byte	0x30
 5809 05f7 9F       		.byte	0x9f
 5810 05f8 0C000000 		.4byte	.LVL128
 5811 05fc 10000000 		.4byte	.LVL129
 5812 0600 0200     		.2byte	0x2
 5813 0602 31       		.byte	0x31
 5814 0603 9F       		.byte	0x9f
 5815 0604 10000000 		.4byte	.LVL129
 5816 0608 12000000 		.4byte	.LVL130
 5817 060c 0200     		.2byte	0x2
 5818 060e 32       		.byte	0x32
 5819 060f 9F       		.byte	0x9f
 5820 0610 12000000 		.4byte	.LVL130
 5821 0614 14000000 		.4byte	.LVL131
 5822 0618 0200     		.2byte	0x2
 5823 061a 33       		.byte	0x33
 5824 061b 9F       		.byte	0x9f
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 173


 5825 061c 14000000 		.4byte	.LVL131
 5826 0620 54000000 		.4byte	.LFE35
 5827 0624 0200     		.2byte	0x2
 5828 0626 35       		.byte	0x35
 5829 0627 9F       		.byte	0x9f
 5830 0628 00000000 		.4byte	0
 5831 062c 00000000 		.4byte	0
 5832              	.LLST47:
 5833 0630 18000000 		.4byte	.LVL133
 5834 0634 22000000 		.4byte	.LVL134
 5835 0638 0200     		.2byte	0x2
 5836 063a 31       		.byte	0x31
 5837 063b 9F       		.byte	0x9f
 5838 063c 00000000 		.4byte	0
 5839 0640 00000000 		.4byte	0
 5840              	.LLST49:
 5841 0644 14000000 		.4byte	.LVL131
 5842 0648 18000000 		.4byte	.LVL133
 5843 064c 0600     		.2byte	0x6
 5844 064e 03       		.byte	0x3
 5845 064f 00000000 		.4byte	CySysTickServiceCallbacks
 5846 0653 9F       		.byte	0x9f
 5847 0654 00000000 		.4byte	0
 5848 0658 00000000 		.4byte	0
 5849              	.LLST50:
 5850 065c 14000000 		.4byte	.LVL131
 5851 0660 18000000 		.4byte	.LVL133
 5852 0664 0200     		.2byte	0x2
 5853 0666 3F       		.byte	0x3f
 5854 0667 9F       		.byte	0x9f
 5855 0668 00000000 		.4byte	0
 5856 066c 00000000 		.4byte	0
 5857              	.LLST51:
 5858 0670 14000000 		.4byte	.LVL131
 5859 0674 16000000 		.4byte	.LVL132
 5860 0678 0500     		.2byte	0x5
 5861 067a 0C       		.byte	0xc
 5862 067b 3C000020 		.4byte	0x2000003c
 5863 067f 16000000 		.4byte	.LVL132
 5864 0683 18000000 		.4byte	.LVL133
 5865 0687 0200     		.2byte	0x2
 5866 0689 73       		.byte	0x73
 5867 068a 00       		.sleb128 0
 5868 068b 00000000 		.4byte	0
 5869 068f 00000000 		.4byte	0
 5870              	.LLST52:
 5871 0693 2C000000 		.4byte	.LVL135
 5872 0697 30000000 		.4byte	.LVL136
 5873 069b 0100     		.2byte	0x1
 5874 069d 50       		.byte	0x50
 5875 069e 00000000 		.4byte	0
 5876 06a2 00000000 		.4byte	0
 5877              	.LLST53:
 5878 06a6 00000000 		.4byte	.LVL140
 5879 06aa 04000000 		.4byte	.LVL141
 5880 06ae 0100     		.2byte	0x1
 5881 06b0 50       		.byte	0x50
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 174


 5882 06b1 04000000 		.4byte	.LVL141
 5883 06b5 10000000 		.4byte	.LFE40
 5884 06b9 0400     		.2byte	0x4
 5885 06bb F3       		.byte	0xf3
 5886 06bc 01       		.uleb128 0x1
 5887 06bd 50       		.byte	0x50
 5888 06be 9F       		.byte	0x9f
 5889 06bf 00000000 		.4byte	0
 5890 06c3 00000000 		.4byte	0
 5891              	.LLST54:
 5892 06c7 0A000000 		.4byte	.LVL143
 5893 06cb 0E000000 		.4byte	.LVL144
 5894 06cf 0200     		.2byte	0x2
 5895 06d1 31       		.byte	0x31
 5896 06d2 9F       		.byte	0x9f
 5897 06d3 00000000 		.4byte	0
 5898 06d7 00000000 		.4byte	0
 5899              	.LLST55:
 5900 06db 00000000 		.4byte	.LVL147
 5901 06df 06000000 		.4byte	.LVL148
 5902 06e3 0100     		.2byte	0x1
 5903 06e5 50       		.byte	0x50
 5904 06e6 06000000 		.4byte	.LVL148
 5905 06ea 10000000 		.4byte	.LFE47
 5906 06ee 0400     		.2byte	0x4
 5907 06f0 F3       		.byte	0xf3
 5908 06f1 01       		.uleb128 0x1
 5909 06f2 50       		.byte	0x50
 5910 06f3 9F       		.byte	0x9f
 5911 06f4 00000000 		.4byte	0
 5912 06f8 00000000 		.4byte	0
 5913              	.LLST56:
 5914 06fc 00000000 		.4byte	.LVL149
 5915 0700 04000000 		.4byte	.LVL150
 5916 0704 0100     		.2byte	0x1
 5917 0706 50       		.byte	0x50
 5918 0707 04000000 		.4byte	.LVL150
 5919 070b 0C000000 		.4byte	.LFE48
 5920 070f 0400     		.2byte	0x4
 5921 0711 F3       		.byte	0xf3
 5922 0712 01       		.uleb128 0x1
 5923 0713 50       		.byte	0x50
 5924 0714 9F       		.byte	0x9f
 5925 0715 00000000 		.4byte	0
 5926 0719 00000000 		.4byte	0
 5927              	.LLST57:
 5928 071d 00000000 		.4byte	.LVL152
 5929 0721 08000000 		.4byte	.LVL153
 5930 0725 0100     		.2byte	0x1
 5931 0727 50       		.byte	0x50
 5932 0728 08000000 		.4byte	.LVL153
 5933 072c 20000000 		.4byte	.LFE51
 5934 0730 0400     		.2byte	0x4
 5935 0732 F3       		.byte	0xf3
 5936 0733 01       		.uleb128 0x1
 5937 0734 50       		.byte	0x50
 5938 0735 9F       		.byte	0x9f
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 175


 5939 0736 00000000 		.4byte	0
 5940 073a 00000000 		.4byte	0
 5941              	.LLST58:
 5942 073e 0A000000 		.4byte	.LVL154
 5943 0742 12000000 		.4byte	.LVL155
 5944 0746 0100     		.2byte	0x1
 5945 0748 53       		.byte	0x53
 5946 0749 12000000 		.4byte	.LVL155
 5947 074d 20000000 		.4byte	.LFE51
 5948 0751 0100     		.2byte	0x1
 5949 0753 50       		.byte	0x50
 5950 0754 00000000 		.4byte	0
 5951 0758 00000000 		.4byte	0
 5952              	.LLST59:
 5953 075c 00000000 		.4byte	.LVL156
 5954 0760 08000000 		.4byte	.LVL157
 5955 0764 0100     		.2byte	0x1
 5956 0766 50       		.byte	0x50
 5957 0767 08000000 		.4byte	.LVL157
 5958 076b 20000000 		.4byte	.LFE52
 5959 076f 0400     		.2byte	0x4
 5960 0771 F3       		.byte	0xf3
 5961 0772 01       		.uleb128 0x1
 5962 0773 50       		.byte	0x50
 5963 0774 9F       		.byte	0x9f
 5964 0775 00000000 		.4byte	0
 5965 0779 00000000 		.4byte	0
 5966              	.LLST60:
 5967 077d 0A000000 		.4byte	.LVL158
 5968 0781 12000000 		.4byte	.LVL159
 5969 0785 0100     		.2byte	0x1
 5970 0787 53       		.byte	0x53
 5971 0788 12000000 		.4byte	.LVL159
 5972 078c 20000000 		.4byte	.LFE52
 5973 0790 0100     		.2byte	0x1
 5974 0792 50       		.byte	0x50
 5975 0793 00000000 		.4byte	0
 5976 0797 00000000 		.4byte	0
 5977              	.LLST61:
 5978 079b 00000000 		.4byte	.LVL160
 5979 079f 08000000 		.4byte	.LVL161
 5980 07a3 0100     		.2byte	0x1
 5981 07a5 50       		.byte	0x50
 5982 07a6 08000000 		.4byte	.LVL161
 5983 07aa 20000000 		.4byte	.LFE53
 5984 07ae 0400     		.2byte	0x4
 5985 07b0 F3       		.byte	0xf3
 5986 07b1 01       		.uleb128 0x1
 5987 07b2 50       		.byte	0x50
 5988 07b3 9F       		.byte	0x9f
 5989 07b4 00000000 		.4byte	0
 5990 07b8 00000000 		.4byte	0
 5991              	.LLST62:
 5992 07bc 0A000000 		.4byte	.LVL162
 5993 07c0 12000000 		.4byte	.LVL163
 5994 07c4 0100     		.2byte	0x1
 5995 07c6 53       		.byte	0x53
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 176


 5996 07c7 12000000 		.4byte	.LVL163
 5997 07cb 20000000 		.4byte	.LFE53
 5998 07cf 0100     		.2byte	0x1
 5999 07d1 50       		.byte	0x50
 6000 07d2 00000000 		.4byte	0
 6001 07d6 00000000 		.4byte	0
 6002              	.LLST63:
 6003 07da 00000000 		.4byte	.LVL164
 6004 07de 06000000 		.4byte	.LVL165
 6005 07e2 0100     		.2byte	0x1
 6006 07e4 50       		.byte	0x50
 6007 07e5 06000000 		.4byte	.LVL165
 6008 07e9 08000000 		.4byte	.LVL166
 6009 07ed 0400     		.2byte	0x4
 6010 07ef F3       		.byte	0xf3
 6011 07f0 01       		.uleb128 0x1
 6012 07f1 50       		.byte	0x50
 6013 07f2 9F       		.byte	0x9f
 6014 07f3 08000000 		.4byte	.LVL166
 6015 07f7 0E000000 		.4byte	.LVL167
 6016 07fb 0100     		.2byte	0x1
 6017 07fd 50       		.byte	0x50
 6018 07fe 0E000000 		.4byte	.LVL167
 6019 0802 10000000 		.4byte	.LVL168
 6020 0806 0400     		.2byte	0x4
 6021 0808 F3       		.byte	0xf3
 6022 0809 01       		.uleb128 0x1
 6023 080a 50       		.byte	0x50
 6024 080b 9F       		.byte	0x9f
 6025 080c 10000000 		.4byte	.LVL168
 6026 0810 16000000 		.4byte	.LVL169
 6027 0814 0100     		.2byte	0x1
 6028 0816 50       		.byte	0x50
 6029 0817 16000000 		.4byte	.LVL169
 6030 081b 2A000000 		.4byte	.LVL173
 6031 081f 0400     		.2byte	0x4
 6032 0821 F3       		.byte	0xf3
 6033 0822 01       		.uleb128 0x1
 6034 0823 50       		.byte	0x50
 6035 0824 9F       		.byte	0x9f
 6036 0825 2A000000 		.4byte	.LVL173
 6037 0829 2C000000 		.4byte	.LVL174
 6038 082d 0100     		.2byte	0x1
 6039 082f 50       		.byte	0x50
 6040 0830 2C000000 		.4byte	.LVL174
 6041 0834 40000000 		.4byte	.LFE54
 6042 0838 0400     		.2byte	0x4
 6043 083a F3       		.byte	0xf3
 6044 083b 01       		.uleb128 0x1
 6045 083c 50       		.byte	0x50
 6046 083d 9F       		.byte	0x9f
 6047 083e 00000000 		.4byte	0
 6048 0842 00000000 		.4byte	0
 6049              	.LLST64:
 6050 0846 00000000 		.4byte	.LVL164
 6051 084a 1C000000 		.4byte	.LVL170
 6052 084e 0100     		.2byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 177


 6053 0850 51       		.byte	0x51
 6054 0851 1C000000 		.4byte	.LVL170
 6055 0855 2A000000 		.4byte	.LVL173
 6056 0859 0400     		.2byte	0x4
 6057 085b F3       		.byte	0xf3
 6058 085c 01       		.uleb128 0x1
 6059 085d 51       		.byte	0x51
 6060 085e 9F       		.byte	0x9f
 6061 085f 2A000000 		.4byte	.LVL173
 6062 0863 2C000000 		.4byte	.LVL174
 6063 0867 0100     		.2byte	0x1
 6064 0869 51       		.byte	0x51
 6065 086a 2C000000 		.4byte	.LVL174
 6066 086e 40000000 		.4byte	.LFE54
 6067 0872 0400     		.2byte	0x4
 6068 0874 F3       		.byte	0xf3
 6069 0875 01       		.uleb128 0x1
 6070 0876 51       		.byte	0x51
 6071 0877 9F       		.byte	0x9f
 6072 0878 00000000 		.4byte	0
 6073 087c 00000000 		.4byte	0
 6074              	.LLST65:
 6075 0880 1E000000 		.4byte	.LVL171
 6076 0884 26000000 		.4byte	.LVL172
 6077 0888 0100     		.2byte	0x1
 6078 088a 53       		.byte	0x53
 6079 088b 26000000 		.4byte	.LVL172
 6080 088f 2A000000 		.4byte	.LVL173
 6081 0893 0100     		.2byte	0x1
 6082 0895 51       		.byte	0x51
 6083 0896 00000000 		.4byte	0
 6084 089a 00000000 		.4byte	0
 6085              	.LLST66:
 6086 089e 2A000000 		.4byte	.LVL173
 6087 08a2 2C000000 		.4byte	.LVL174
 6088 08a6 0200     		.2byte	0x2
 6089 08a8 30       		.byte	0x30
 6090 08a9 9F       		.byte	0x9f
 6091 08aa 00000000 		.4byte	0
 6092 08ae 00000000 		.4byte	0
 6093              		.section	.debug_aranges,"",%progbits
 6094 0000 C4010000 		.4byte	0x1c4
 6095 0004 0200     		.2byte	0x2
 6096 0006 00000000 		.4byte	.Ldebug_info0
 6097 000a 04       		.byte	0x4
 6098 000b 00       		.byte	0
 6099 000c 0000     		.2byte	0
 6100 000e 0000     		.2byte	0
 6101 0010 00000000 		.4byte	.LFB1
 6102 0014 14000000 		.4byte	.LFE1-.LFB1
 6103 0018 00000000 		.4byte	.LFB4
 6104 001c 50000000 		.4byte	.LFE4-.LFB4
 6105 0020 00000000 		.4byte	.LFB2
 6106 0024 18000000 		.4byte	.LFE2-.LFB2
 6107 0028 00000000 		.4byte	.LFB5
 6108 002c 10000000 		.4byte	.LFE5-.LFB5
 6109 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 178


 6110 0034 20000000 		.4byte	.LFE6-.LFB6
 6111 0038 00000000 		.4byte	.LFB7
 6112 003c 34000000 		.4byte	.LFE7-.LFB7
 6113 0040 00000000 		.4byte	.LFB8
 6114 0044 18000000 		.4byte	.LFE8-.LFB8
 6115 0048 00000000 		.4byte	.LFB9
 6116 004c 2C000000 		.4byte	.LFE9-.LFB9
 6117 0050 00000000 		.4byte	.LFB12
 6118 0054 20000000 		.4byte	.LFE12-.LFB12
 6119 0058 00000000 		.4byte	.LFB13
 6120 005c 10000000 		.4byte	.LFE13-.LFB13
 6121 0060 00000000 		.4byte	.LFB14
 6122 0064 0C000000 		.4byte	.LFE14-.LFB14
 6123 0068 00000000 		.4byte	.LFB15
 6124 006c 14000000 		.4byte	.LFE15-.LFB15
 6125 0070 00000000 		.4byte	.LFB16
 6126 0074 10000000 		.4byte	.LFE16-.LFB16
 6127 0078 00000000 		.4byte	.LFB17
 6128 007c 0C000000 		.4byte	.LFE17-.LFB17
 6129 0080 00000000 		.4byte	.LFB18
 6130 0084 14000000 		.4byte	.LFE18-.LFB18
 6131 0088 00000000 		.4byte	.LFB19
 6132 008c 12000000 		.4byte	.LFE19-.LFB19
 6133 0090 00000000 		.4byte	.LFB20
 6134 0094 18000000 		.4byte	.LFE20-.LFB20
 6135 0098 00000000 		.4byte	.LFB21
 6136 009c 14000000 		.4byte	.LFE21-.LFB21
 6137 00a0 00000000 		.4byte	.LFB22
 6138 00a4 40000000 		.4byte	.LFE22-.LFB22
 6139 00a8 00000000 		.4byte	.LFB23
 6140 00ac 28000000 		.4byte	.LFE23-.LFB23
 6141 00b0 00000000 		.4byte	.LFB24
 6142 00b4 14000000 		.4byte	.LFE24-.LFB24
 6143 00b8 00000000 		.4byte	.LFB25
 6144 00bc 18000000 		.4byte	.LFE25-.LFB25
 6145 00c0 00000000 		.4byte	.LFB26
 6146 00c4 14000000 		.4byte	.LFE26-.LFB26
 6147 00c8 00000000 		.4byte	.LFB27
 6148 00cc 14000000 		.4byte	.LFE27-.LFB27
 6149 00d0 00000000 		.4byte	.LFB28
 6150 00d4 14000000 		.4byte	.LFE28-.LFB28
 6151 00d8 00000000 		.4byte	.LFB29
 6152 00dc 04000000 		.4byte	.LFE29-.LFB29
 6153 00e0 00000000 		.4byte	.LFB30
 6154 00e4 18000000 		.4byte	.LFE30-.LFB30
 6155 00e8 00000000 		.4byte	.LFB31
 6156 00ec 2C000000 		.4byte	.LFE31-.LFB31
 6157 00f0 00000000 		.4byte	.LFB3
 6158 00f4 E4000000 		.4byte	.LFE3-.LFB3
 6159 00f8 00000000 		.4byte	.LFB10
 6160 00fc 80000000 		.4byte	.LFE10-.LFB10
 6161 0100 00000000 		.4byte	.LFB32
 6162 0104 14000000 		.4byte	.LFE32-.LFB32
 6163 0108 00000000 		.4byte	.LFB11
 6164 010c 44000000 		.4byte	.LFE11-.LFB11
 6165 0110 00000000 		.4byte	.LFB33
 6166 0114 48000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 179


 6167 0118 00000000 		.4byte	.LFB35
 6168 011c 54000000 		.4byte	.LFE35-.LFB35
 6169 0120 00000000 		.4byte	.LFB37
 6170 0124 10000000 		.4byte	.LFE37-.LFB37
 6171 0128 00000000 		.4byte	.LFB38
 6172 012c 10000000 		.4byte	.LFE38-.LFB38
 6173 0130 00000000 		.4byte	.LFB36
 6174 0134 18000000 		.4byte	.LFE36-.LFB36
 6175 0138 00000000 		.4byte	.LFB34
 6176 013c 1C000000 		.4byte	.LFE34-.LFB34
 6177 0140 00000000 		.4byte	.LFB39
 6178 0144 10000000 		.4byte	.LFE39-.LFB39
 6179 0148 00000000 		.4byte	.LFB40
 6180 014c 10000000 		.4byte	.LFE40-.LFB40
 6181 0150 00000000 		.4byte	.LFB41
 6182 0154 10000000 		.4byte	.LFE41-.LFB41
 6183 0158 00000000 		.4byte	.LFB42
 6184 015c 10000000 		.4byte	.LFE42-.LFB42
 6185 0160 00000000 		.4byte	.LFB43
 6186 0164 18000000 		.4byte	.LFE43-.LFB43
 6187 0168 00000000 		.4byte	.LFB44
 6188 016c 10000000 		.4byte	.LFE44-.LFB44
 6189 0170 00000000 		.4byte	.LFB45
 6190 0174 10000000 		.4byte	.LFE45-.LFB45
 6191 0178 00000000 		.4byte	.LFB49
 6192 017c 24000000 		.4byte	.LFE49-.LFB49
 6193 0180 00000000 		.4byte	.LFB46
 6194 0184 0C000000 		.4byte	.LFE46-.LFB46
 6195 0188 00000000 		.4byte	.LFB47
 6196 018c 10000000 		.4byte	.LFE47-.LFB47
 6197 0190 00000000 		.4byte	.LFB48
 6198 0194 0C000000 		.4byte	.LFE48-.LFB48
 6199 0198 00000000 		.4byte	.LFB50
 6200 019c 74000000 		.4byte	.LFE50-.LFB50
 6201 01a0 00000000 		.4byte	.LFB51
 6202 01a4 20000000 		.4byte	.LFE51-.LFB51
 6203 01a8 00000000 		.4byte	.LFB52
 6204 01ac 20000000 		.4byte	.LFE52-.LFB52
 6205 01b0 00000000 		.4byte	.LFB53
 6206 01b4 20000000 		.4byte	.LFE53-.LFB53
 6207 01b8 00000000 		.4byte	.LFB54
 6208 01bc 40000000 		.4byte	.LFE54-.LFB54
 6209 01c0 00000000 		.4byte	0
 6210 01c4 00000000 		.4byte	0
 6211              		.section	.debug_ranges,"",%progbits
 6212              	.Ldebug_ranges0:
 6213 0000 2C000000 		.4byte	.LBB48
 6214 0004 2E000000 		.4byte	.LBE48
 6215 0008 2E000000 		.4byte	.LBB51
 6216 000c 30000000 		.4byte	.LBE51
 6217 0010 00000000 		.4byte	0
 6218 0014 00000000 		.4byte	0
 6219 0018 04000000 		.4byte	.LBB62
 6220 001c 06000000 		.4byte	.LBE62
 6221 0020 18000000 		.4byte	.LBB75
 6222 0024 1E000000 		.4byte	.LBE75
 6223 0028 20000000 		.4byte	.LBB76
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 180


 6224 002c 22000000 		.4byte	.LBE76
 6225 0030 00000000 		.4byte	0
 6226 0034 00000000 		.4byte	0
 6227 0038 08000000 		.4byte	.LBB69
 6228 003c 0A000000 		.4byte	.LBE69
 6229 0040 14000000 		.4byte	.LBB73
 6230 0044 16000000 		.4byte	.LBE73
 6231 0048 16000000 		.4byte	.LBB74
 6232 004c 18000000 		.4byte	.LBE74
 6233 0050 00000000 		.4byte	0
 6234 0054 00000000 		.4byte	0
 6235 0058 04000000 		.4byte	.LBB83
 6236 005c 06000000 		.4byte	.LBE83
 6237 0060 0A000000 		.4byte	.LBB86
 6238 0064 0E000000 		.4byte	.LBE86
 6239 0068 00000000 		.4byte	0
 6240 006c 00000000 		.4byte	0
 6241 0070 00000000 		.4byte	.LFB1
 6242 0074 14000000 		.4byte	.LFE1
 6243 0078 00000000 		.4byte	.LFB4
 6244 007c 50000000 		.4byte	.LFE4
 6245 0080 00000000 		.4byte	.LFB2
 6246 0084 18000000 		.4byte	.LFE2
 6247 0088 00000000 		.4byte	.LFB5
 6248 008c 10000000 		.4byte	.LFE5
 6249 0090 00000000 		.4byte	.LFB6
 6250 0094 20000000 		.4byte	.LFE6
 6251 0098 00000000 		.4byte	.LFB7
 6252 009c 34000000 		.4byte	.LFE7
 6253 00a0 00000000 		.4byte	.LFB8
 6254 00a4 18000000 		.4byte	.LFE8
 6255 00a8 00000000 		.4byte	.LFB9
 6256 00ac 2C000000 		.4byte	.LFE9
 6257 00b0 00000000 		.4byte	.LFB12
 6258 00b4 20000000 		.4byte	.LFE12
 6259 00b8 00000000 		.4byte	.LFB13
 6260 00bc 10000000 		.4byte	.LFE13
 6261 00c0 00000000 		.4byte	.LFB14
 6262 00c4 0C000000 		.4byte	.LFE14
 6263 00c8 00000000 		.4byte	.LFB15
 6264 00cc 14000000 		.4byte	.LFE15
 6265 00d0 00000000 		.4byte	.LFB16
 6266 00d4 10000000 		.4byte	.LFE16
 6267 00d8 00000000 		.4byte	.LFB17
 6268 00dc 0C000000 		.4byte	.LFE17
 6269 00e0 00000000 		.4byte	.LFB18
 6270 00e4 14000000 		.4byte	.LFE18
 6271 00e8 00000000 		.4byte	.LFB19
 6272 00ec 12000000 		.4byte	.LFE19
 6273 00f0 00000000 		.4byte	.LFB20
 6274 00f4 18000000 		.4byte	.LFE20
 6275 00f8 00000000 		.4byte	.LFB21
 6276 00fc 14000000 		.4byte	.LFE21
 6277 0100 00000000 		.4byte	.LFB22
 6278 0104 40000000 		.4byte	.LFE22
 6279 0108 00000000 		.4byte	.LFB23
 6280 010c 28000000 		.4byte	.LFE23
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 181


 6281 0110 00000000 		.4byte	.LFB24
 6282 0114 14000000 		.4byte	.LFE24
 6283 0118 00000000 		.4byte	.LFB25
 6284 011c 18000000 		.4byte	.LFE25
 6285 0120 00000000 		.4byte	.LFB26
 6286 0124 14000000 		.4byte	.LFE26
 6287 0128 00000000 		.4byte	.LFB27
 6288 012c 14000000 		.4byte	.LFE27
 6289 0130 00000000 		.4byte	.LFB28
 6290 0134 14000000 		.4byte	.LFE28
 6291 0138 00000000 		.4byte	.LFB29
 6292 013c 04000000 		.4byte	.LFE29
 6293 0140 00000000 		.4byte	.LFB30
 6294 0144 18000000 		.4byte	.LFE30
 6295 0148 00000000 		.4byte	.LFB31
 6296 014c 2C000000 		.4byte	.LFE31
 6297 0150 00000000 		.4byte	.LFB3
 6298 0154 E4000000 		.4byte	.LFE3
 6299 0158 00000000 		.4byte	.LFB10
 6300 015c 80000000 		.4byte	.LFE10
 6301 0160 00000000 		.4byte	.LFB32
 6302 0164 14000000 		.4byte	.LFE32
 6303 0168 00000000 		.4byte	.LFB11
 6304 016c 44000000 		.4byte	.LFE11
 6305 0170 00000000 		.4byte	.LFB33
 6306 0174 48000000 		.4byte	.LFE33
 6307 0178 00000000 		.4byte	.LFB35
 6308 017c 54000000 		.4byte	.LFE35
 6309 0180 00000000 		.4byte	.LFB37
 6310 0184 10000000 		.4byte	.LFE37
 6311 0188 00000000 		.4byte	.LFB38
 6312 018c 10000000 		.4byte	.LFE38
 6313 0190 00000000 		.4byte	.LFB36
 6314 0194 18000000 		.4byte	.LFE36
 6315 0198 00000000 		.4byte	.LFB34
 6316 019c 1C000000 		.4byte	.LFE34
 6317 01a0 00000000 		.4byte	.LFB39
 6318 01a4 10000000 		.4byte	.LFE39
 6319 01a8 00000000 		.4byte	.LFB40
 6320 01ac 10000000 		.4byte	.LFE40
 6321 01b0 00000000 		.4byte	.LFB41
 6322 01b4 10000000 		.4byte	.LFE41
 6323 01b8 00000000 		.4byte	.LFB42
 6324 01bc 10000000 		.4byte	.LFE42
 6325 01c0 00000000 		.4byte	.LFB43
 6326 01c4 18000000 		.4byte	.LFE43
 6327 01c8 00000000 		.4byte	.LFB44
 6328 01cc 10000000 		.4byte	.LFE44
 6329 01d0 00000000 		.4byte	.LFB45
 6330 01d4 10000000 		.4byte	.LFE45
 6331 01d8 00000000 		.4byte	.LFB49
 6332 01dc 24000000 		.4byte	.LFE49
 6333 01e0 00000000 		.4byte	.LFB46
 6334 01e4 0C000000 		.4byte	.LFE46
 6335 01e8 00000000 		.4byte	.LFB47
 6336 01ec 10000000 		.4byte	.LFE47
 6337 01f0 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 182


 6338 01f4 0C000000 		.4byte	.LFE48
 6339 01f8 00000000 		.4byte	.LFB50
 6340 01fc 74000000 		.4byte	.LFE50
 6341 0200 00000000 		.4byte	.LFB51
 6342 0204 20000000 		.4byte	.LFE51
 6343 0208 00000000 		.4byte	.LFB52
 6344 020c 20000000 		.4byte	.LFE52
 6345 0210 00000000 		.4byte	.LFB53
 6346 0214 20000000 		.4byte	.LFE53
 6347 0218 00000000 		.4byte	.LFB54
 6348 021c 40000000 		.4byte	.LFE54
 6349 0220 00000000 		.4byte	0
 6350 0224 00000000 		.4byte	0
 6351              		.section	.debug_line,"",%progbits
 6352              	.Ldebug_line0:
 6353 0000 FD050000 		.section	.debug_str,"MS",%progbits,1
 6353      02006700 
 6353      00000201 
 6353      FB0E0D00 
 6353      01010101 
 6354              	.LASF38:
 6355 0000 72616D56 		.ascii	"ramVectorTable\000"
 6355      6563746F 
 6355      72546162 
 6355      6C6500
 6356              	.LASF10:
 6357 000f 75696E74 		.ascii	"uint16\000"
 6357      313600
 6358              	.LASF57:
 6359 0016 696E7453 		.ascii	"intState\000"
 6359      74617465 
 6359      00
 6360              	.LASF41:
 6361 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6361      73436C6B 
 6361      57726974 
 6361      65486663 
 6361      6C6B4469 
 6362              	.LASF113:
 6363 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 6363      73436C6B 
 6363      50756D70 
 6363      436F6E66 
 6363      696700
 6364              	.LASF37:
 6365 004b 6F6C6449 		.ascii	"oldIsr\000"
 6365      737200
 6366              	.LASF121:
 6367 0052 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Desktop\\Dashboard-Firmware-FE10\\Da"
 6367      635C486F 
 6367      6D655C44 
 6367      65736B74 
 6367      6F705C44 
 6368 007f 7368626F 		.ascii	"shboard.cydsn\000"
 6368      6172642E 
 6368      63796473 
 6368      6E00
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 183


 6369              	.LASF96:
 6370 008d 72657456 		.ascii	"retVal\000"
 6370      616C00
 6371              	.LASF56:
 6372 0094 43794469 		.ascii	"CyDisableInts\000"
 6372      7361626C 
 6372      65496E74 
 6372      7300
 6373              	.LASF7:
 6374 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 6374      206C6F6E 
 6374      6720756E 
 6374      7369676E 
 6374      65642069 
 6375              	.LASF76:
 6376 00b9 70617261 		.ascii	"parameters\000"
 6376      6D657465 
 6376      727300
 6377              	.LASF58:
 6378 00c4 4379456E 		.ascii	"CyEnableInts\000"
 6378      61626C65 
 6378      496E7473 
 6378      00
 6379              	.LASF105:
 6380 00d1 696E7465 		.ascii	"interfaceNumber\000"
 6380      72666163 
 6380      654E756D 
 6380      62657200 
 6381              	.LASF72:
 6382 00e1 4379536F 		.ascii	"CySoftwareReset\000"
 6382      66747761 
 6382      72655265 
 6382      73657400 
 6383              	.LASF86:
 6384 00f1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6384      73546963 
 6384      6B456E61 
 6384      626C6549 
 6384      6E746572 
 6385              	.LASF68:
 6386 010a 4379496E 		.ascii	"CyIntGetState\000"
 6386      74476574 
 6386      53746174 
 6386      6500
 6387              	.LASF6:
 6388 0118 6C6F6E67 		.ascii	"long long int\000"
 6388      206C6F6E 
 6388      6720696E 
 6388      7400
 6389              	.LASF0:
 6390 0126 7369676E 		.ascii	"signed char\000"
 6390      65642063 
 6390      68617200 
 6391              	.LASF23:
 6392 0132 66726571 		.ascii	"freq\000"
 6392      00
 6393              	.LASF83:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 184


 6394 0137 43794465 		.ascii	"CyDelayFreq\000"
 6394      6C617946 
 6394      72657100 
 6395              	.LASF24:
 6396 0143 696E7465 		.ascii	"interruptState\000"
 6396      72727570 
 6396      74537461 
 6396      746500
 6397              	.LASF26:
 6398 0152 6C664C69 		.ascii	"lfLimit\000"
 6398      6D697400 
 6399              	.LASF90:
 6400 015a 43795379 		.ascii	"CySysTickGetReload\000"
 6400      73546963 
 6400      6B476574 
 6400      52656C6F 
 6400      616400
 6401              	.LASF51:
 6402 016d 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6402      73436C6B 
 6402      496D6F47 
 6402      65745763 
 6402      6F4C6F63 
 6403              	.LASF78:
 6404 0183 77636F4C 		.ascii	"wcoLock\000"
 6404      6F636B00 
 6405              	.LASF4:
 6406 018b 6C6F6E67 		.ascii	"long int\000"
 6406      20696E74 
 6406      00
 6407              	.LASF69:
 6408 0194 4379496E 		.ascii	"CyIntDisable\000"
 6408      74446973 
 6408      61626C65 
 6408      00
 6409              	.LASF77:
 6410 01a1 72656756 		.ascii	"regValues\000"
 6410      616C7565 
 6410      7300
 6411              	.LASF43:
 6412 01ab 43795379 		.ascii	"CySysEnablePumpClock\000"
 6412      73456E61 
 6412      626C6550 
 6412      756D7043 
 6412      6C6F636B 
 6413              	.LASF9:
 6414 01c0 75696E74 		.ascii	"uint8\000"
 6414      3800
 6415              	.LASF108:
 6416 01c6 63796465 		.ascii	"cydelayFreqKhz\000"
 6416      6C617946 
 6416      7265714B 
 6416      687A00
 6417              	.LASF45:
 6418 01d5 656E6162 		.ascii	"enable\000"
 6418      6C6500
 6419              	.LASF13:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 185


 6420 01dc 646F7562 		.ascii	"double\000"
 6420      6C6500
 6421              	.LASF65:
 6422 01e3 73686966 		.ascii	"shift\000"
 6422      7400
 6423              	.LASF31:
 6424 01e9 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6424      734C7664 
 6424      436C6561 
 6424      72496E74 
 6424      65727275 
 6425              	.LASF11:
 6426 0200 75696E74 		.ascii	"uint32\000"
 6426      333200
 6427              	.LASF59:
 6428 0207 6D61736B 		.ascii	"mask\000"
 6428      00
 6429              	.LASF53:
 6430 020c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6430      73436C6B 
 6430      47657453 
 6430      7973636C 
 6430      6B536F75 
 6431              	.LASF22:
 6432 0224 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6432      73436C6B 
 6432      496D6F45 
 6432      6E61626C 
 6432      6557636F 
 6433              	.LASF66:
 6434 023d 4379496E 		.ascii	"CyIntGetPriority\000"
 6434      74476574 
 6434      5072696F 
 6434      72697479 
 6434      00
 6435              	.LASF110:
 6436 024e 63796465 		.ascii	"cydelay32kMs\000"
 6436      6C617933 
 6436      326B4D73 
 6436      00
 6437              	.LASF84:
 6438 025b 43795379 		.ascii	"CySysTickInit\000"
 6438      73546963 
 6438      6B496E69 
 6438      7400
 6439              	.LASF34:
 6440 0269 76616C75 		.ascii	"value\000"
 6440      6500
 6441              	.LASF30:
 6442 026f 636C6F63 		.ascii	"clockSource\000"
 6442      6B536F75 
 6442      72636500 
 6443              	.LASF98:
 6444 027b 43794765 		.ascii	"CyGetUniqueId\000"
 6444      74556E69 
 6444      71756549 
 6444      6400
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 186


 6445              	.LASF93:
 6446 0289 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6446      73546963 
 6446      6B476574 
 6446      436F756E 
 6446      74466C61 
 6447              	.LASF8:
 6448 029f 756E7369 		.ascii	"unsigned int\000"
 6448      676E6564 
 6448      20696E74 
 6448      00
 6449              	.LASF32:
 6450 02ac 43795379 		.ascii	"CySysTickClear\000"
 6450      73546963 
 6450      6B436C65 
 6450      617200
 6451              	.LASF5:
 6452 02bb 6C6F6E67 		.ascii	"long unsigned int\000"
 6452      20756E73 
 6452      69676E65 
 6452      6420696E 
 6452      7400
 6453              	.LASF52:
 6454 02cd 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6454      734C7664 
 6454      47657449 
 6454      6E746572 
 6454      72757074 
 6455              	.LASF40:
 6456 02e8 43795379 		.ascii	"CySysClkImoStop\000"
 6456      73436C6B 
 6456      496D6F53 
 6456      746F7000 
 6457              	.LASF114:
 6458 02f8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6458      74657243 
 6458      72697469 
 6458      63616C53 
 6458      65637469 
 6459              	.LASF70:
 6460 030f 4379496E 		.ascii	"CyIntSetPending\000"
 6460      74536574 
 6460      50656E64 
 6460      696E6700 
 6461              	.LASF97:
 6462 031f 43795379 		.ascii	"CySysTickGetCallback\000"
 6462      73546963 
 6462      6B476574 
 6462      43616C6C 
 6462      6261636B 
 6463              	.LASF54:
 6464 0334 43795379 		.ascii	"CySysGetResetReason\000"
 6464      73476574 
 6464      52657365 
 6464      74526561 
 6464      736F6E00 
 6465              	.LASF3:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 187


 6466 0348 73686F72 		.ascii	"short unsigned int\000"
 6466      7420756E 
 6466      7369676E 
 6466      65642069 
 6466      6E7400
 6467              	.LASF25:
 6468 035b 72656754 		.ascii	"regTmp\000"
 6468      6D7000
 6469              	.LASF28:
 6470 0362 43795379 		.ascii	"CySysTickSetClockSource\000"
 6470      73546963 
 6470      6B536574 
 6470      436C6F63 
 6470      6B536F75 
 6471              	.LASF61:
 6472 037a 4379496E 		.ascii	"CyIntSetVector\000"
 6472      74536574 
 6472      56656374 
 6472      6F7200
 6473              	.LASF35:
 6474 0389 6E756D62 		.ascii	"number\000"
 6474      657200
 6475              	.LASF64:
 6476 0390 7072696F 		.ascii	"priority\000"
 6476      72697479 
 6476      00
 6477              	.LASF75:
 6478 0399 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6478      73436C6B 
 6478      57726974 
 6478      65496D6F 
 6478      46726571 
 6479              	.LASF102:
 6480 03ae 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6480      73536574 
 6480      466C6173 
 6480      68416363 
 6480      65737341 
 6481              	.LASF123:
 6482 03cd 4379496E 		.ascii	"CyIntSetSysVector\000"
 6482      74536574 
 6482      53797356 
 6482      6563746F 
 6482      7200
 6483              	.LASF39:
 6484 03df 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6484      73436C6B 
 6484      496D6F44 
 6484      69736162 
 6484      6C655763 
 6485              	.LASF16:
 6486 03f9 72656733 		.ascii	"reg32\000"
 6486      3200
 6487              	.LASF88:
 6488 03ff 43795379 		.ascii	"CySysTickStart\000"
 6488      73546963 
 6488      6B537461 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 188


 6488      727400
 6489              	.LASF55:
 6490 040e 72657475 		.ascii	"returnStatus\000"
 6490      726E5374 
 6490      61747573 
 6490      00
 6491              	.LASF101:
 6492 041b 736F7572 		.ascii	"source\000"
 6492      636500
 6493              	.LASF19:
 6494 0422 73697A65 		.ascii	"sizetype\000"
 6494      74797065 
 6494      00
 6495              	.LASF111:
 6496 042b 43795379 		.ascii	"CySysTickInitVar\000"
 6496      73546963 
 6496      6B496E69 
 6496      74566172 
 6496      00
 6497              	.LASF104:
 6498 043c 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6498      73536574 
 6498      50657269 
 6498      70686572 
 6498      616C4163 
 6499              	.LASF71:
 6500 0460 4379496E 		.ascii	"CyIntClearPending\000"
 6500      74436C65 
 6500      61725065 
 6500      6E64696E 
 6500      6700
 6501              	.LASF18:
 6502 0472 6C6F6E67 		.ascii	"long double\000"
 6502      20646F75 
 6502      626C6500 
 6503              	.LASF36:
 6504 047e 61646472 		.ascii	"address\000"
 6504      65737300 
 6505              	.LASF119:
 6506 0486 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6506      43313120 
 6506      352E342E 
 6506      31203230 
 6506      31363036 
 6507 04b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6507      20726576 
 6507      6973696F 
 6507      6E203233 
 6507      37373135 
 6508 04ec 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6508      66756E63 
 6508      74696F6E 
 6508      2D736563 
 6508      74696F6E 
 6509              	.LASF46:
 6510 0514 73797363 		.ascii	"sysclkSource\000"
 6510      6C6B536F 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 189


 6510      75726365 
 6510      00
 6511              	.LASF95:
 6512 0521 66756E63 		.ascii	"function\000"
 6512      74696F6E 
 6512      00
 6513              	.LASF112:
 6514 052a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6514      6F467265 
 6514      714D687A 
 6514      32526567 
 6514      00
 6515              	.LASF91:
 6516 053b 43795379 		.ascii	"CySysTickGetValue\000"
 6516      73546963 
 6516      6B476574 
 6516      56616C75 
 6516      6500
 6517              	.LASF107:
 6518 054d 63796465 		.ascii	"cydelayFreqHz\000"
 6518      6C617946 
 6518      72657148 
 6518      7A00
 6519              	.LASF63:
 6520 055b 4379496E 		.ascii	"CyIntSetPriority\000"
 6520      74536574 
 6520      5072696F 
 6520      72697479 
 6520      00
 6521              	.LASF12:
 6522 056c 666C6F61 		.ascii	"float\000"
 6522      7400
 6523              	.LASF115:
 6524 0572 43794578 		.ascii	"CyExitCriticalSection\000"
 6524      69744372 
 6524      69746963 
 6524      616C5365 
 6524      6374696F 
 6525              	.LASF81:
 6526 0588 43795379 		.ascii	"CySysLvdEnable\000"
 6526      734C7664 
 6526      456E6162 
 6526      6C6500
 6527              	.LASF20:
 6528 0597 63795379 		.ascii	"cySysTickCallback\000"
 6528      73546963 
 6528      6B43616C 
 6528      6C626163 
 6528      6B00
 6529              	.LASF62:
 6530 05a9 4379496E 		.ascii	"CyIntGetVector\000"
 6530      74476574 
 6530      56656374 
 6530      6F7200
 6531              	.LASF74:
 6532 05b8 6D696C6C 		.ascii	"milliseconds\000"
 6532      69736563 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 190


 6532      6F6E6473 
 6532      00
 6533              	.LASF116:
 6534 05c5 43794465 		.ascii	"CyDelayCycles\000"
 6534      6C617943 
 6534      79636C65 
 6534      7300
 6535              	.LASF15:
 6536 05d3 72656738 		.ascii	"reg8\000"
 6536      00
 6537              	.LASF82:
 6538 05d8 74687265 		.ascii	"threshold\000"
 6538      73686F6C 
 6538      6400
 6539              	.LASF21:
 6540 05e2 43794861 		.ascii	"CyHalt\000"
 6540      6C7400
 6541              	.LASF100:
 6542 05e9 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6542      73536574 
 6542      52616D41 
 6542      63636573 
 6542      73417262 
 6543              	.LASF1:
 6544 0606 756E7369 		.ascii	"unsigned char\000"
 6544      676E6564 
 6544      20636861 
 6544      7200
 6545              	.LASF2:
 6546 0614 73686F72 		.ascii	"short int\000"
 6546      7420696E 
 6546      7400
 6547              	.LASF67:
 6548 061e 4379496E 		.ascii	"CyIntEnable\000"
 6548      74456E61 
 6548      626C6500 
 6549              	.LASF60:
 6550 062a 4379496E 		.ascii	"CyIntGetSysVector\000"
 6550      74476574 
 6550      53797356 
 6550      6563746F 
 6550      7200
 6551              	.LASF44:
 6552 063c 636C6B53 		.ascii	"clkSelect\000"
 6552      656C6563 
 6552      7400
 6553              	.LASF79:
 6554 0646 43794465 		.ascii	"CyDelayUs\000"
 6554      6C617955 
 6554      7300
 6555              	.LASF29:
 6556 0650 72656173 		.ascii	"reason\000"
 6556      6F6E00
 6557              	.LASF14:
 6558 0657 63686172 		.ascii	"char\000"
 6558      00
 6559              	.LASF17:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 191


 6560 065c 63796973 		.ascii	"cyisraddress\000"
 6560      72616464 
 6560      72657373 
 6560      00
 6561              	.LASF87:
 6562 0669 43795379 		.ascii	"CySysTickEnable\000"
 6562      73546963 
 6562      6B456E61 
 6562      626C6500 
 6563              	.LASF47:
 6564 0679 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6564      73436C6B 
 6564      57726974 
 6564      65537973 
 6564      636C6B44 
 6565              	.LASF94:
 6566 0690 43795379 		.ascii	"CySysTickSetCallback\000"
 6566      73546963 
 6566      6B536574 
 6566      43616C6C 
 6566      6261636B 
 6567              	.LASF106:
 6568 06a5 43795379 		.ascii	"CySysTickCallbacks\000"
 6568      73546963 
 6568      6B43616C 
 6568      6C626163 
 6568      6B7300
 6569              	.LASF99:
 6570 06b8 756E6971 		.ascii	"uniqueId\000"
 6570      75654964 
 6570      00
 6571              	.LASF27:
 6572 06c1 666C6173 		.ascii	"flashCtlReg\000"
 6572      6843746C 
 6572      52656700 
 6573              	.LASF73:
 6574 06cd 43794465 		.ascii	"CyDelay\000"
 6574      6C617900 
 6575              	.LASF92:
 6576 06d5 43795379 		.ascii	"CySysTickGetClockSource\000"
 6576      73546963 
 6576      6B476574 
 6576      436C6F63 
 6576      6B536F75 
 6577              	.LASF89:
 6578 06ed 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6578      73546963 
 6578      6B446973 
 6578      61626C65 
 6578      496E7465 
 6579              	.LASF50:
 6580 0707 43795379 		.ascii	"CySysLvdDisable\000"
 6580      734C7664 
 6580      44697361 
 6580      626C6500 
 6581              	.LASF109:
 6582 0717 63796465 		.ascii	"cydelayFreqMhz\000"
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 192


 6582      6C617946 
 6582      7265714D 
 6582      687A00
 6583              	.LASF118:
 6584 0726 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6584      73436C6B 
 6584      57636F45 
 6584      6E61626C 
 6584      656400
 6585              	.LASF103:
 6586 0739 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6586      73536574 
 6586      446D6163 
 6586      41636365 
 6586      73734172 
 6587              	.LASF85:
 6588 0757 43795379 		.ascii	"CySysTickStop\000"
 6588      73546963 
 6588      6B53746F 
 6588      7000
 6589              	.LASF48:
 6590 0765 64697669 		.ascii	"divider\000"
 6590      64657200 
 6591              	.LASF49:
 6592 076d 43795379 		.ascii	"CySysClkImoStart\000"
 6592      73436C6B 
 6592      496D6F53 
 6592      74617274 
 6592      00
 6593              	.LASF117:
 6594 077e 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6594      73466C61 
 6594      73685365 
 6594      74576169 
 6594      74437963 
 6595              	.LASF120:
 6596 0796 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6596      72617465 
 6596      645F536F 
 6596      75726365 
 6596      5C50536F 
 6597              	.LASF80:
 6598 07b5 6D696372 		.ascii	"microseconds\000"
 6598      6F736563 
 6598      6F6E6473 
 6598      00
 6599              	.LASF42:
 6600 07c2 746D7052 		.ascii	"tmpReg\000"
 6600      656700
 6601              	.LASF33:
 6602 07c9 43795379 		.ascii	"CySysTickSetReload\000"
 6602      73546963 
 6602      6B536574 
 6602      52656C6F 
 6602      616400
 6603              	.LASF122:
 6604 07dc 43795379 		.ascii	"CySysTickServiceCallbacks\000"
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccma8hH8.s 			page 193


 6604      73546963 
 6604      6B536572 
 6604      76696365 
 6604      43616C6C 
 6605              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
