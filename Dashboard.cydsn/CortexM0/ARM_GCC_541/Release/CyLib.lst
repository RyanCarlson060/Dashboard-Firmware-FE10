ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.10
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2021, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 122 0
  39              		@ sp needed
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 107 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 122 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 4


  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0u;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 284 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL0:
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  65              		.loc 1 294 0
  66 0000 0023     		movs	r3, #0
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  67              		.loc 1 296 0
  68 0002 3F20     		movs	r0, #63
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
  69              		.loc 1 284 0
  70 0004 30B5     		push	{r4, r5, lr}
  71              		.cfi_def_cfa_offset 12
  72              		.cfi_offset 4, -12
  73              		.cfi_offset 5, -8
  74              		.cfi_offset 14, -4
  75              		.loc 1 296 0
  76 0006 0C49     		ldr	r1, .L10
  77 0008 0C4C     		ldr	r4, .L10+4
  78              	.LVL1:
  79              	.L7:
  80 000a 0A68     		ldr	r2, [r1]
  81 000c 1D5D     		ldrb	r5, [r3, r4]
  82 000e 0240     		ands	r2, r0
  83 0010 AA42     		cmp	r2, r5
  84 0012 01D1     		bne	.L5
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  85              		.loc 1 298 0
  86 0014 0333     		adds	r3, r3, #3
  87              	.LVL2:
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
  88              		.loc 1 299 0
  89 0016 03E0     		b	.L6
  90              	.LVL3:
  91              	.L5:
 294:Generated_Source\PSoC4/CyLib.c ****             {
  92              		.loc 1 294 0 discriminator 2
  93 0018 0133     		adds	r3, r3, #1
  94              	.LVL4:
  95 001a 2E2B     		cmp	r3, #46
  96 001c F5D1     		bne	.L7
 293:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 8


  97              		.loc 1 293 0
  98 001e 2B3B     		subs	r3, r3, #43
  99              	.LVL5:
 100              	.L6:
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 101              		.loc 1 316 0
 102 0020 0749     		ldr	r1, .L10+8
 103 0022 084A     		ldr	r2, .L10+12
 104 0024 0868     		ldr	r0, [r1]
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 105              		.loc 1 323 0
 106              		@ sp needed
 316:Generated_Source\PSoC4/CyLib.c **** 
 107              		.loc 1 316 0
 108 0026 0240     		ands	r2, r0
 109 0028 0A60     		str	r2, [r1]
 321:Generated_Source\PSoC4/CyLib.c ****         #endif
 110              		.loc 1 321 0
 111 002a 074A     		ldr	r2, .L10+16
 112 002c 9B18     		adds	r3, r3, r2
 113              	.LVL6:
 114 002e 1B78     		ldrb	r3, [r3]
 115              	.LVL7:
 116 0030 064A     		ldr	r2, .L10+20
 117 0032 DBB2     		uxtb	r3, r3
 118 0034 1360     		str	r3, [r2]
 119              		.loc 1 323 0
 120 0036 30BD     		pop	{r4, r5, pc}
 121              	.L11:
 122              		.align	2
 123              	.L10:
 124 0038 2CFF0B40 		.word	1074528044
 125 003c 00000000 		.word	.LANCHOR0
 126 0040 00002240 		.word	1075970048
 127 0044 FFFFFFBF 		.word	-1073741825
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 9


 128 0048 CDF1FF0F 		.word	268431821
 129 004c 28FF0B40 		.word	1074528040
 130              		.cfi_endproc
 131              	.LFE4:
 132              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 133              		.section	.text.CySysClkImoStop,"ax",%progbits
 134              		.align	1
 135              		.global	CySysClkImoStop
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysClkImoStop, %function
 139              	CySysClkImoStop:
 140              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141              		.loc 1 139 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 10B5     		push	{r4, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 149              		.loc 1 141 0
 150 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 151              	.LVL8:
 148:Generated_Source\PSoC4/CyLib.c **** }
 152              		.loc 1 148 0
 153 0006 034A     		ldr	r2, .L13
 149:Generated_Source\PSoC4/CyLib.c **** 
 154              		.loc 1 149 0
 155              		@ sp needed
 148:Generated_Source\PSoC4/CyLib.c **** }
 156              		.loc 1 148 0
 157 0008 1368     		ldr	r3, [r2]
 158 000a 5B00     		lsls	r3, r3, #1
 159 000c 5B08     		lsrs	r3, r3, #1
 160 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 161              		.loc 1 149 0
 162 0010 10BD     		pop	{r4, pc}
 163              	.L14:
 164 0012 C046     		.align	2
 165              	.L13:
 166 0014 08010B40 		.word	1074462984
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	CySysClkImoStop, .-CySysClkImoStop
 170              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 171              		.align	1
 172              		.global	CySysClkImoGetWcoLock
 173              		.code	16
 174              		.thumb_func
 175              		.type	CySysClkImoGetWcoLock, %function
 176              	CySysClkImoGetWcoLock:
 177              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 10


 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 178              		.loc 1 340 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 183              		.loc 1 341 0
 184 0000 024B     		ldr	r3, .L16
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 185              		.loc 1 344 0
 186              		@ sp needed
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 187              		.loc 1 341 0
 188 0002 1868     		ldr	r0, [r3]
 189 0004 4000     		lsls	r0, r0, #1
 190 0006 C00F     		lsrs	r0, r0, #31
 191              		.loc 1 344 0
 192 0008 7047     		bx	lr
 193              	.L17:
 194 000a C046     		.align	2
 195              	.L16:
 196 000c 00002240 		.word	1075970048
 197              		.cfi_endproc
 198              	.LFE5:
 199              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 200              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 201              		.align	1
 202              		.global	CySysClkWriteHfclkDirect
 203              		.code	16
 204              		.thumb_func
 205              		.type	CySysClkWriteHfclkDirect, %function
 206              	CySysClkWriteHfclkDirect:
 207              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 11


 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 12


 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 13


 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 14


 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 15


 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 208              		.loc 1 585 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL9:
 213 0000 10B5     		push	{r4, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
 216              		.cfi_offset 14, -4
 217              		.loc 1 585 0
 218 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 219              		.loc 1 593 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL10:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 16


 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 222              		.loc 1 625 0
 223 0008 0723     		movs	r3, #7
 224 000a 0449     		ldr	r1, .L19
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 642:Generated_Source\PSoC4/CyLib.c **** }
 225              		.loc 1 642 0
 226              		@ sp needed
 625:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 227              		.loc 1 625 0
 228 000c 0A68     		ldr	r2, [r1]
 229 000e 9A43     		bics	r2, r3
 230              	.LVL11:
 636:Generated_Source\PSoC4/CyLib.c ****     }
 231              		.loc 1 636 0
 232 0010 2340     		ands	r3, r4
 233 0012 1343     		orrs	r3, r2
 234              	.LVL12:
 639:Generated_Source\PSoC4/CyLib.c **** 
 235              		.loc 1 639 0
 236 0014 0B60     		str	r3, [r1]
 641:Generated_Source\PSoC4/CyLib.c **** }
 237              		.loc 1 641 0
 238 0016 FFF7FEFF 		bl	CyExitCriticalSection
 239              	.LVL13:
 240              	.LVL14:
 241              		.loc 1 642 0
 242 001a 10BD     		pop	{r4, pc}
 243              	.L20:
 244              		.align	2
 245              	.L19:
 246 001c 00010B40 		.word	1074462976
 247              		.cfi_endproc
 248              	.LFE6:
 249              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 250              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 251              		.align	1
 252              		.global	CySysEnablePumpClock
 253              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 17


 254              		.thumb_func
 255              		.type	CySysEnablePumpClock, %function
 256              	CySysEnablePumpClock:
 257              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 258              		.loc 1 662 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL15:
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 0002 094B     		ldr	r3, .L25
 268 0004 094C     		ldr	r4, .L25+4
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 269              		.loc 1 664 0
 270 0006 C207     		lsls	r2, r0, #31
 271 0008 04D5     		bpl	.L22
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 272              		.loc 1 666 0
 273 000a 2268     		ldr	r2, [r4]
 274 000c 1968     		ldr	r1, [r3]
 275 000e 5206     		lsls	r2, r2, #25
 276 0010 0A43     		orrs	r2, r1
 277 0012 06E0     		b	.L24
 278              	.L22:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 279              		.loc 1 670 0
 280 0014 1A68     		ldr	r2, [r3]
 281 0016 1201     		lsls	r2, r2, #4
 282 0018 520F     		lsrs	r2, r2, #29
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 18


 283 001a 2260     		str	r2, [r4]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 284              		.loc 1 672 0
 285 001c 1968     		ldr	r1, [r3]
 286 001e 044A     		ldr	r2, .L25+8
 287 0020 0A40     		ands	r2, r1
 288              	.L24:
 289 0022 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 290              		.loc 1 686 0
 291              		@ sp needed
 292 0024 10BD     		pop	{r4, pc}
 293              	.L26:
 294 0026 C046     		.align	2
 295              	.L25:
 296 0028 08010B40 		.word	1074462984
 297 002c 00000000 		.word	.LANCHOR1
 298 0030 FFFFFFF1 		.word	-234881025
 299              		.cfi_endproc
 300              	.LFE7:
 301              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 302              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 303              		.align	1
 304              		.global	CySysClkGetSysclkSource
 305              		.code	16
 306              		.thumb_func
 307              		.type	CySysClkGetSysclkSource, %function
 308              	CySysClkGetSysclkSource:
 309              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 310              		.loc 1 699 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 19


 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 4, -8
 317              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 318              		.loc 1 703 0
 319 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 320              	.LVL16:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 321              		.loc 1 713 0
 322 0006 034B     		ldr	r3, .L28
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 323              		.loc 1 725 0
 324              		@ sp needed
 713:Generated_Source\PSoC4/CyLib.c **** 
 325              		.loc 1 713 0
 326 0008 1C68     		ldr	r4, [r3]
 327              	.LVL17:
 722:Generated_Source\PSoC4/CyLib.c **** 
 328              		.loc 1 722 0
 329 000a FFF7FEFF 		bl	CyExitCriticalSection
 330              	.LVL18:
 724:Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 724 0
 332 000e 0720     		movs	r0, #7
 333 0010 2040     		ands	r0, r4
 334              	.LVL19:
 335              		.loc 1 725 0
 336 0012 10BD     		pop	{r4, pc}
 337              	.L29:
 338              		.align	2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 20


 339              	.L28:
 340 0014 00010B40 		.word	1074462976
 341              		.cfi_endproc
 342              	.LFE8:
 343              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 344              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 345              		.align	1
 346              		.global	CySysClkWriteSysclkDiv
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteSysclkDiv, %function
 350              	CySysClkWriteSysclkDiv:
 351              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 352              		.loc 1 760 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              	.LVL20:
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 21


 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363              		.loc 1 760 0
 364 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 365              		.loc 1 763 0
 366 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 367              	.LVL21:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 368              		.loc 1 766 0
 369 0008 E104     		lsls	r1, r4, #19
 370 000a E024     		movs	r4, #224
 371              	.LVL22:
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 372              		.loc 1 767 0
 373 000c 054D     		ldr	r5, .L31
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 374              		.loc 1 766 0
 375 000e A403     		lsls	r4, r4, #14
 376              		.loc 1 767 0
 377 0010 2B68     		ldr	r3, [r5]
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 378              		.loc 1 766 0
 379 0012 054A     		ldr	r2, .L31+4
 380 0014 2140     		ands	r1, r4
 381 0016 1A40     		ands	r2, r3
 382 0018 0B00     		movs	r3, r1
 383 001a 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 384              		.loc 1 765 0
 385 001c 2B60     		str	r3, [r5]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 386              		.loc 1 770 0
 387 001e FFF7FEFF 		bl	CyExitCriticalSection
 388              	.LVL23:
 771:Generated_Source\PSoC4/CyLib.c **** }
 389              		.loc 1 771 0
 390              		@ sp needed
 391 0022 70BD     		pop	{r4, r5, r6, pc}
 392              	.L32:
 393              		.align	2
 394              	.L31:
 395 0024 00010B40 		.word	1074462976
 396 0028 FFFFC7FF 		.word	-3670017
 397              		.cfi_endproc
 398              	.LFE9:
 399              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 400              		.section	.text.CySysLvdDisable,"ax",%progbits
 401              		.align	1
 402              		.global	CySysLvdDisable
 403              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 22


 404              		.thumb_func
 405              		.type	CySysLvdDisable, %function
 406              	CySysLvdDisable:
 407              	.LFB12:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 23


 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 24


 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 25


 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 26


 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 27


1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 28


1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 29


1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 30


1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 31


1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 32


1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 33


1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 34


1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 35


1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 36


1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 37


1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000u) * (
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 38


1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < (uint32)CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 39


1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 40


1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 41


1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 42


1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 43


1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 44


2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 45


2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 46


2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 47


2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 48


2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 49


2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 50


2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 51


2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 52


2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 53


2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 54


2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 55


2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 408              		.loc 1 2693 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 413              		.loc 1 2694 0
 414 0000 0221     		movs	r1, #2
 415 0002 054A     		ldr	r2, .L34
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
 416              		.loc 1 2696 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 56


 417              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 418              		.loc 1 2694 0
 419 0004 1368     		ldr	r3, [r2]
 420 0006 8B43     		bics	r3, r1
 421 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 422              		.loc 1 2695 0
 423 000a 044A     		ldr	r2, .L34+4
 424 000c 0139     		subs	r1, r1, #1
 425 000e 1368     		ldr	r3, [r2]
 426 0010 8B43     		bics	r3, r1
 427 0012 1360     		str	r3, [r2]
 428              		.loc 1 2696 0
 429 0014 7047     		bx	lr
 430              	.L35:
 431 0016 C046     		.align	2
 432              	.L34:
 433 0018 08000B40 		.word	1074462728
 434 001c 18000B40 		.word	1074462744
 435              		.cfi_endproc
 436              	.LFE12:
 437              		.size	CySysLvdDisable, .-CySysLvdDisable
 438              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 439              		.align	1
 440              		.global	CySysLvdGetInterruptSource
 441              		.code	16
 442              		.thumb_func
 443              		.type	CySysLvdGetInterruptSource, %function
 444              	CySysLvdGetInterruptSource:
 445              	.LFB13:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 446              		.loc 1 2711 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 451              		.loc 1 2712 0
 452 0000 024B     		ldr	r3, .L37
2713:Generated_Source\PSoC4/CyLib.c ****     }
 453              		.loc 1 2713 0
 454              		@ sp needed
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 57


2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 455              		.loc 1 2712 0
 456 0002 1868     		ldr	r0, [r3]
 457 0004 0223     		movs	r3, #2
 458 0006 1840     		ands	r0, r3
 459              		.loc 1 2713 0
 460 0008 7047     		bx	lr
 461              	.L38:
 462 000a C046     		.align	2
 463              	.L37:
 464 000c 04000B40 		.word	1074462724
 465              		.cfi_endproc
 466              	.LFE13:
 467              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 468              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 469              		.align	1
 470              		.global	CySysLvdClearInterrupt
 471              		.code	16
 472              		.thumb_func
 473              		.type	CySysLvdClearInterrupt, %function
 474              	CySysLvdClearInterrupt:
 475              	.LFB14:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 476              		.loc 1 2727 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 481              		.loc 1 2728 0
 482 0000 0222     		movs	r2, #2
 483 0002 014B     		ldr	r3, .L40
2729:Generated_Source\PSoC4/CyLib.c ****     }
 484              		.loc 1 2729 0
 485              		@ sp needed
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 486              		.loc 1 2728 0
 487 0004 1A60     		str	r2, [r3]
 488              		.loc 1 2729 0
 489 0006 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
 493 0008 04000B40 		.word	1074462724
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 58


 494              		.cfi_endproc
 495              	.LFE14:
 496              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 497              		.section	.text.CySysGetResetReason,"ax",%progbits
 498              		.align	1
 499              		.global	CySysGetResetReason
 500              		.code	16
 501              		.thumb_func
 502              		.type	CySysGetResetReason, %function
 503              	CySysGetResetReason:
 504              	.LFB15:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2753 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL24:
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 511              		.loc 1 2756 0
 512 0000 1923     		movs	r3, #25
 513 0002 0200     		movs	r2, r0
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 514              		.loc 1 2757 0
 515 0004 0249     		ldr	r1, .L43
2756:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 516              		.loc 1 2756 0
 517 0006 1A40     		ands	r2, r3
 518              	.LVL25:
 519              		.loc 1 2757 0
 520 0008 0868     		ldr	r0, [r1]
 521              	.LVL26:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 59


2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 522              		.loc 1 2762 0
 523              		@ sp needed
2761:Generated_Source\PSoC4/CyLib.c **** }
 524              		.loc 1 2761 0
 525 000a 1840     		ands	r0, r3
 526              	.LVL27:
2759:Generated_Source\PSoC4/CyLib.c **** 
 527              		.loc 1 2759 0
 528 000c 0A60     		str	r2, [r1]
 529              		.loc 1 2762 0
 530 000e 7047     		bx	lr
 531              	.L44:
 532              		.align	2
 533              	.L43:
 534 0010 00030B40 		.word	1074463488
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	CySysGetResetReason, .-CySysGetResetReason
 538              		.section	.text.CyDisableInts,"ax",%progbits
 539              		.align	1
 540              		.global	CyDisableInts
 541              		.code	16
 542              		.thumb_func
 543              		.type	CyDisableInts, %function
 544              	CyDisableInts:
 545              	.LFB16:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 546              		.loc 1 2776 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 60


 551              		.loc 1 2783 0
 552 0000 0122     		movs	r2, #1
2780:Generated_Source\PSoC4/CyLib.c **** 
 553              		.loc 1 2780 0
 554 0002 024B     		ldr	r3, .L46
 555              		.loc 1 2783 0
 556 0004 5242     		rsbs	r2, r2, #0
2780:Generated_Source\PSoC4/CyLib.c **** 
 557              		.loc 1 2780 0
 558 0006 1868     		ldr	r0, [r3]
 559              	.LVL28:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 560              		.loc 1 2786 0
 561              		@ sp needed
2783:Generated_Source\PSoC4/CyLib.c **** 
 562              		.loc 1 2783 0
 563 0008 1A60     		str	r2, [r3]
 564              		.loc 1 2786 0
 565 000a 7047     		bx	lr
 566              	.L47:
 567              		.align	2
 568              	.L46:
 569 000c 80E100E0 		.word	-536813184
 570              		.cfi_endproc
 571              	.LFE16:
 572              		.size	CyDisableInts, .-CyDisableInts
 573              		.section	.text.CyEnableInts,"ax",%progbits
 574              		.align	1
 575              		.global	CyEnableInts
 576              		.code	16
 577              		.thumb_func
 578              		.type	CyEnableInts, %function
 579              	CyEnableInts:
 580              	.LFB17:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 581              		.loc 1 2799 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL29:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 587              		.loc 1 2800 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 61


 588 0000 014B     		ldr	r3, .L49
2801:Generated_Source\PSoC4/CyLib.c **** }
 589              		.loc 1 2801 0
 590              		@ sp needed
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 591              		.loc 1 2800 0
 592 0002 1860     		str	r0, [r3]
 593              		.loc 1 2801 0
 594 0004 7047     		bx	lr
 595              	.L50:
 596 0006 C046     		.align	2
 597              	.L49:
 598 0008 00E100E0 		.word	-536813312
 599              		.cfi_endproc
 600              	.LFE17:
 601              		.size	CyEnableInts, .-CyEnableInts
 602              		.section	.text.CyIntSetSysVector,"ax",%progbits
 603              		.align	1
 604              		.global	CyIntSetSysVector
 605              		.code	16
 606              		.thumb_func
 607              		.type	CyIntSetSysVector, %function
 608              	CyIntSetSysVector:
 609              	.LFB18:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
 610              		.loc 1 2824 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615              	.LVL30:
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 62


2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 616              		.loc 1 2831 0
 617 0000 8023     		movs	r3, #128
 618 0002 8000     		lsls	r0, r0, #2
 619              	.LVL31:
 620 0004 9B05     		lsls	r3, r3, #22
 621 0006 C318     		adds	r3, r0, r3
 622 0008 1868     		ldr	r0, [r3]
 623              	.LVL32:
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
 624              		.loc 1 2837 0
 625              		@ sp needed
2834:Generated_Source\PSoC4/CyLib.c **** 
 626              		.loc 1 2834 0
 627 000a 1960     		str	r1, [r3]
 628              		.loc 1 2837 0
 629 000c 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE18:
 632              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 633              		.section	.text.CyIntGetSysVector,"ax",%progbits
 634              		.align	1
 635              		.global	CyIntGetSysVector
 636              		.code	16
 637              		.thumb_func
 638              		.type	CyIntGetSysVector, %function
 639              	CyIntGetSysVector:
 640              	.LFB19:
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
 641              		.loc 1 2858 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 63


 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646              	.LVL33:
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 647              		.loc 1 2863 0
 648 0000 8023     		movs	r3, #128
 649 0002 8000     		lsls	r0, r0, #2
 650              	.LVL34:
 651 0004 9B05     		lsls	r3, r3, #22
 652 0006 C018     		adds	r0, r0, r3
 653 0008 0068     		ldr	r0, [r0]
2864:Generated_Source\PSoC4/CyLib.c **** }
 654              		.loc 1 2864 0
 655              		@ sp needed
 656 000a 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE19:
 659              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 660              		.section	.text.CyIntSetVector,"ax",%progbits
 661              		.align	1
 662              		.global	CyIntSetVector
 663              		.code	16
 664              		.thumb_func
 665              		.type	CyIntSetVector, %function
 666              	CyIntSetVector:
 667              	.LFB20:
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
 668              		.loc 1 2880 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL35:
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 64


2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 674              		.loc 1 2887 0
 675 0000 024B     		ldr	r3, .L54
 676 0002 8000     		lsls	r0, r0, #2
 677              	.LVL36:
 678 0004 C318     		adds	r3, r0, r3
 679 0006 1868     		ldr	r0, [r3]
 680              	.LVL37:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
 681              		.loc 1 2893 0
 682              		@ sp needed
2890:Generated_Source\PSoC4/CyLib.c **** 
 683              		.loc 1 2890 0
 684 0008 1960     		str	r1, [r3]
 685              		.loc 1 2893 0
 686 000a 7047     		bx	lr
 687              	.L55:
 688              		.align	2
 689              	.L54:
 690 000c 40000020 		.word	536870976
 691              		.cfi_endproc
 692              	.LFE20:
 693              		.size	CyIntSetVector, .-CyIntSetVector
 694              		.section	.text.CyIntGetVector,"ax",%progbits
 695              		.align	1
 696              		.global	CyIntGetVector
 697              		.code	16
 698              		.thumb_func
 699              		.type	CyIntGetVector, %function
 700              	CyIntGetVector:
 701              	.LFB21:
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
 702              		.loc 1 2908 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 65


 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL38:
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 708              		.loc 1 2913 0
 709 0000 024B     		ldr	r3, .L57
 710 0002 8000     		lsls	r0, r0, #2
 711              	.LVL39:
 712 0004 C018     		adds	r0, r0, r3
 713 0006 0068     		ldr	r0, [r0]
2914:Generated_Source\PSoC4/CyLib.c **** }
 714              		.loc 1 2914 0
 715              		@ sp needed
 716 0008 7047     		bx	lr
 717              	.L58:
 718 000a C046     		.align	2
 719              	.L57:
 720 000c 40000020 		.word	536870976
 721              		.cfi_endproc
 722              	.LFE21:
 723              		.size	CyIntGetVector, .-CyIntGetVector
 724              		.section	.text.CyIntSetPriority,"ax",%progbits
 725              		.align	1
 726              		.global	CyIntSetPriority
 727              		.code	16
 728              		.thumb_func
 729              		.type	CyIntSetPriority, %function
 730              	CyIntSetPriority:
 731              	.LFB22:
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
 732              		.loc 1 2927 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL40:
 737 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 738              		.cfi_def_cfa_offset 24
 739              		.cfi_offset 3, -24
 740              		.cfi_offset 4, -20
 741              		.cfi_offset 5, -16
 742              		.cfi_offset 6, -12
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 66


 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 745              		.loc 1 2935 0
 746 0002 0326     		movs	r6, #3
 747 0004 0500     		movs	r5, r0
 748 0006 3540     		ands	r5, r6
 749 0008 B540     		lsls	r5, r5, r6
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 750              		.loc 1 2927 0
 751 000a 0F00     		movs	r7, r1
 752 000c 0400     		movs	r4, r0
 753              		.loc 1 2935 0
 754 000e 0635     		adds	r5, r5, #6
 755              	.LVL41:
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 756              		.loc 1 2940 0
 757 0010 AE40     		lsls	r6, r6, r5
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 758              		.loc 1 2941 0
 759 0012 AF40     		lsls	r7, r7, r5
2937:Generated_Source\PSoC4/CyLib.c **** 
 760              		.loc 1 2937 0
 761 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 762              	.LVL42:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 763              		.loc 1 2939 0
 764 0018 A408     		lsrs	r4, r4, #2
 765 001a 054B     		ldr	r3, .L60
 766 001c A400     		lsls	r4, r4, #2
 767 001e E418     		adds	r4, r4, r3
 768 0020 2368     		ldr	r3, [r4]
 769              	.LVL43:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
 770              		.loc 1 2945 0
 771              		@ sp needed
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 772              		.loc 1 2940 0
 773 0022 B343     		bics	r3, r6
 774              	.LVL44:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 775              		.loc 1 2941 0
 776 0024 1F43     		orrs	r7, r3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 67


 777              	.LVL45:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 778              		.loc 1 2942 0
 779 0026 2760     		str	r7, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 780              		.loc 1 2944 0
 781 0028 FFF7FEFF 		bl	CyExitCriticalSection
 782              	.LVL46:
 783              	.LVL47:
 784              	.LVL48:
 785              		.loc 1 2945 0
 786 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 787              	.L61:
 788 002e C046     		.align	2
 789              	.L60:
 790 0030 00E400E0 		.word	-536812544
 791              		.cfi_endproc
 792              	.LFE22:
 793              		.size	CyIntSetPriority, .-CyIntSetPriority
 794              		.section	.text.CyIntGetPriority,"ax",%progbits
 795              		.align	1
 796              		.global	CyIntGetPriority
 797              		.code	16
 798              		.thumb_func
 799              		.type	CyIntGetPriority, %function
 800              	CyIntGetPriority:
 801              	.LFB23:
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
 802              		.loc 1 2961 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL49:
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 808              		.loc 1 2966 0
 809 0000 8308     		lsrs	r3, r0, #2
 810 0002 064A     		ldr	r2, .L63
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 68


 811 0004 9B00     		lsls	r3, r3, #2
 812 0006 9B18     		adds	r3, r3, r2
 813 0008 1968     		ldr	r1, [r3]
 814              	.LVL50:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 815              		.loc 1 2968 0
 816 000a 0322     		movs	r2, #3
 817 000c 0300     		movs	r3, r0
 818 000e 1340     		ands	r3, r2
 819 0010 9340     		lsls	r3, r3, r2
 820 0012 0633     		adds	r3, r3, #6
 821 0014 D940     		lsrs	r1, r1, r3
 822              	.LVL51:
 823 0016 0800     		movs	r0, r1
 824              	.LVL52:
2969:Generated_Source\PSoC4/CyLib.c **** }
 825              		.loc 1 2969 0
 826              		@ sp needed
2968:Generated_Source\PSoC4/CyLib.c **** }
 827              		.loc 1 2968 0
 828 0018 1040     		ands	r0, r2
 829              		.loc 1 2969 0
 830 001a 7047     		bx	lr
 831              	.L64:
 832              		.align	2
 833              	.L63:
 834 001c 00E400E0 		.word	-536812544
 835              		.cfi_endproc
 836              	.LFE23:
 837              		.size	CyIntGetPriority, .-CyIntGetPriority
 838              		.section	.text.CyIntEnable,"ax",%progbits
 839              		.align	1
 840              		.global	CyIntEnable
 841              		.code	16
 842              		.thumb_func
 843              		.type	CyIntEnable, %function
 844              	CyIntEnable:
 845              	.LFB24:
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 846              		.loc 1 2982 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 69


 851              	.LVL53:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 852              		.loc 1 2983 0
 853 0000 1F23     		movs	r3, #31
 854 0002 1840     		ands	r0, r3
 855              	.LVL54:
 856 0004 1E3B     		subs	r3, r3, #30
 857 0006 8340     		lsls	r3, r3, r0
 858 0008 014A     		ldr	r2, .L66
2984:Generated_Source\PSoC4/CyLib.c **** }
 859              		.loc 1 2984 0
 860              		@ sp needed
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 861              		.loc 1 2983 0
 862 000a 1360     		str	r3, [r2]
 863              		.loc 1 2984 0
 864 000c 7047     		bx	lr
 865              	.L67:
 866 000e C046     		.align	2
 867              	.L66:
 868 0010 00E100E0 		.word	-536813312
 869              		.cfi_endproc
 870              	.LFE24:
 871              		.size	CyIntEnable, .-CyIntEnable
 872              		.section	.text.CyIntGetState,"ax",%progbits
 873              		.align	1
 874              		.global	CyIntGetState
 875              		.code	16
 876              		.thumb_func
 877              		.type	CyIntGetState, %function
 878              	CyIntGetState:
 879              	.LFB25:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 880              		.loc 1 3000 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL55:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 886              		.loc 1 3002 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 70


 887 0000 1F22     		movs	r2, #31
 888 0002 044B     		ldr	r3, .L69
 889 0004 1040     		ands	r0, r2
 890              	.LVL56:
 891 0006 1B68     		ldr	r3, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 892              		.loc 1 3003 0
 893              		@ sp needed
3002:Generated_Source\PSoC4/CyLib.c **** }
 894              		.loc 1 3002 0
 895 0008 C340     		lsrs	r3, r3, r0
 896 000a 1800     		movs	r0, r3
 897 000c 0123     		movs	r3, #1
 898 000e 1840     		ands	r0, r3
 899              		.loc 1 3003 0
 900 0010 7047     		bx	lr
 901              	.L70:
 902 0012 C046     		.align	2
 903              	.L69:
 904 0014 00E100E0 		.word	-536813312
 905              		.cfi_endproc
 906              	.LFE25:
 907              		.size	CyIntGetState, .-CyIntGetState
 908              		.section	.text.CyIntDisable,"ax",%progbits
 909              		.align	1
 910              		.global	CyIntDisable
 911              		.code	16
 912              		.thumb_func
 913              		.type	CyIntDisable, %function
 914              	CyIntDisable:
 915              	.LFB26:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 916              		.loc 1 3016 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921              	.LVL57:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 922              		.loc 1 3017 0
 923 0000 1F23     		movs	r3, #31
 924 0002 1840     		ands	r0, r3
 925              	.LVL58:
 926 0004 1E3B     		subs	r3, r3, #30
 927 0006 8340     		lsls	r3, r3, r0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 71


 928 0008 014A     		ldr	r2, .L72
3018:Generated_Source\PSoC4/CyLib.c **** }
 929              		.loc 1 3018 0
 930              		@ sp needed
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 931              		.loc 1 3017 0
 932 000a 1360     		str	r3, [r2]
 933              		.loc 1 3018 0
 934 000c 7047     		bx	lr
 935              	.L73:
 936 000e C046     		.align	2
 937              	.L72:
 938 0010 80E100E0 		.word	-536813184
 939              		.cfi_endproc
 940              	.LFE26:
 941              		.size	CyIntDisable, .-CyIntDisable
 942              		.section	.text.CyIntSetPending,"ax",%progbits
 943              		.align	1
 944              		.global	CyIntSetPending
 945              		.code	16
 946              		.thumb_func
 947              		.type	CyIntSetPending, %function
 948              	CyIntSetPending:
 949              	.LFB27:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 950              		.loc 1 3030 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL59:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 956              		.loc 1 3031 0
 957 0000 1F23     		movs	r3, #31
 958 0002 1840     		ands	r0, r3
 959              	.LVL60:
 960 0004 1E3B     		subs	r3, r3, #30
 961 0006 8340     		lsls	r3, r3, r0
 962 0008 014A     		ldr	r2, .L75
3032:Generated_Source\PSoC4/CyLib.c **** }
 963              		.loc 1 3032 0
 964              		@ sp needed
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 965              		.loc 1 3031 0
 966 000a 1360     		str	r3, [r2]
 967              		.loc 1 3032 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 72


 968 000c 7047     		bx	lr
 969              	.L76:
 970 000e C046     		.align	2
 971              	.L75:
 972 0010 00E200E0 		.word	-536813056
 973              		.cfi_endproc
 974              	.LFE27:
 975              		.size	CyIntSetPending, .-CyIntSetPending
 976              		.section	.text.CyIntClearPending,"ax",%progbits
 977              		.align	1
 978              		.global	CyIntClearPending
 979              		.code	16
 980              		.thumb_func
 981              		.type	CyIntClearPending, %function
 982              	CyIntClearPending:
 983              	.LFB28:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 984              		.loc 1 3045 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989              	.LVL61:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 990              		.loc 1 3046 0
 991 0000 1F23     		movs	r3, #31
 992 0002 1840     		ands	r0, r3
 993              	.LVL62:
 994 0004 1E3B     		subs	r3, r3, #30
 995 0006 8340     		lsls	r3, r3, r0
 996 0008 014A     		ldr	r2, .L78
3047:Generated_Source\PSoC4/CyLib.c **** }
 997              		.loc 1 3047 0
 998              		@ sp needed
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 999              		.loc 1 3046 0
 1000 000a 1360     		str	r3, [r2]
 1001              		.loc 1 3047 0
 1002 000c 7047     		bx	lr
 1003              	.L79:
 1004 000e C046     		.align	2
 1005              	.L78:
 1006 0010 80E200E0 		.word	-536812928
 1007              		.cfi_endproc
 1008              	.LFE28:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 73


 1009              		.size	CyIntClearPending, .-CyIntClearPending
 1010              		.section	.text.CyHalt,"ax",%progbits
 1011              		.align	1
 1012              		.global	CyHalt
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	CyHalt, %function
 1016              	CyHalt:
 1017              	.LFB29:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 1018              		.loc 1 3060 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023              	.LVL63:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1024              		.loc 1 3069 0
 1025              		.syntax divided
 1026              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 1027 0000 01BE     		    bkpt    1
 1028              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 1029              		.loc 1 3073 0
 1030              		.thumb
 1031              		.syntax unified
 1032              		@ sp needed
 1033 0002 7047     		bx	lr
 1034              		.cfi_endproc
 1035              	.LFE29:
 1036              		.size	CyHalt, .-CyHalt
 1037              		.section	.text.CySoftwareReset,"ax",%progbits
 1038              		.align	1
 1039              		.global	CySoftwareReset
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 74


 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	CySoftwareReset, %function
 1043              	CySoftwareReset:
 1044              	.LFB30:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1045              		.loc 1 3084 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1050              		.loc 1 3089 0
 1051 0000 034A     		ldr	r2, .L82
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1052              		.loc 1 3090 0
 1053 0002 0449     		ldr	r1, .L82+4
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1054              		.loc 1 3089 0
 1055 0004 1368     		ldr	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1056              		.loc 1 3091 0
 1057              		@ sp needed
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1058              		.loc 1 3090 0
 1059 0006 9BB2     		uxth	r3, r3
 1060 0008 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1061              		.loc 1 3089 0
 1062 000a 1360     		str	r3, [r2]
 1063              		.loc 1 3091 0
 1064 000c 7047     		bx	lr
 1065              	.L83:
 1066 000e C046     		.align	2
 1067              	.L82:
 1068 0010 0CED00E0 		.word	-536810228
 1069 0014 0400FA05 		.word	100270084
 1070              		.cfi_endproc
 1071              	.LFE30:
 1072              		.size	CySoftwareReset, .-CySoftwareReset
 1073              		.section	.text.CyDelay,"ax",%progbits
 1074              		.align	1
 1075              		.global	CyDelay
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 75


 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	CyDelay, %function
 1079              	CyDelay:
 1080              	.LFB31:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1081              		.loc 1 3104 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              	.LVL64:
 1086 0000 70B5     		push	{r4, r5, r6, lr}
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 4, -16
 1089              		.cfi_offset 5, -12
 1090              		.cfi_offset 6, -8
 1091              		.cfi_offset 14, -4
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1092              		.loc 1 3105 0
 1093 0002 8025     		movs	r5, #128
3104:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1094              		.loc 1 3104 0
 1095 0004 0400     		movs	r4, r0
 1096              		.loc 1 3105 0
 1097 0006 2D02     		lsls	r5, r5, #8
 1098              	.LVL65:
 1099              	.L85:
 1100 0008 064B     		ldr	r3, .L88
 1101 000a AC42     		cmp	r4, r5
 1102 000c 05D9     		bls	.L87
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1103              		.loc 1 3110 0
 1104 000e 5868     		ldr	r0, [r3, #4]
 1105 0010 FFF7FEFF 		bl	CyDelayCycles
 1106              	.LVL66:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1107              		.loc 1 3111 0
 1108 0014 044B     		ldr	r3, .L88+4
 1109 0016 E418     		adds	r4, r4, r3
 1110              	.LVL67:
 1111 0018 F6E7     		b	.L85
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 76


 1112              	.L87:
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1113              		.loc 1 3114 0
 1114 001a 9868     		ldr	r0, [r3, #8]
3115:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 3115 0
 1116              		@ sp needed
3114:Generated_Source\PSoC4/CyLib.c **** }
 1117              		.loc 1 3114 0
 1118 001c 6043     		muls	r0, r4
 1119 001e FFF7FEFF 		bl	CyDelayCycles
 1120              	.LVL68:
 1121              	.LVL69:
 1122              		.loc 1 3115 0
 1123 0022 70BD     		pop	{r4, r5, r6, pc}
 1124              	.L89:
 1125              		.align	2
 1126              	.L88:
 1127 0024 00000000 		.word	.LANCHOR1
 1128 0028 0080FFFF 		.word	-32768
 1129              		.cfi_endproc
 1130              	.LFE31:
 1131              		.size	CyDelay, .-CyDelay
 1132              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1133              		.align	1
 1134              		.global	CySysClkImoEnableWcoLock
 1135              		.code	16
 1136              		.thumb_func
 1137              		.type	CySysClkImoEnableWcoLock, %function
 1138              	CySysClkImoEnableWcoLock:
 1139              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1140              		.loc 1 175 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 16
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              	.LVL70:
 1145 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1146              		.cfi_def_cfa_offset 20
 1147              		.cfi_offset 4, -20
 1148              		.cfi_offset 5, -16
 1149              		.cfi_offset 6, -12
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 85B0     		sub	sp, sp, #20
 1153              		.cfi_def_cfa_offset 40
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1154              		.loc 1 186 0
 1155 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1156              	.LVL71:
 1157 0008 0028     		cmp	r0, #0
 1158 000a 55D0     		beq	.L90
 1159              	.LBB14:
 1160              	.LBB15:
 188:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 77


 1161              		.loc 1 188 0
 1162 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL72:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1164              		.loc 1 200 0
 1165 0010 0023     		movs	r3, #0
 188:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 188 0
 1167 0012 0190     		str	r0, [sp, #4]
 1168              	.LVL73:
 202:Generated_Source\PSoC4/CyLib.c ****                     {
 1169              		.loc 1 202 0
 1170 0014 3F20     		movs	r0, #63
 1171 0016 2949     		ldr	r1, .L102
 1172 0018 294C     		ldr	r4, .L102+4
 1173              	.LVL74:
 1174              	.L94:
 1175 001a 0A68     		ldr	r2, [r1]
 1176 001c 1D5D     		ldrb	r5, [r3, r4]
 1177 001e 0240     		ands	r2, r0
 1178 0020 AA42     		cmp	r2, r5
 1179 0022 01D1     		bne	.L92
 204:Generated_Source\PSoC4/CyLib.c ****                         break;
 1180              		.loc 1 204 0
 1181 0024 0333     		adds	r3, r3, #3
 1182              	.LVL75:
 1183 0026 03E0     		b	.L93
 1184              	.LVL76:
 1185              	.L92:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1186              		.loc 1 200 0
 1187 0028 0133     		adds	r3, r3, #1
 1188              	.LVL77:
 1189 002a 2E2B     		cmp	r3, #46
 1190 002c F5D1     		bne	.L94
 199:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1191              		.loc 1 199 0
 1192 002e 2B3B     		subs	r3, r3, #43
 1193              	.LVL78:
 1194              	.L93:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1195              		.loc 1 222 0
 1196 0030 0021     		movs	r1, #0
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1197              		.loc 1 226 0
 1198 0032 1F20     		movs	r0, #31
 222:Generated_Source\PSoC4/CyLib.c **** 
 1199              		.loc 1 222 0
 1200 0034 234A     		ldr	r2, .L102+8
 1201 0036 1160     		str	r1, [r2]
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1202              		.loc 1 226 0
 1203 0038 2349     		ldr	r1, .L102+12
 1204 003a 0A68     		ldr	r2, [r1]
 1205 003c 0242     		tst	r2, r0
 1206 003e 04D1     		bne	.L95
 228:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 78


 1207              		.loc 1 228 0
 1208 0040 0A68     		ldr	r2, [r1]
 1209 0042 8243     		bics	r2, r0
 1210 0044 1338     		subs	r0, r0, #19
 1211 0046 0243     		orrs	r2, r0
 1212 0048 0A60     		str	r2, [r1]
 1213              	.L95:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1214              		.loc 1 233 0
 1215 004a 204C     		ldr	r4, .L102+16
 1216 004c 204A     		ldr	r2, .L102+20
 1217 004e 2168     		ldr	r1, [r4]
 1218              	.LVL79:
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1219              		.loc 1 246 0
 1220 0050 204E     		ldr	r6, .L102+24
 1221 0052 1140     		ands	r1, r2
 1222              	.LVL80:
 1223 0054 A022     		movs	r2, #160
 1224 0056 5203     		lsls	r2, r2, #13
 1225 0058 1143     		orrs	r1, r2
 1226              	.LVL81:
 242:Generated_Source\PSoC4/CyLib.c **** 
 1227              		.loc 1 242 0
 1228 005a 1F4A     		ldr	r2, .L102+28
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1229              		.loc 1 247 0
 1230 005c 3020     		movs	r0, #48
 242:Generated_Source\PSoC4/CyLib.c **** 
 1231              		.loc 1 242 0
 1232 005e 5343     		muls	r3, r2
 1233              	.LVL82:
 1234 0060 8022     		movs	r2, #128
 1235 0062 D201     		lsls	r2, r2, #7
 1236 0064 9B18     		adds	r3, r3, r2
 1237 0066 DB0B     		lsrs	r3, r3, #15
 1238 0068 013B     		subs	r3, r3, #1
 1239 006a 0B43     		orrs	r3, r1
 1240              	.LVL83:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1241              		.loc 1 244 0
 1242 006c 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1243              		.loc 1 246 0
 1244 006e 3368     		ldr	r3, [r6]
 1245              	.LVL84:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1246              		.loc 1 183 0
 1247 0070 0025     		movs	r5, #0
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1248              		.loc 1 246 0
 1249 0072 0393     		str	r3, [sp, #12]
 1250              	.LVL85:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1251              		.loc 1 247 0
 1252 0074 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1253              	.LVL86:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 79


 248:Generated_Source\PSoC4/CyLib.c **** 
 1254              		.loc 1 248 0
 1255 0078 8021     		movs	r1, #128
 1256 007a 184A     		ldr	r2, .L102+32
 1257 007c C905     		lsls	r1, r1, #23
 1258 007e 1368     		ldr	r3, [r2]
 1259 0080 0B43     		orrs	r3, r1
 1260 0082 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1261              		.loc 1 250 0
 1262 0084 2268     		ldr	r2, [r4]
 1263 0086 164B     		ldr	r3, .L102+36
 1264 0088 1A40     		ands	r2, r3
 1265 008a 1700     		movs	r7, r2
 1266              	.LVL87:
 1267              	.L96:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1268              		.loc 1 254 0
 1269 008c 0120     		movs	r0, #1
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1270              		.loc 1 255 0
 1271 008e 1035     		adds	r5, r5, #16
 1272              	.LVL88:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1273              		.loc 1 254 0
 1274 0090 FFF7FEFF 		bl	CyDelay
 1275              	.LVL89:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1276              		.loc 1 256 0
 1277 0094 AB05     		lsls	r3, r5, #22
 1278 0096 3B43     		orrs	r3, r7
 1279 0098 2360     		str	r3, [r4]
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1280              		.loc 1 252 0
 1281 009a F02D     		cmp	r5, #240
 1282 009c F6D1     		bne	.L96
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1283              		.loc 1 259 0
 1284 009e 0120     		movs	r0, #1
 1285 00a0 FFF7FEFF 		bl	CyDelay
 1286              	.LVL90:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1287              		.loc 1 260 0
 1288 00a4 FF23     		movs	r3, #255
 1289 00a6 094A     		ldr	r2, .L102+16
 1290 00a8 9B05     		lsls	r3, r3, #22
 1291 00aa 3B43     		orrs	r3, r7
 1292 00ac 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1293              		.loc 1 263 0
 1294 00ae 039B     		ldr	r3, [sp, #12]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1295              		.loc 1 265 0
 1296 00b0 0198     		ldr	r0, [sp, #4]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 263 0
 1298 00b2 3360     		str	r3, [r6]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 80


 265:Generated_Source\PSoC4/CyLib.c ****         }
 1299              		.loc 1 265 0
 1300 00b4 FFF7FEFF 		bl	CyExitCriticalSection
 1301              	.LVL91:
 1302              	.L90:
 1303              	.LBE15:
 1304              	.LBE14:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1305              		.loc 1 267 0
 1306 00b8 05B0     		add	sp, sp, #20
 1307              		@ sp needed
 1308 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1309              	.L103:
 1310              		.align	2
 1311              	.L102:
 1312 00bc 2CFF0B40 		.word	1074528044
 1313 00c0 00000000 		.word	.LANCHOR0
 1314 00c4 28FF0B40 		.word	1074528040
 1315 00c8 34FF0B40 		.word	1074528052
 1316 00cc 08002240 		.word	1075970056
 1317 00d0 00F800C0 		.word	-1073678336
 1318 00d4 30001040 		.word	1074790448
 1319 00d8 40420F00 		.word	1000000
 1320 00dc 00002240 		.word	1075970048
 1321 00e0 FFFF3FC0 		.word	-1069547521
 1322              		.cfi_endproc
 1323              	.LFE3:
 1324              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1325              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1326              		.align	1
 1327              		.global	CySysClkWriteImoFreq
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	CySysClkWriteImoFreq, %function
 1331              	CySysClkWriteImoFreq:
 1332              	.LFB10:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1333              		.loc 1 818 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 24
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              	.LVL92:
 1338 0000 30B5     		push	{r4, r5, lr}
 1339              		.cfi_def_cfa_offset 12
 1340              		.cfi_offset 4, -12
 1341              		.cfi_offset 5, -8
 1342              		.cfi_offset 14, -4
 1343 0002 87B0     		sub	sp, sp, #28
 1344              		.cfi_def_cfa_offset 40
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1345              		.loc 1 818 0
 1346 0004 0400     		movs	r4, r0
 840:Generated_Source\PSoC4/CyLib.c **** 
 1347              		.loc 1 840 0
 1348 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1349              	.LVL93:
 1350 000a 0500     		movs	r5, r0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 81


 1351              	.LVL94:
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1352              		.loc 1 843 0
 1353 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1354              	.LVL95:
 830:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1355              		.loc 1 830 0
 1356 0010 0022     		movs	r2, #0
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1357              		.loc 1 843 0
 1358 0012 9042     		cmp	r0, r2
 1359 0014 02D0     		beq	.L105
 1360              	.LVL96:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 1361              		.loc 1 846 0
 1362 0016 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1363              	.LVL97:
 845:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1364              		.loc 1 845 0
 1365 001a 0122     		movs	r2, #1
 1366              	.LVL98:
 1367              	.L105:
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1368              		.loc 1 874 0
 1369 001c 104B     		ldr	r3, .L109
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1370              		.loc 1 885 0
 1371 001e 1148     		ldr	r0, .L109+4
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1372              		.loc 1 874 0
 1373 0020 1968     		ldr	r1, [r3]
 1374 0022 02AB     		add	r3, sp, #8
 1375 0024 0291     		str	r1, [sp, #8]
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1376              		.loc 1 875 0
 1377 0026 1049     		ldr	r1, .L109+8
 1378 0028 0968     		ldr	r1, [r1]
 1379 002a 0391     		str	r1, [sp, #12]
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1380              		.loc 1 876 0
 1381 002c 0F49     		ldr	r1, .L109+12
 1382 002e 0C19     		adds	r4, r1, r4
 1383              	.LVL99:
 1384 0030 033C     		subs	r4, r4, #3
 1385 0032 2178     		ldrb	r1, [r4]
 1386 0034 0491     		str	r1, [sp, #16]
 877:Generated_Source\PSoC4/CyLib.c **** 
 1387              		.loc 1 877 0
 1388 0036 0E49     		ldr	r1, .L109+16
 1389 0038 0968     		ldr	r1, [r1]
 1390 003a 0591     		str	r1, [sp, #20]
 879:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1391              		.loc 1 879 0
 1392 003c 0D49     		ldr	r1, .L109+20
 1393 003e 0091     		str	r1, [sp]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1394              		.loc 1 884 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 82


 1395 0040 6946     		mov	r1, sp
 882:Generated_Source\PSoC4/CyLib.c **** 
 1396              		.loc 1 882 0
 1397 0042 0193     		str	r3, [sp, #4]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1398              		.loc 1 884 0
 1399 0044 0C4B     		ldr	r3, .L109+24
 1400 0046 1960     		str	r1, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1401              		.loc 1 885 0
 1402 0048 0C49     		ldr	r1, .L109+28
 1403 004a 0860     		str	r0, [r1]
 886:Generated_Source\PSoC4/CyLib.c **** 
 1404              		.loc 1 886 0
 1405 004c 1B68     		ldr	r3, [r3]
 984:Generated_Source\PSoC4/CyLib.c ****             {
 1406              		.loc 1 984 0
 1407 004e 012A     		cmp	r2, #1
 1408 0050 01D1     		bne	.L106
 986:Generated_Source\PSoC4/CyLib.c ****             }
 1409              		.loc 1 986 0
 1410 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1411              	.LVL100:
 1412              	.L106:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1413              		.loc 1 997 0
 1414 0056 2800     		movs	r0, r5
 1415 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1416              	.LVL101:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1417              		.loc 1 998 0
 1418 005c 07B0     		add	sp, sp, #28
 1419              		@ sp needed
 1420              	.LVL102:
 1421 005e 30BD     		pop	{r4, r5, pc}
 1422              	.L110:
 1423              		.align	2
 1424              	.L109:
 1425 0060 08010B40 		.word	1074462984
 1426 0064 17000080 		.word	-2147483625
 1427 0068 00010B40 		.word	1074462976
 1428 006c 00000000 		.word	.LANCHOR0
 1429 0070 30001040 		.word	1074790448
 1430 0074 B6EA0000 		.word	60086
 1431 0078 08001040 		.word	1074790408
 1432 007c 04001040 		.word	1074790404
 1433              		.cfi_endproc
 1434              	.LFE10:
 1435              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1436              		.section	.text.CyDelayUs,"ax",%progbits
 1437              		.align	1
 1438              		.global	CyDelayUs
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	CyDelayUs, %function
 1442              	CyDelayUs:
 1443              	.LFB32:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 83


3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1444              		.loc 1 3127 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 0
 1447              		@ frame_needed = 0, uses_anonymous_args = 0
 1448              	.LVL103:
 1449 0000 10B5     		push	{r4, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 4, -8
 1452              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1453              		.loc 1 3128 0
 1454 0002 034B     		ldr	r3, .L112
3129:Generated_Source\PSoC4/CyLib.c **** }
 1455              		.loc 1 3129 0
 1456              		@ sp needed
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1457              		.loc 1 3128 0
 1458 0004 1B7B     		ldrb	r3, [r3, #12]
 1459 0006 5843     		muls	r0, r3
 1460              	.LVL104:
 1461 0008 FFF7FEFF 		bl	CyDelayCycles
 1462              	.LVL105:
 1463              		.loc 1 3129 0
 1464 000c 10BD     		pop	{r4, pc}
 1465              	.L113:
 1466 000e C046     		.align	2
 1467              	.L112:
 1468 0010 00000000 		.word	.LANCHOR1
 1469              		.cfi_endproc
 1470              	.LFE32:
 1471              		.size	CyDelayUs, .-CyDelayUs
 1472              		.section	.text.CySysLvdEnable,"ax",%progbits
 1473              		.align	1
 1474              		.global	CySysLvdEnable
 1475              		.code	16
 1476              		.thumb_func
 1477              		.type	CySysLvdEnable, %function
 1478              	CySysLvdEnable:
 1479              	.LFB11:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1480              		.loc 1 2663 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              	.LVL106:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 84


 1485 0000 70B5     		push	{r4, r5, r6, lr}
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 4, -16
 1488              		.cfi_offset 5, -12
 1489              		.cfi_offset 6, -8
 1490              		.cfi_offset 14, -4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1491              		.loc 1 2665 0
 1492 0002 0225     		movs	r5, #2
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1493              		.loc 1 2668 0
 1494 0004 1E21     		movs	r1, #30
2665:Generated_Source\PSoC4/CyLib.c **** 
 1495              		.loc 1 2665 0
 1496 0006 0C4C     		ldr	r4, .L115
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1497              		.loc 1 2668 0
 1498 0008 0C4A     		ldr	r2, .L115+4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1499              		.loc 1 2665 0
 1500 000a 2368     		ldr	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1501              		.loc 1 2668 0
 1502 000c 4000     		lsls	r0, r0, #1
 1503              	.LVL107:
2665:Generated_Source\PSoC4/CyLib.c **** 
 1504              		.loc 1 2665 0
 1505 000e AB43     		bics	r3, r5
 1506 0010 2360     		str	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1507              		.loc 1 2668 0
 1508 0012 1368     		ldr	r3, [r2]
 1509 0014 0840     		ands	r0, r1
 1510 0016 8B43     		bics	r3, r1
 1511 0018 1843     		orrs	r0, r3
 1512 001a 1060     		str	r0, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1513              		.loc 1 2675 0
 1514 001c FA20     		movs	r0, #250
2672:Generated_Source\PSoC4/CyLib.c **** 
 1515              		.loc 1 2672 0
 1516 001e 1368     		ldr	r3, [r2]
 1517 0020 1D39     		subs	r1, r1, #29
 1518 0022 0B43     		orrs	r3, r1
 1519 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1520              		.loc 1 2675 0
 1521 0026 8000     		lsls	r0, r0, #2
 1522 0028 FFF7FEFF 		bl	CyDelayUs
 1523              	.LVL108:
 1524              	.LBB16:
 1525              	.LBB17:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1526              		.loc 1 2728 0
 1527 002c 044B     		ldr	r3, .L115+8
 1528              	.LBE17:
 1529              	.LBE16:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 85


2682:Generated_Source\PSoC4/CyLib.c **** 
 1530              		.loc 1 2682 0
 1531              		@ sp needed
 1532              	.LBB19:
 1533              	.LBB18:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1534              		.loc 1 2728 0
 1535 002e 1D60     		str	r5, [r3]
 1536              	.LBE18:
 1537              	.LBE19:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1538              		.loc 1 2681 0
 1539 0030 2368     		ldr	r3, [r4]
 1540 0032 1D43     		orrs	r5, r3
 1541 0034 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1542              		.loc 1 2682 0
 1543 0036 70BD     		pop	{r4, r5, r6, pc}
 1544              	.L116:
 1545              		.align	2
 1546              	.L115:
 1547 0038 08000B40 		.word	1074462728
 1548 003c 18000B40 		.word	1074462744
 1549 0040 04000B40 		.word	1074462724
 1550              		.cfi_endproc
 1551              	.LFE11:
 1552              		.size	CySysLvdEnable, .-CySysLvdEnable
 1553              		.global	__aeabi_uidiv
 1554              		.section	.text.CyDelayFreq,"ax",%progbits
 1555              		.align	1
 1556              		.global	CyDelayFreq
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CyDelayFreq, %function
 1560              	CyDelayFreq:
 1561              	.LFB33:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 3141 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              	.LVL109:
 1567 0000 70B5     		push	{r4, r5, r6, lr}
 1568              		.cfi_def_cfa_offset 16
 1569              		.cfi_offset 4, -16
 1570              		.cfi_offset 5, -12
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 86


 1571              		.cfi_offset 6, -8
 1572              		.cfi_offset 14, -4
 1573 0002 0C4C     		ldr	r4, .L120
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1574              		.loc 1 3142 0
 1575 0004 0028     		cmp	r0, #0
 1576 0006 01D0     		beq	.L118
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1577              		.loc 1 3144 0
 1578 0008 2061     		str	r0, [r4, #16]
 1579 000a 01E0     		b	.L119
 1580              	.L118:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1581              		.loc 1 3148 0
 1582 000c 0A4B     		ldr	r3, .L120+4
 1583 000e 2361     		str	r3, [r4, #16]
 1584              	.L119:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1585              		.loc 1 3151 0
 1586 0010 2569     		ldr	r5, [r4, #16]
 1587 0012 0A4B     		ldr	r3, .L120+8
 1588 0014 0A49     		ldr	r1, .L120+12
 1589 0016 E818     		adds	r0, r5, r3
 1590              	.LVL110:
 1591 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1592              	.LVL111:
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1593              		.loc 1 3152 0
 1594 001c FA21     		movs	r1, #250
 1595 001e 094B     		ldr	r3, .L120+16
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1596              		.loc 1 3151 0
 1597 0020 2073     		strb	r0, [r4, #12]
 1598              		.loc 1 3152 0
 1599 0022 8900     		lsls	r1, r1, #2
 1600 0024 E818     		adds	r0, r5, r3
 1601 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1602              	.LVL112:
 1603 002a A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1604              		.loc 1 3153 0
 1605 002c C003     		lsls	r0, r0, #15
 1606 002e 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1607              		.loc 1 3154 0
 1608              		@ sp needed
 1609 0030 70BD     		pop	{r4, r5, r6, pc}
 1610              	.L121:
 1611 0032 C046     		.align	2
 1612              	.L120:
 1613 0034 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 87


 1614 0038 006CDC02 		.word	48000000
 1615 003c 3F420F00 		.word	999999
 1616 0040 40420F00 		.word	1000000
 1617 0044 E7030000 		.word	999
 1618              		.cfi_endproc
 1619              	.LFE33:
 1620              		.size	CyDelayFreq, .-CyDelayFreq
 1621              		.section	.text.CySysTickInit,"ax",%progbits
 1622              		.align	1
 1623              		.global	CySysTickInit
 1624              		.code	16
 1625              		.thumb_func
 1626              		.type	CySysTickInit, %function
 1627              	CySysTickInit:
 1628              	.LFB35:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 88


3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
 1629              		.loc 1 3202 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              	.LVL113:
 1634 0000 10B5     		push	{r4, lr}
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 4, -8
 1637              		.cfi_offset 14, -4
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1638              		.loc 1 3207 0
 1639 0002 0024     		movs	r4, #0
 1640              	.LBB30:
 1641              	.LBB31:
 1642              	.LBB32:
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 89


3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3251:Generated_Source\PSoC4/CyLib.c **** }
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3267:Generated_Source\PSoC4/CyLib.c **** }
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3283:Generated_Source\PSoC4/CyLib.c **** }
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 90


3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
3300:Generated_Source\PSoC4/CyLib.c **** }
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3316:Generated_Source\PSoC4/CyLib.c **** }
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3332:Generated_Source\PSoC4/CyLib.c **** }
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 91


3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1643              		.loc 1 3365 0
 1644 0004 0421     		movs	r1, #4
 1645              	.LBE32:
 1646              	.LBE31:
 1647              	.LBE30:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1648              		.loc 1 3207 0
 1649 0006 0C4B     		ldr	r3, .L123
 1650              	.LBB37:
 1651              	.LBB38:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1652              		.loc 1 2834 0
 1653 0008 0C4A     		ldr	r2, .L123+4
 1654              	.LBE38:
 1655              	.LBE37:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1656              		.loc 1 3207 0
 1657 000a 1C60     		str	r4, [r3]
 1658              	.LVL114:
 1659 000c 1C61     		str	r4, [r3, #16]
 1660 000e 5C60     		str	r4, [r3, #4]
 1661              	.LVL115:
 1662 0010 9C60     		str	r4, [r3, #8]
 1663              	.LVL116:
 1664 0012 DC60     		str	r4, [r3, #12]
 1665              	.LVL117:
 1666              	.LBB41:
 1667              	.LBB39:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1668              		.loc 1 2834 0
 1669 0014 0A4B     		ldr	r3, .L123+8
 1670              	.LVL118:
 1671              	.LBE39:
 1672              	.LBE41:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1673              		.loc 1 3218 0
 1674              		@ sp needed
 1675              	.LBB42:
 1676              	.LBB40:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1677              		.loc 1 2834 0
 1678 0016 1A60     		str	r2, [r3]
 1679              	.LVL119:
 1680              	.LBE40:
 1681              	.LBE42:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 92


 1682              	.LBB43:
 1683              	.LBB35:
 1684              	.LBB33:
 1685              		.loc 1 3365 0
 1686 0018 0A4A     		ldr	r2, .L123+12
 1687 001a 1368     		ldr	r3, [r2]
 1688 001c 0B43     		orrs	r3, r1
 1689              	.LBE33:
 1690              	.LBE35:
 1691              	.LBE43:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1692              		.loc 1 3216 0
 1693 001e FA21     		movs	r1, #250
 1694              	.LBB44:
 1695              	.LBB36:
 1696              	.LBB34:
 1697              		.loc 1 3365 0
 1698 0020 1360     		str	r3, [r2]
 1699              	.LVL120:
 1700              	.LBE34:
 1701              	.LBE36:
 1702              	.LBE44:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1703              		.loc 1 3216 0
 1704 0022 094B     		ldr	r3, .L123+16
 1705 0024 8900     		lsls	r1, r1, #2
 1706 0026 1869     		ldr	r0, [r3, #16]
 1707 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1708              	.LVL121:
 1709              	.LBB45:
 1710              	.LBB46:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 3299 0
 1712 002c 074B     		ldr	r3, .L123+20
 1713 002e 1860     		str	r0, [r3]
 1714              	.LVL122:
 1715              	.LBE46:
 1716              	.LBE45:
 1717              	.LBB47:
 1718              	.LBB48:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 93


3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3412:Generated_Source\PSoC4/CyLib.c **** }
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1719              		.loc 1 3424 0
 1720 0030 074B     		ldr	r3, .L123+24
 1721 0032 1C60     		str	r4, [r3]
 1722              	.LBE48:
 1723              	.LBE47:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1724              		.loc 1 3218 0
 1725 0034 10BD     		pop	{r4, pc}
 1726              	.L124:
 1727 0036 C046     		.align	2
 1728              	.L123:
 1729 0038 00000000 		.word	.LANCHOR2
 1730 003c 00000000 		.word	CySysTickServiceCallbacks
 1731 0040 3C000020 		.word	536870972
 1732 0044 10E000E0 		.word	-536813552
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 94


 1733 0048 00000000 		.word	.LANCHOR1
 1734 004c 14E000E0 		.word	-536813548
 1735 0050 18E000E0 		.word	-536813544
 1736              		.cfi_endproc
 1737              	.LFE35:
 1738              		.size	CySysTickInit, .-CySysTickInit
 1739              		.section	.text.CySysTickStop,"ax",%progbits
 1740              		.align	1
 1741              		.global	CySysTickStop
 1742              		.code	16
 1743              		.thumb_func
 1744              		.type	CySysTickStop, %function
 1745              	CySysTickStop:
 1746              	.LFB37:
3249:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1747              		.loc 1 3249 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c **** }
 1752              		.loc 1 3250 0
 1753 0000 0121     		movs	r1, #1
 1754 0002 024A     		ldr	r2, .L126
3251:Generated_Source\PSoC4/CyLib.c **** 
 1755              		.loc 1 3251 0
 1756              		@ sp needed
3250:Generated_Source\PSoC4/CyLib.c **** }
 1757              		.loc 1 3250 0
 1758 0004 1368     		ldr	r3, [r2]
 1759 0006 8B43     		bics	r3, r1
 1760 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** 
 1761              		.loc 1 3251 0
 1762 000a 7047     		bx	lr
 1763              	.L127:
 1764              		.align	2
 1765              	.L126:
 1766 000c 10E000E0 		.word	-536813552
 1767              		.cfi_endproc
 1768              	.LFE37:
 1769              		.size	CySysTickStop, .-CySysTickStop
 1770              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1771              		.align	1
 1772              		.global	CySysTickEnableInterrupt
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	CySysTickEnableInterrupt, %function
 1776              	CySysTickEnableInterrupt:
 1777              	.LFB38:
3265:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1778              		.loc 1 3265 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 95


 1783              		.loc 1 3266 0
 1784 0000 0221     		movs	r1, #2
 1785 0002 024A     		ldr	r2, .L129
3267:Generated_Source\PSoC4/CyLib.c **** 
 1786              		.loc 1 3267 0
 1787              		@ sp needed
3266:Generated_Source\PSoC4/CyLib.c **** }
 1788              		.loc 1 3266 0
 1789 0004 1368     		ldr	r3, [r2]
 1790 0006 0B43     		orrs	r3, r1
 1791 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** 
 1792              		.loc 1 3267 0
 1793 000a 7047     		bx	lr
 1794              	.L130:
 1795              		.align	2
 1796              	.L129:
 1797 000c 10E000E0 		.word	-536813552
 1798              		.cfi_endproc
 1799              	.LFE38:
 1800              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1801              		.section	.text.CySysTickEnable,"ax",%progbits
 1802              		.align	1
 1803              		.global	CySysTickEnable
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CySysTickEnable, %function
 1807              	CySysTickEnable:
 1808              	.LFB36:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1809              		.loc 1 3232 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813 0000 10B5     		push	{r4, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 4, -8
 1816              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1817              		.loc 1 3233 0
 1818 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1819              	.LVL123:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1820              		.loc 1 3234 0
 1821 0006 0121     		movs	r1, #1
 1822 0008 024A     		ldr	r2, .L132
3235:Generated_Source\PSoC4/CyLib.c **** 
 1823              		.loc 1 3235 0
 1824              		@ sp needed
3234:Generated_Source\PSoC4/CyLib.c **** }
 1825              		.loc 1 3234 0
 1826 000a 1368     		ldr	r3, [r2]
 1827 000c 0B43     		orrs	r3, r1
 1828 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1829              		.loc 1 3235 0
 1830 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 96


 1831              	.L133:
 1832 0012 C046     		.align	2
 1833              	.L132:
 1834 0014 10E000E0 		.word	-536813552
 1835              		.cfi_endproc
 1836              	.LFE36:
 1837              		.size	CySysTickEnable, .-CySysTickEnable
 1838              		.section	.text.CySysTickStart,"ax",%progbits
 1839              		.align	1
 1840              		.global	CySysTickStart
 1841              		.code	16
 1842              		.thumb_func
 1843              		.type	CySysTickStart, %function
 1844              	CySysTickStart:
 1845              	.LFB34:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1846              		.loc 1 3173 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850 0000 10B5     		push	{r4, lr}
 1851              		.cfi_def_cfa_offset 8
 1852              		.cfi_offset 4, -8
 1853              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1854              		.loc 1 3174 0
 1855 0002 054C     		ldr	r4, .L136
 1856 0004 6369     		ldr	r3, [r4, #20]
 1857 0006 002B     		cmp	r3, #0
 1858 0008 03D1     		bne	.L135
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1859              		.loc 1 3176 0
 1860 000a FFF7FEFF 		bl	CySysTickInit
 1861              	.LVL124:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1862              		.loc 1 3177 0
 1863 000e 0123     		movs	r3, #1
 1864 0010 6361     		str	r3, [r4, #20]
 1865              	.L135:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1866              		.loc 1 3180 0
 1867 0012 FFF7FEFF 		bl	CySysTickEnable
 1868              	.LVL125:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1869              		.loc 1 3181 0
 1870              		@ sp needed
 1871 0016 10BD     		pop	{r4, pc}
 1872              	.L137:
 1873              		.align	2
 1874              	.L136:
 1875 0018 00000000 		.word	.LANCHOR2
 1876              		.cfi_endproc
 1877              	.LFE34:
 1878              		.size	CySysTickStart, .-CySysTickStart
 1879              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1880              		.align	1
 1881              		.global	CySysTickDisableInterrupt
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 97


 1882              		.code	16
 1883              		.thumb_func
 1884              		.type	CySysTickDisableInterrupt, %function
 1885              	CySysTickDisableInterrupt:
 1886              	.LFB39:
3281:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1887              		.loc 1 3281 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c **** }
 1892              		.loc 1 3282 0
 1893 0000 0221     		movs	r1, #2
 1894 0002 024A     		ldr	r2, .L139
3283:Generated_Source\PSoC4/CyLib.c **** 
 1895              		.loc 1 3283 0
 1896              		@ sp needed
3282:Generated_Source\PSoC4/CyLib.c **** }
 1897              		.loc 1 3282 0
 1898 0004 1368     		ldr	r3, [r2]
 1899 0006 8B43     		bics	r3, r1
 1900 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** 
 1901              		.loc 1 3283 0
 1902 000a 7047     		bx	lr
 1903              	.L140:
 1904              		.align	2
 1905              	.L139:
 1906 000c 10E000E0 		.word	-536813552
 1907              		.cfi_endproc
 1908              	.LFE39:
 1909              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1910              		.section	.text.CySysTickSetReload,"ax",%progbits
 1911              		.align	1
 1912              		.global	CySysTickSetReload
 1913              		.code	16
 1914              		.thumb_func
 1915              		.type	CySysTickSetReload, %function
 1916              	CySysTickSetReload:
 1917              	.LFB40:
3298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1918              		.loc 1 3298 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923              	.LVL126:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1924              		.loc 1 3299 0
 1925 0000 024B     		ldr	r3, .L142
 1926 0002 0002     		lsls	r0, r0, #8
 1927              	.LVL127:
 1928 0004 000A     		lsrs	r0, r0, #8
 1929 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** 
 1930              		.loc 1 3300 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 98


 1931              		@ sp needed
 1932 0008 7047     		bx	lr
 1933              	.L143:
 1934 000a C046     		.align	2
 1935              	.L142:
 1936 000c 14E000E0 		.word	-536813548
 1937              		.cfi_endproc
 1938              	.LFE40:
 1939              		.size	CySysTickSetReload, .-CySysTickSetReload
 1940              		.section	.text.CySysTickGetReload,"ax",%progbits
 1941              		.align	1
 1942              		.global	CySysTickGetReload
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickGetReload, %function
 1946              	CySysTickGetReload:
 1947              	.LFB41:
3314:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1948              		.loc 1 3314 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c **** }
 1953              		.loc 1 3315 0
 1954 0000 024B     		ldr	r3, .L145
3316:Generated_Source\PSoC4/CyLib.c **** 
 1955              		.loc 1 3316 0
 1956              		@ sp needed
3315:Generated_Source\PSoC4/CyLib.c **** }
 1957              		.loc 1 3315 0
 1958 0002 1868     		ldr	r0, [r3]
 1959 0004 0002     		lsls	r0, r0, #8
 1960 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** 
 1961              		.loc 1 3316 0
 1962 0008 7047     		bx	lr
 1963              	.L146:
 1964 000a C046     		.align	2
 1965              	.L145:
 1966 000c 14E000E0 		.word	-536813548
 1967              		.cfi_endproc
 1968              	.LFE41:
 1969              		.size	CySysTickGetReload, .-CySysTickGetReload
 1970              		.section	.text.CySysTickGetValue,"ax",%progbits
 1971              		.align	1
 1972              		.global	CySysTickGetValue
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CySysTickGetValue, %function
 1976              	CySysTickGetValue:
 1977              	.LFB42:
3330:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1978              		.loc 1 3330 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 99


 1982              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c **** }
 1983              		.loc 1 3331 0
 1984 0000 024B     		ldr	r3, .L148
3332:Generated_Source\PSoC4/CyLib.c **** 
 1985              		.loc 1 3332 0
 1986              		@ sp needed
3331:Generated_Source\PSoC4/CyLib.c **** }
 1987              		.loc 1 3331 0
 1988 0002 1868     		ldr	r0, [r3]
 1989 0004 0002     		lsls	r0, r0, #8
 1990 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** 
 1991              		.loc 1 3332 0
 1992 0008 7047     		bx	lr
 1993              	.L149:
 1994 000a C046     		.align	2
 1995              	.L148:
 1996 000c 18E000E0 		.word	-536813544
 1997              		.cfi_endproc
 1998              	.LFE42:
 1999              		.size	CySysTickGetValue, .-CySysTickGetValue
 2000              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2001              		.align	1
 2002              		.global	CySysTickSetClockSource
 2003              		.code	16
 2004              		.thumb_func
 2005              		.type	CySysTickSetClockSource, %function
 2006              	CySysTickSetClockSource:
 2007              	.LFB43:
3362:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2008              		.loc 1 3362 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013              	.LVL128:
 2014 0000 044B     		ldr	r3, .L154
 2015 0002 0421     		movs	r1, #4
 2016              	.LBB51:
 2017              	.LBB52:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2018              		.loc 1 3365 0
 2019 0004 1A68     		ldr	r2, [r3]
 2020              	.LBE52:
 2021              	.LBE51:
3363:Generated_Source\PSoC4/CyLib.c ****         {
 2022              		.loc 1 3363 0
 2023 0006 0128     		cmp	r0, #1
 2024 0008 01D1     		bne	.L151
 2025              	.LVL129:
 2026              	.LBB54:
 2027              	.LBB53:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2028              		.loc 1 3365 0
 2029 000a 0A43     		orrs	r2, r1
 2030 000c 00E0     		b	.L153
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 100


 2031              	.LVL130:
 2032              	.L151:
 2033              	.LBE53:
 2034              	.LBE54:
3369:Generated_Source\PSoC4/CyLib.c ****         }
 2035              		.loc 1 3369 0
 2036 000e 8A43     		bics	r2, r1
 2037              	.L153:
 2038 0010 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2039              		.loc 1 3371 0
 2040              		@ sp needed
 2041 0012 7047     		bx	lr
 2042              	.L155:
 2043              		.align	2
 2044              	.L154:
 2045 0014 10E000E0 		.word	-536813552
 2046              		.cfi_endproc
 2047              	.LFE43:
 2048              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2049              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2050              		.align	1
 2051              		.global	CySysTickGetClockSource
 2052              		.code	16
 2053              		.thumb_func
 2054              		.type	CySysTickGetClockSource, %function
 2055              	CySysTickGetClockSource:
 2056              	.LFB44:
3387:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2057              		.loc 1 3387 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 0, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2062              		.loc 1 3388 0
 2063 0000 024B     		ldr	r3, .L157
3389:Generated_Source\PSoC4/CyLib.c **** 
 2064              		.loc 1 3389 0
 2065              		@ sp needed
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2066              		.loc 1 3388 0
 2067 0002 1868     		ldr	r0, [r3]
 2068 0004 4007     		lsls	r0, r0, #29
 2069 0006 C00F     		lsrs	r0, r0, #31
3389:Generated_Source\PSoC4/CyLib.c **** 
 2070              		.loc 1 3389 0
 2071 0008 7047     		bx	lr
 2072              	.L158:
 2073 000a C046     		.align	2
 2074              	.L157:
 2075 000c 10E000E0 		.word	-536813552
 2076              		.cfi_endproc
 2077              	.LFE44:
 2078              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2079              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2080              		.align	1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 101


 2081              		.global	CySysTickGetCountFlag
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	CySysTickGetCountFlag, %function
 2085              	CySysTickGetCountFlag:
 2086              	.LFB45:
3410:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2087              		.loc 1 3410 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c **** }
 2092              		.loc 1 3411 0
 2093 0000 024B     		ldr	r3, .L160
3412:Generated_Source\PSoC4/CyLib.c **** 
 2094              		.loc 1 3412 0
 2095              		@ sp needed
3411:Generated_Source\PSoC4/CyLib.c **** }
 2096              		.loc 1 3411 0
 2097 0002 1868     		ldr	r0, [r3]
 2098 0004 C003     		lsls	r0, r0, #15
 2099 0006 C00F     		lsrs	r0, r0, #31
3412:Generated_Source\PSoC4/CyLib.c **** 
 2100              		.loc 1 3412 0
 2101 0008 7047     		bx	lr
 2102              	.L161:
 2103 000a C046     		.align	2
 2104              	.L160:
 2105 000c 10E000E0 		.word	-536813552
 2106              		.cfi_endproc
 2107              	.LFE45:
 2108              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2109              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2110              		.align	1
 2111              		.code	16
 2112              		.thumb_func
 2113              		.type	CySysTickServiceCallbacks, %function
 2114              	CySysTickServiceCallbacks:
 2115              	.LFB49:
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 102


3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 2116              		.loc 1 3495 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 103


 2119              		@ frame_needed = 0, uses_anonymous_args = 0
 2120 0000 10B5     		push	{r4, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 4, -8
 2123              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2124              		.loc 1 3499 0
 2125 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2126              	.LVL131:
 2127 0006 0128     		cmp	r0, #1
 2128 0008 08D1     		bne	.L162
 2129 000a 0024     		movs	r4, #0
 2130              	.L165:
 2131              	.LBB57:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2132              		.loc 1 3503 0
 2133 000c 044B     		ldr	r3, .L171
 2134 000e E358     		ldr	r3, [r4, r3]
 2135 0010 002B     		cmp	r3, #0
 2136 0012 00D0     		beq	.L164
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2137              		.loc 1 3505 0
 2138 0014 9847     		blx	r3
 2139              	.LVL132:
 2140              	.L164:
 2141 0016 0434     		adds	r4, r4, #4
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2142              		.loc 1 3501 0
 2143 0018 142C     		cmp	r4, #20
 2144 001a F7D1     		bne	.L165
 2145              	.L162:
 2146              	.LBE57:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2147              		.loc 1 3509 0
 2148              		@ sp needed
 2149 001c 10BD     		pop	{r4, pc}
 2150              	.L172:
 2151 001e C046     		.align	2
 2152              	.L171:
 2153 0020 00000000 		.word	.LANCHOR2
 2154              		.cfi_endproc
 2155              	.LFE49:
 2156              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2157              		.section	.text.CySysTickClear,"ax",%progbits
 2158              		.align	1
 2159              		.global	CySysTickClear
 2160              		.code	16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 104


 2161              		.thumb_func
 2162              		.type	CySysTickClear, %function
 2163              	CySysTickClear:
 2164              	.LFB46:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2165              		.loc 1 3423 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2170              		.loc 1 3424 0
 2171 0000 0022     		movs	r2, #0
 2172 0002 014B     		ldr	r3, .L174
3425:Generated_Source\PSoC4/CyLib.c **** 
 2173              		.loc 1 3425 0
 2174              		@ sp needed
3424:Generated_Source\PSoC4/CyLib.c **** }
 2175              		.loc 1 3424 0
 2176 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2177              		.loc 1 3425 0
 2178 0006 7047     		bx	lr
 2179              	.L175:
 2180              		.align	2
 2181              	.L174:
 2182 0008 18E000E0 		.word	-536813544
 2183              		.cfi_endproc
 2184              	.LFE46:
 2185              		.size	CySysTickClear, .-CySysTickClear
 2186              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2187              		.align	1
 2188              		.global	CySysTickSetCallback
 2189              		.code	16
 2190              		.thumb_func
 2191              		.type	CySysTickSetCallback, %function
 2192              	CySysTickSetCallback:
 2193              	.LFB47:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2194              		.loc 1 3458 0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 0
 2197              		@ frame_needed = 0, uses_anonymous_args = 0
 2198              		@ link register save eliminated.
 2199              	.LVL133:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2200              		.loc 1 3461 0
 2201 0000 024A     		ldr	r2, .L177
 2202 0002 8300     		lsls	r3, r0, #2
 2203 0004 9858     		ldr	r0, [r3, r2]
 2204              	.LVL134:
3464:Generated_Source\PSoC4/CyLib.c **** 
 2205              		.loc 1 3464 0
 2206              		@ sp needed
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2207              		.loc 1 3462 0
 2208 0006 9950     		str	r1, [r3, r2]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 105


3464:Generated_Source\PSoC4/CyLib.c **** 
 2209              		.loc 1 3464 0
 2210 0008 7047     		bx	lr
 2211              	.L178:
 2212 000a C046     		.align	2
 2213              	.L177:
 2214 000c 00000000 		.word	.LANCHOR2
 2215              		.cfi_endproc
 2216              	.LFE47:
 2217              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2218              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2219              		.align	1
 2220              		.global	CySysTickGetCallback
 2221              		.code	16
 2222              		.thumb_func
 2223              		.type	CySysTickGetCallback, %function
 2224              	CySysTickGetCallback:
 2225              	.LFB48:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2226              		.loc 1 3482 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              		@ link register save eliminated.
 2231              	.LVL135:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2232              		.loc 1 3483 0
 2233 0000 014B     		ldr	r3, .L180
 2234 0002 8000     		lsls	r0, r0, #2
 2235              	.LVL136:
 2236 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2237              		.loc 1 3484 0
 2238              		@ sp needed
 2239 0006 7047     		bx	lr
 2240              	.L181:
 2241              		.align	2
 2242              	.L180:
 2243 0008 00000000 		.word	.LANCHOR2
 2244              		.cfi_endproc
 2245              	.LFE48:
 2246              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2247              		.section	.text.CyGetUniqueId,"ax",%progbits
 2248              		.align	1
 2249              		.global	CyGetUniqueId
 2250              		.code	16
 2251              		.thumb_func
 2252              		.type	CyGetUniqueId, %function
 2253              	CyGetUniqueId:
 2254              	.LFB50:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 106


3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2255              		.loc 1 3527 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
 2260              	.LVL137:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2261              		.loc 1 3529 0
 2262 0000 144B     		ldr	r3, .L183
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2263              		.loc 1 3549 0
 2264              		@ sp needed
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2265              		.loc 1 3529 0
 2266 0002 1A78     		ldrb	r2, [r3]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2267              		.loc 1 3530 0
 2268 0004 144B     		ldr	r3, .L183+4
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2269              		.loc 1 3529 0
 2270 0006 D1B2     		uxtb	r1, r2
 2271 0008 0160     		str	r1, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2272              		.loc 1 3530 0
 2273 000a 1B78     		ldrb	r3, [r3]
 2274 000c 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 107


 2275 000e 0B43     		orrs	r3, r1
 2276 0010 1A00     		movs	r2, r3
 2277 0012 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2278              		.loc 1 3531 0
 2279 0014 114B     		ldr	r3, .L183+8
 2280 0016 1B78     		ldrb	r3, [r3]
 2281 0018 1B04     		lsls	r3, r3, #16
 2282 001a 1343     		orrs	r3, r2
3532:Generated_Source\PSoC4/CyLib.c **** 
 2283              		.loc 1 3532 0
 2284 001c 104A     		ldr	r2, .L183+12
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2285              		.loc 1 3531 0
 2286 001e 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c **** 
 2287              		.loc 1 3532 0
 2288 0020 1278     		ldrb	r2, [r2]
 2289 0022 1206     		lsls	r2, r2, #24
 2290 0024 1343     		orrs	r3, r2
 2291 0026 0360     		str	r3, [r0]
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2292              		.loc 1 3534 0
 2293 0028 0E4B     		ldr	r3, .L183+16
 2294 002a 1A78     		ldrb	r2, [r3]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2295              		.loc 1 3535 0
 2296 002c 0E4B     		ldr	r3, .L183+20
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2297              		.loc 1 3534 0
 2298 002e D1B2     		uxtb	r1, r2
 2299 0030 4160     		str	r1, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2300              		.loc 1 3535 0
 2301 0032 1B78     		ldrb	r3, [r3]
 2302 0034 1B02     		lsls	r3, r3, #8
 2303 0036 0B43     		orrs	r3, r1
 2304 0038 1A00     		movs	r2, r3
 2305 003a 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2306              		.loc 1 3536 0
 2307 003c 0B4B     		ldr	r3, .L183+24
 2308 003e 1B78     		ldrb	r3, [r3]
 2309 0040 1B04     		lsls	r3, r3, #16
 2310 0042 1343     		orrs	r3, r2
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2311              		.loc 1 3537 0
 2312 0044 0A4A     		ldr	r2, .L183+28
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2313              		.loc 1 3536 0
 2314 0046 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2315              		.loc 1 3537 0
 2316 0048 1278     		ldrb	r2, [r2]
 2317 004a 1206     		lsls	r2, r2, #24
 2318 004c 1343     		orrs	r3, r2
 2319 004e 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 108


 2320              		.loc 1 3549 0
 2321 0050 7047     		bx	lr
 2322              	.L184:
 2323 0052 C046     		.align	2
 2324              	.L183:
 2325 0054 78F1FF0F 		.word	268431736
 2326 0058 79F1FF0F 		.word	268431737
 2327 005c 7AF1FF0F 		.word	268431738
 2328 0060 7BF1FF0F 		.word	268431739
 2329 0064 7CF1FF0F 		.word	268431740
 2330 0068 7DF1FF0F 		.word	268431741
 2331 006c 7EF1FF0F 		.word	268431742
 2332 0070 7FF1FF0F 		.word	268431743
 2333              		.cfi_endproc
 2334              	.LFE50:
 2335              		.size	CyGetUniqueId, .-CyGetUniqueId
 2336              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2337              		.align	1
 2338              		.global	CySysSetRamAccessArbPriority
 2339              		.code	16
 2340              		.thumb_func
 2341              		.type	CySysSetRamAccessArbPriority, %function
 2342              	CySysSetRamAccessArbPriority:
 2343              	.LFB51:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2344              		.loc 1 3572 0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 0
 2347              		@ frame_needed = 0, uses_anonymous_args = 0
 2348              		@ link register save eliminated.
 2349              	.LVL138:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2350              		.loc 1 3575 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 109


 2351 0000 0549     		ldr	r1, .L186
 2352 0002 064B     		ldr	r3, .L186+4
 2353 0004 0A68     		ldr	r2, [r1]
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2354              		.loc 1 3576 0
 2355 0006 4004     		lsls	r0, r0, #17
 2356              	.LVL139:
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2357              		.loc 1 3575 0
 2358 0008 1340     		ands	r3, r2
 2359              	.LVL140:
 2360              		.loc 1 3576 0
 2361 000a C022     		movs	r2, #192
 2362 000c D202     		lsls	r2, r2, #11
 2363 000e 1040     		ands	r0, r2
 2364 0010 1843     		orrs	r0, r3
 2365              	.LVL141:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2366              		.loc 1 3577 0
 2367 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 2368              		.loc 1 3578 0
 2369              		@ sp needed
 2370 0014 7047     		bx	lr
 2371              	.L187:
 2372 0016 C046     		.align	2
 2373              	.L186:
 2374 0018 38001040 		.word	1074790456
 2375 001c FFFFF9FF 		.word	-393217
 2376              		.cfi_endproc
 2377              	.LFE51:
 2378              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2379              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2380              		.align	1
 2381              		.global	CySysSetFlashAccessArbPriority
 2382              		.code	16
 2383              		.thumb_func
 2384              		.type	CySysSetFlashAccessArbPriority, %function
 2385              	CySysSetFlashAccessArbPriority:
 2386              	.LFB52:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 110


3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2387              		.loc 1 3600 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391              		@ link register save eliminated.
 2392              	.LVL142:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2393              		.loc 1 3603 0
 2394 0000 0549     		ldr	r1, .L189
 2395 0002 064B     		ldr	r3, .L189+4
 2396 0004 0A68     		ldr	r2, [r1]
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2397              		.loc 1 3604 0
 2398 0006 4004     		lsls	r0, r0, #17
 2399              	.LVL143:
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2400              		.loc 1 3603 0
 2401 0008 1340     		ands	r3, r2
 2402              	.LVL144:
 2403              		.loc 1 3604 0
 2404 000a C022     		movs	r2, #192
 2405 000c D202     		lsls	r2, r2, #11
 2406 000e 1040     		ands	r0, r2
 2407 0010 1843     		orrs	r0, r3
 2408              	.LVL145:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2409              		.loc 1 3605 0
 2410 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2411              		.loc 1 3606 0
 2412              		@ sp needed
 2413 0014 7047     		bx	lr
 2414              	.L190:
 2415 0016 C046     		.align	2
 2416              	.L189:
 2417 0018 30001040 		.word	1074790448
 2418 001c FFFFF9FF 		.word	-393217
 2419              		.cfi_endproc
 2420              	.LFE52:
 2421              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2422              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2423              		.align	1
 2424              		.global	CySysSetDmacAccessArbPriority
 2425              		.code	16
 2426              		.thumb_func
 2427              		.type	CySysSetDmacAccessArbPriority, %function
 2428              	CySysSetDmacAccessArbPriority:
 2429              	.LFB53:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 111


3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2430              		.loc 1 3628 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL146:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2436              		.loc 1 3631 0
 2437 0000 0549     		ldr	r1, .L192
 2438 0002 064B     		ldr	r3, .L192+4
 2439 0004 0A68     		ldr	r2, [r1]
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2440              		.loc 1 3632 0
 2441 0006 4004     		lsls	r0, r0, #17
 2442              	.LVL147:
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2443              		.loc 1 3631 0
 2444 0008 1340     		ands	r3, r2
 2445              	.LVL148:
 2446              		.loc 1 3632 0
 2447 000a C022     		movs	r2, #192
 2448 000c D202     		lsls	r2, r2, #11
 2449 000e 1040     		ands	r0, r2
 2450 0010 1843     		orrs	r0, r3
 2451              	.LVL149:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2452              		.loc 1 3633 0
 2453 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2454              		.loc 1 3634 0
 2455              		@ sp needed
 2456 0014 7047     		bx	lr
 2457              	.L193:
 2458 0016 C046     		.align	2
 2459              	.L192:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 112


 2460 0018 3C001040 		.word	1074790460
 2461 001c FFFFF9FF 		.word	-393217
 2462              		.cfi_endproc
 2463              	.LFE53:
 2464              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2465              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2466              		.align	1
 2467              		.global	CySysSetPeripheralAccessArbPriority
 2468              		.code	16
 2469              		.thumb_func
 2470              		.type	CySysSetPeripheralAccessArbPriority, %function
 2471              	CySysSetPeripheralAccessArbPriority:
 2472              	.LFB54:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2473              		.loc 1 3658 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
 2477              		@ link register save eliminated.
 2478              	.LVL150:
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2479              		.loc 1 3661 0
 2480 0000 0028     		cmp	r0, #0
 2481 0002 01D1     		bne	.L195
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2482              		.loc 1 3663 0
 2483 0004 0948     		ldr	r0, .L199
 2484              	.LVL151:
 2485 0006 06E0     		b	.L198
 2486              	.LVL152:
 2487              	.L195:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 113


3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2488              		.loc 1 3668 0
 2489 0008 0128     		cmp	r0, #1
 2490 000a 01D1     		bne	.L197
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2491              		.loc 1 3670 0
 2492 000c 0848     		ldr	r0, .L199+4
 2493              	.LVL153:
 2494 000e 02E0     		b	.L198
 2495              	.LVL154:
 2496              	.L197:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2497              		.loc 1 3676 0
 2498 0010 0228     		cmp	r0, #2
 2499 0012 09D1     		bne	.L194
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2500              		.loc 1 3678 0
 2501 0014 0748     		ldr	r0, .L199+8
 2502              	.LVL155:
 2503              	.L198:
 2504 0016 0268     		ldr	r2, [r0]
 2505 0018 074B     		ldr	r3, .L199+12
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2506              		.loc 1 3679 0
 2507 001a 4904     		lsls	r1, r1, #17
 2508              	.LVL156:
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2509              		.loc 1 3678 0
 2510 001c 1340     		ands	r3, r2
 2511              	.LVL157:
 2512              		.loc 1 3679 0
 2513 001e C022     		movs	r2, #192
 2514 0020 D202     		lsls	r2, r2, #11
 2515 0022 1140     		ands	r1, r2
 2516 0024 1943     		orrs	r1, r3
 2517              	.LVL158:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2518              		.loc 1 3680 0
 2519 0026 0160     		str	r1, [r0]
 2520              	.LVL159:
 2521              	.L194:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 114


3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2522              		.loc 1 3687 0
 2523              		@ sp needed
 2524 0028 7047     		bx	lr
 2525              	.L200:
 2526 002a C046     		.align	2
 2527              	.L199:
 2528 002c 00011040 		.word	1074790656
 2529 0030 04011040 		.word	1074790660
 2530 0034 08011040 		.word	1074790664
 2531 0038 FFFFF9FF 		.word	-393217
 2532              		.cfi_endproc
 2533              	.LFE54:
 2534              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2535              		.global	CySysClkPumpConfig
 2536              		.global	cyImoFreqMhz2Reg
 2537              		.global	CySysTickInitVar
 2538              		.global	cydelay32kMs
 2539              		.global	cydelayFreqMhz
 2540              		.global	cydelayFreqKhz
 2541              		.global	cydelayFreqHz
 2542              		.section	.rodata
 2543              		.set	.LANCHOR0,. + 0
 2544              		.type	cyImoFreqMhz2Reg, %object
 2545              		.size	cyImoFreqMhz2Reg, 46
 2546              	cyImoFreqMhz2Reg:
 2547 0000 03       		.byte	3
 2548 0001 04       		.byte	4
 2549 0002 05       		.byte	5
 2550 0003 06       		.byte	6
 2551 0004 07       		.byte	7
 2552 0005 08       		.byte	8
 2553 0006 09       		.byte	9
 2554 0007 0A       		.byte	10
 2555 0008 0B       		.byte	11
 2556 0009 0C       		.byte	12
 2557 000a 0E       		.byte	14
 2558 000b 0F       		.byte	15
 2559 000c 10       		.byte	16
 2560 000d 11       		.byte	17
 2561 000e 12       		.byte	18
 2562 000f 13       		.byte	19
 2563 0010 14       		.byte	20
 2564 0011 15       		.byte	21
 2565 0012 16       		.byte	22
 2566 0013 17       		.byte	23
 2567 0014 18       		.byte	24
 2568 0015 19       		.byte	25
 2569 0016 1B       		.byte	27
 2570 0017 1C       		.byte	28
 2571 0018 1D       		.byte	29
 2572 0019 1E       		.byte	30
 2573 001a 1F       		.byte	31
 2574 001b 20       		.byte	32
 2575 001c 21       		.byte	33
 2576 001d 22       		.byte	34
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 115


 2577 001e 23       		.byte	35
 2578 001f 25       		.byte	37
 2579 0020 26       		.byte	38
 2580 0021 27       		.byte	39
 2581 0022 28       		.byte	40
 2582 0023 29       		.byte	41
 2583 0024 2A       		.byte	42
 2584 0025 2B       		.byte	43
 2585 0026 2E       		.byte	46
 2586 0027 2F       		.byte	47
 2587 0028 30       		.byte	48
 2588 0029 31       		.byte	49
 2589 002a 32       		.byte	50
 2590 002b 33       		.byte	51
 2591 002c 34       		.byte	52
 2592 002d 35       		.byte	53
 2593              		.data
 2594              		.align	2
 2595              		.set	.LANCHOR1,. + 0
 2596              		.type	CySysClkPumpConfig, %object
 2597              		.size	CySysClkPumpConfig, 4
 2598              	CySysClkPumpConfig:
 2599 0000 01000000 		.word	1
 2600              		.type	cydelay32kMs, %object
 2601              		.size	cydelay32kMs, 4
 2602              	cydelay32kMs:
 2603 0004 0000C05D 		.word	1572864000
 2604              		.type	cydelayFreqKhz, %object
 2605              		.size	cydelayFreqKhz, 4
 2606              	cydelayFreqKhz:
 2607 0008 80BB0000 		.word	48000
 2608              		.type	cydelayFreqMhz, %object
 2609              		.size	cydelayFreqMhz, 1
 2610              	cydelayFreqMhz:
 2611 000c 30       		.byte	48
 2612 000d 000000   		.space	3
 2613              		.type	cydelayFreqHz, %object
 2614              		.size	cydelayFreqHz, 4
 2615              	cydelayFreqHz:
 2616 0010 006CDC02 		.word	48000000
 2617              		.bss
 2618              		.align	2
 2619              		.set	.LANCHOR2,. + 0
 2620              		.type	CySysTickCallbacks, %object
 2621              		.size	CySysTickCallbacks, 20
 2622              	CySysTickCallbacks:
 2623 0000 00000000 		.space	20
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2624              		.type	CySysTickInitVar, %object
 2625              		.size	CySysTickInitVar, 4
 2626              	CySysTickInitVar:
 2627 0014 00000000 		.space	4
 2628              		.text
 2629              	.Letext0:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 116


 2630              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2631              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2632              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2633              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2634              		.section	.debug_info,"",%progbits
 2635              	.Ldebug_info0:
 2636 0000 E70D0000 		.4byte	0xde7
 2637 0004 0400     		.2byte	0x4
 2638 0006 00000000 		.4byte	.Ldebug_abbrev0
 2639 000a 04       		.byte	0x4
 2640 000b 01       		.uleb128 0x1
 2641 000c 86040000 		.4byte	.LASF119
 2642 0010 0C       		.byte	0xc
 2643 0011 B0070000 		.4byte	.LASF120
 2644 0015 52000000 		.4byte	.LASF121
 2645 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2646 001d 00000000 		.4byte	0
 2647 0021 00000000 		.4byte	.Ldebug_line0
 2648 0025 02       		.uleb128 0x2
 2649 0026 01       		.byte	0x1
 2650 0027 06       		.byte	0x6
 2651 0028 26010000 		.4byte	.LASF0
 2652 002c 02       		.uleb128 0x2
 2653 002d 01       		.byte	0x1
 2654 002e 08       		.byte	0x8
 2655 002f 06060000 		.4byte	.LASF1
 2656 0033 02       		.uleb128 0x2
 2657 0034 02       		.byte	0x2
 2658 0035 05       		.byte	0x5
 2659 0036 1B060000 		.4byte	.LASF2
 2660 003a 02       		.uleb128 0x2
 2661 003b 02       		.byte	0x2
 2662 003c 07       		.byte	0x7
 2663 003d 48030000 		.4byte	.LASF3
 2664 0041 02       		.uleb128 0x2
 2665 0042 04       		.byte	0x4
 2666 0043 05       		.byte	0x5
 2667 0044 8B010000 		.4byte	.LASF4
 2668 0048 02       		.uleb128 0x2
 2669 0049 04       		.byte	0x4
 2670 004a 07       		.byte	0x7
 2671 004b BB020000 		.4byte	.LASF5
 2672 004f 02       		.uleb128 0x2
 2673 0050 08       		.byte	0x8
 2674 0051 05       		.byte	0x5
 2675 0052 18010000 		.4byte	.LASF6
 2676 0056 02       		.uleb128 0x2
 2677 0057 08       		.byte	0x8
 2678 0058 07       		.byte	0x7
 2679 0059 A2000000 		.4byte	.LASF7
 2680 005d 03       		.uleb128 0x3
 2681 005e 04       		.byte	0x4
 2682 005f 05       		.byte	0x5
 2683 0060 696E7400 		.ascii	"int\000"
 2684 0064 02       		.uleb128 0x2
 2685 0065 04       		.byte	0x4
 2686 0066 07       		.byte	0x7
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 117


 2687 0067 9F020000 		.4byte	.LASF8
 2688 006b 04       		.uleb128 0x4
 2689 006c C0010000 		.4byte	.LASF9
 2690 0070 02       		.byte	0x2
 2691 0071 FC01     		.2byte	0x1fc
 2692 0073 2C000000 		.4byte	0x2c
 2693 0077 04       		.uleb128 0x4
 2694 0078 0F000000 		.4byte	.LASF10
 2695 007c 02       		.byte	0x2
 2696 007d FD01     		.2byte	0x1fd
 2697 007f 3A000000 		.4byte	0x3a
 2698 0083 04       		.uleb128 0x4
 2699 0084 00020000 		.4byte	.LASF11
 2700 0088 02       		.byte	0x2
 2701 0089 FE01     		.2byte	0x1fe
 2702 008b 48000000 		.4byte	0x48
 2703 008f 02       		.uleb128 0x2
 2704 0090 04       		.byte	0x4
 2705 0091 04       		.byte	0x4
 2706 0092 6C050000 		.4byte	.LASF12
 2707 0096 02       		.uleb128 0x2
 2708 0097 08       		.byte	0x8
 2709 0098 04       		.byte	0x4
 2710 0099 DC010000 		.4byte	.LASF13
 2711 009d 02       		.uleb128 0x2
 2712 009e 01       		.byte	0x1
 2713 009f 08       		.byte	0x8
 2714 00a0 71060000 		.4byte	.LASF14
 2715 00a4 04       		.uleb128 0x4
 2716 00a5 D3050000 		.4byte	.LASF15
 2717 00a9 02       		.byte	0x2
 2718 00aa A602     		.2byte	0x2a6
 2719 00ac B0000000 		.4byte	0xb0
 2720 00b0 05       		.uleb128 0x5
 2721 00b1 6B000000 		.4byte	0x6b
 2722 00b5 04       		.uleb128 0x4
 2723 00b6 F9030000 		.4byte	.LASF16
 2724 00ba 02       		.byte	0x2
 2725 00bb A802     		.2byte	0x2a8
 2726 00bd C1000000 		.4byte	0xc1
 2727 00c1 05       		.uleb128 0x5
 2728 00c2 83000000 		.4byte	0x83
 2729 00c6 04       		.uleb128 0x4
 2730 00c7 76060000 		.4byte	.LASF17
 2731 00cb 02       		.byte	0x2
 2732 00cc B802     		.2byte	0x2b8
 2733 00ce D2000000 		.4byte	0xd2
 2734 00d2 06       		.uleb128 0x6
 2735 00d3 04       		.byte	0x4
 2736 00d4 D8000000 		.4byte	0xd8
 2737 00d8 07       		.uleb128 0x7
 2738 00d9 02       		.uleb128 0x2
 2739 00da 08       		.byte	0x8
 2740 00db 04       		.byte	0x4
 2741 00dc 72040000 		.4byte	.LASF18
 2742 00e0 02       		.uleb128 0x2
 2743 00e1 04       		.byte	0x4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 118


 2744 00e2 07       		.byte	0x7
 2745 00e3 22040000 		.4byte	.LASF19
 2746 00e7 04       		.uleb128 0x4
 2747 00e8 97050000 		.4byte	.LASF20
 2748 00ec 03       		.byte	0x3
 2749 00ed 0801     		.2byte	0x108
 2750 00ef D2000000 		.4byte	0xd2
 2751 00f3 08       		.uleb128 0x8
 2752 00f4 24020000 		.4byte	.LASF26
 2753 00f8 01       		.byte	0x1
 2754 00f9 AE       		.byte	0xae
 2755 00fa 01       		.byte	0x1
 2756 00fb 40010000 		.4byte	0x140
 2757 00ff 09       		.uleb128 0x9
 2758 0100 6900     		.ascii	"i\000"
 2759 0102 01       		.byte	0x1
 2760 0103 B1       		.byte	0xb1
 2761 0104 83000000 		.4byte	0x83
 2762 0108 0A       		.uleb128 0xa
 2763 0109 32010000 		.4byte	.LASF21
 2764 010d 01       		.byte	0x1
 2765 010e B4       		.byte	0xb4
 2766 010f 83000000 		.4byte	0x83
 2767 0113 0A       		.uleb128 0xa
 2768 0114 43010000 		.4byte	.LASF22
 2769 0118 01       		.byte	0x1
 2770 0119 B5       		.byte	0xb5
 2771 011a 6B000000 		.4byte	0x6b
 2772 011e 0A       		.uleb128 0xa
 2773 011f 5B030000 		.4byte	.LASF23
 2774 0123 01       		.byte	0x1
 2775 0124 B6       		.byte	0xb6
 2776 0125 83000000 		.4byte	0x83
 2777 0129 0A       		.uleb128 0xa
 2778 012a 52010000 		.4byte	.LASF24
 2779 012e 01       		.byte	0x1
 2780 012f B7       		.byte	0xb7
 2781 0130 83000000 		.4byte	0x83
 2782 0134 0A       		.uleb128 0xa
 2783 0135 DB060000 		.4byte	.LASF25
 2784 0139 01       		.byte	0x1
 2785 013a B8       		.byte	0xb8
 2786 013b C1000000 		.4byte	0xc1
 2787 013f 00       		.byte	0
 2788 0140 0B       		.uleb128 0xb
 2789 0141 E9010000 		.4byte	.LASF28
 2790 0145 01       		.byte	0x1
 2791 0146 A60A     		.2byte	0xaa6
 2792 0148 01       		.byte	0x1
 2793 0149 0C       		.uleb128 0xc
 2794 014a 62030000 		.4byte	.LASF27
 2795 014e 01       		.byte	0x1
 2796 014f 210D     		.2byte	0xd21
 2797 0151 01       		.byte	0x1
 2798 0152 63010000 		.4byte	0x163
 2799 0156 0D       		.uleb128 0xd
 2800 0157 6F020000 		.4byte	.LASF31
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 119


 2801 015b 01       		.byte	0x1
 2802 015c 210D     		.2byte	0xd21
 2803 015e 83000000 		.4byte	0x83
 2804 0162 00       		.byte	0
 2805 0163 0E       		.uleb128 0xe
 2806 0164 57060000 		.4byte	.LASF122
 2807 0168 01       		.byte	0x1
 2808 0169 A60D     		.2byte	0xda6
 2809 016b 01       		.byte	0x1
 2810 016c 7B010000 		.4byte	0x17b
 2811 0170 0F       		.uleb128 0xf
 2812 0171 6900     		.ascii	"i\000"
 2813 0173 01       		.byte	0x1
 2814 0174 A80D     		.2byte	0xda8
 2815 0176 83000000 		.4byte	0x83
 2816 017a 00       		.byte	0
 2817 017b 0B       		.uleb128 0xb
 2818 017c AC020000 		.4byte	.LASF29
 2819 0180 01       		.byte	0x1
 2820 0181 5E0D     		.2byte	0xd5e
 2821 0183 01       		.byte	0x1
 2822 0184 0C       		.uleb128 0xc
 2823 0185 E3070000 		.4byte	.LASF30
 2824 0189 01       		.byte	0x1
 2825 018a E10C     		.2byte	0xce1
 2826 018c 01       		.byte	0x1
 2827 018d 9E010000 		.4byte	0x19e
 2828 0191 0D       		.uleb128 0xd
 2829 0192 69020000 		.4byte	.LASF32
 2830 0196 01       		.byte	0x1
 2831 0197 E10C     		.2byte	0xce1
 2832 0199 83000000 		.4byte	0x83
 2833 019d 00       		.byte	0
 2834 019e 10       		.uleb128 0x10
 2835 019f CD030000 		.4byte	.LASF123
 2836 01a3 01       		.byte	0x1
 2837 01a4 070B     		.2byte	0xb07
 2838 01a6 C6000000 		.4byte	0xc6
 2839 01aa 01       		.byte	0x1
 2840 01ab E0010000 		.4byte	0x1e0
 2841 01af 0D       		.uleb128 0xd
 2842 01b0 89030000 		.4byte	.LASF33
 2843 01b4 01       		.byte	0x1
 2844 01b5 070B     		.2byte	0xb07
 2845 01b7 6B000000 		.4byte	0x6b
 2846 01bb 0D       		.uleb128 0xd
 2847 01bc 7E040000 		.4byte	.LASF34
 2848 01c0 01       		.byte	0x1
 2849 01c1 070B     		.2byte	0xb07
 2850 01c3 C6000000 		.4byte	0xc6
 2851 01c7 11       		.uleb128 0x11
 2852 01c8 4B000000 		.4byte	.LASF35
 2853 01cc 01       		.byte	0x1
 2854 01cd 090B     		.2byte	0xb09
 2855 01cf C6000000 		.4byte	0xc6
 2856 01d3 11       		.uleb128 0x11
 2857 01d4 00000000 		.4byte	.LASF36
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 120


 2858 01d8 01       		.byte	0x1
 2859 01d9 0A0B     		.2byte	0xb0a
 2860 01db E0010000 		.4byte	0x1e0
 2861 01df 00       		.byte	0
 2862 01e0 06       		.uleb128 0x6
 2863 01e1 04       		.byte	0x4
 2864 01e2 C6000000 		.4byte	0xc6
 2865 01e6 12       		.uleb128 0x12
 2866 01e7 87070000 		.4byte	.LASF47
 2867 01eb 01       		.byte	0x1
 2868 01ec 69       		.byte	0x69
 2869 01ed 00000000 		.4byte	.LFB1
 2870 01f1 14000000 		.4byte	.LFE1-.LFB1
 2871 01f5 01       		.uleb128 0x1
 2872 01f6 9C       		.byte	0x9c
 2873 01f7 13       		.uleb128 0x13
 2874 01f8 DF030000 		.4byte	.LASF37
 2875 01fc 01       		.byte	0x1
 2876 01fd 1B01     		.2byte	0x11b
 2877 01ff 00000000 		.4byte	.LFB4
 2878 0203 50000000 		.4byte	.LFE4-.LFB4
 2879 0207 01       		.uleb128 0x1
 2880 0208 9C       		.byte	0x9c
 2881 0209 2C020000 		.4byte	0x22c
 2882 020d 14       		.uleb128 0x14
 2883 020e 6900     		.ascii	"i\000"
 2884 0210 01       		.byte	0x1
 2885 0211 1E01     		.2byte	0x11e
 2886 0213 83000000 		.4byte	0x83
 2887 0217 00000000 		.4byte	.LLST0
 2888 021b 15       		.uleb128 0x15
 2889 021c 32010000 		.4byte	.LASF21
 2890 0220 01       		.byte	0x1
 2891 0221 2101     		.2byte	0x121
 2892 0223 83000000 		.4byte	0x83
 2893 0227 37000000 		.4byte	.LLST1
 2894 022b 00       		.byte	0
 2895 022c 16       		.uleb128 0x16
 2896 022d E8020000 		.4byte	.LASF38
 2897 0231 01       		.byte	0x1
 2898 0232 8A       		.byte	0x8a
 2899 0233 00000000 		.4byte	.LFB2
 2900 0237 18000000 		.4byte	.LFE2-.LFB2
 2901 023b 01       		.uleb128 0x1
 2902 023c 9C       		.byte	0x9c
 2903 023d 4B020000 		.4byte	0x24b
 2904 0241 17       		.uleb128 0x17
 2905 0242 06000000 		.4byte	.LVL8
 2906 0246 F7010000 		.4byte	0x1f7
 2907 024a 00       		.byte	0
 2908 024b 18       		.uleb128 0x18
 2909 024c 6D010000 		.4byte	.LASF49
 2910 0250 01       		.byte	0x1
 2911 0251 5301     		.2byte	0x153
 2912 0253 83000000 		.4byte	0x83
 2913 0257 00000000 		.4byte	.LFB5
 2914 025b 10000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 121


 2915 025f 01       		.uleb128 0x1
 2916 0260 9C       		.byte	0x9c
 2917 0261 13       		.uleb128 0x13
 2918 0262 1F000000 		.4byte	.LASF39
 2919 0266 01       		.byte	0x1
 2920 0267 4802     		.2byte	0x248
 2921 0269 00000000 		.4byte	.LFB6
 2922 026d 20000000 		.4byte	.LFE6-.LFB6
 2923 0271 01       		.uleb128 0x1
 2924 0272 9C       		.byte	0x9c
 2925 0273 BA020000 		.4byte	0x2ba
 2926 0277 19       		.uleb128 0x19
 2927 0278 43060000 		.4byte	.LASF42
 2928 027c 01       		.byte	0x1
 2929 027d 4802     		.2byte	0x248
 2930 027f 83000000 		.4byte	0x83
 2931 0283 7E000000 		.4byte	.LLST2
 2932 0287 15       		.uleb128 0x15
 2933 0288 43010000 		.4byte	.LASF22
 2934 028c 01       		.byte	0x1
 2935 028d 4A02     		.2byte	0x24a
 2936 028f 6B000000 		.4byte	0x6b
 2937 0293 AA000000 		.4byte	.LLST3
 2938 0297 15       		.uleb128 0x15
 2939 0298 DC070000 		.4byte	.LASF40
 2940 029c 01       		.byte	0x1
 2941 029d 4B02     		.2byte	0x24b
 2942 029f 83000000 		.4byte	0x83
 2943 02a3 BD000000 		.4byte	.LLST4
 2944 02a7 17       		.uleb128 0x17
 2945 02a8 08000000 		.4byte	.LVL10
 2946 02ac B30D0000 		.4byte	0xdb3
 2947 02b0 17       		.uleb128 0x17
 2948 02b1 1A000000 		.4byte	.LVL13
 2949 02b5 BE0D0000 		.4byte	0xdbe
 2950 02b9 00       		.byte	0
 2951 02ba 13       		.uleb128 0x13
 2952 02bb AB010000 		.4byte	.LASF41
 2953 02bf 01       		.byte	0x1
 2954 02c0 9502     		.2byte	0x295
 2955 02c2 00000000 		.4byte	.LFB7
 2956 02c6 34000000 		.4byte	.LFE7-.LFB7
 2957 02ca 01       		.uleb128 0x1
 2958 02cb 9C       		.byte	0x9c
 2959 02cc DF020000 		.4byte	0x2df
 2960 02d0 1A       		.uleb128 0x1a
 2961 02d1 D5010000 		.4byte	.LASF43
 2962 02d5 01       		.byte	0x1
 2963 02d6 9502     		.2byte	0x295
 2964 02d8 83000000 		.4byte	0x83
 2965 02dc 01       		.uleb128 0x1
 2966 02dd 50       		.byte	0x50
 2967 02de 00       		.byte	0
 2968 02df 1B       		.uleb128 0x1b
 2969 02e0 0C020000 		.4byte	.LASF51
 2970 02e4 01       		.byte	0x1
 2971 02e5 BA02     		.2byte	0x2ba
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 122


 2972 02e7 83000000 		.4byte	0x83
 2973 02eb 00000000 		.4byte	.LFB8
 2974 02ef 18000000 		.4byte	.LFE8-.LFB8
 2975 02f3 01       		.uleb128 0x1
 2976 02f4 9C       		.byte	0x9c
 2977 02f5 2C030000 		.4byte	0x32c
 2978 02f9 15       		.uleb128 0x15
 2979 02fa 43010000 		.4byte	.LASF22
 2980 02fe 01       		.byte	0x1
 2981 02ff BC02     		.2byte	0x2bc
 2982 0301 6B000000 		.4byte	0x6b
 2983 0305 DB000000 		.4byte	.LLST5
 2984 0309 15       		.uleb128 0x15
 2985 030a 14050000 		.4byte	.LASF44
 2986 030e 01       		.byte	0x1
 2987 030f BD02     		.2byte	0x2bd
 2988 0311 83000000 		.4byte	0x83
 2989 0315 EE000000 		.4byte	.LLST6
 2990 0319 17       		.uleb128 0x17
 2991 031a 06000000 		.4byte	.LVL16
 2992 031e B30D0000 		.4byte	0xdb3
 2993 0322 17       		.uleb128 0x17
 2994 0323 0E000000 		.4byte	.LVL18
 2995 0327 BE0D0000 		.4byte	0xdbe
 2996 032b 00       		.byte	0
 2997 032c 13       		.uleb128 0x13
 2998 032d 93060000 		.4byte	.LASF45
 2999 0331 01       		.byte	0x1
 3000 0332 F702     		.2byte	0x2f7
 3001 0334 00000000 		.4byte	.LFB9
 3002 0338 2C000000 		.4byte	.LFE9-.LFB9
 3003 033c 01       		.uleb128 0x1
 3004 033d 9C       		.byte	0x9c
 3005 033e 75030000 		.4byte	0x375
 3006 0342 19       		.uleb128 0x19
 3007 0343 7F070000 		.4byte	.LASF46
 3008 0347 01       		.byte	0x1
 3009 0348 F702     		.2byte	0x2f7
 3010 034a 83000000 		.4byte	0x83
 3011 034e 10010000 		.4byte	.LLST7
 3012 0352 15       		.uleb128 0x15
 3013 0353 43010000 		.4byte	.LASF22
 3014 0357 01       		.byte	0x1
 3015 0358 F902     		.2byte	0x2f9
 3016 035a 6B000000 		.4byte	0x6b
 3017 035e 3C010000 		.4byte	.LLST8
 3018 0362 17       		.uleb128 0x17
 3019 0363 08000000 		.4byte	.LVL21
 3020 0367 B30D0000 		.4byte	0xdb3
 3021 036b 17       		.uleb128 0x17
 3022 036c 22000000 		.4byte	.LVL23
 3023 0370 BE0D0000 		.4byte	0xdbe
 3024 0374 00       		.byte	0
 3025 0375 1C       		.uleb128 0x1c
 3026 0376 21070000 		.4byte	.LASF48
 3027 037a 01       		.byte	0x1
 3028 037b 840A     		.2byte	0xa84
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 123


 3029 037d 00000000 		.4byte	.LFB12
 3030 0381 20000000 		.4byte	.LFE12-.LFB12
 3031 0385 01       		.uleb128 0x1
 3032 0386 9C       		.byte	0x9c
 3033 0387 18       		.uleb128 0x18
 3034 0388 CD020000 		.4byte	.LASF50
 3035 038c 01       		.byte	0x1
 3036 038d 960A     		.2byte	0xa96
 3037 038f 83000000 		.4byte	0x83
 3038 0393 00000000 		.4byte	.LFB13
 3039 0397 10000000 		.4byte	.LFE13-.LFB13
 3040 039b 01       		.uleb128 0x1
 3041 039c 9C       		.byte	0x9c
 3042 039d 1D       		.uleb128 0x1d
 3043 039e 40010000 		.4byte	0x140
 3044 03a2 00000000 		.4byte	.LFB14
 3045 03a6 0C000000 		.4byte	.LFE14-.LFB14
 3046 03aa 01       		.uleb128 0x1
 3047 03ab 9C       		.byte	0x9c
 3048 03ac 1B       		.uleb128 0x1b
 3049 03ad 34030000 		.4byte	.LASF52
 3050 03b1 01       		.byte	0x1
 3051 03b2 C00A     		.2byte	0xac0
 3052 03b4 83000000 		.4byte	0x83
 3053 03b8 00000000 		.4byte	.LFB15
 3054 03bc 14000000 		.4byte	.LFE15-.LFB15
 3055 03c0 01       		.uleb128 0x1
 3056 03c1 9C       		.byte	0x9c
 3057 03c2 E7030000 		.4byte	0x3e7
 3058 03c6 19       		.uleb128 0x19
 3059 03c7 14060000 		.4byte	.LASF53
 3060 03cb 01       		.byte	0x1
 3061 03cc C00A     		.2byte	0xac0
 3062 03ce 83000000 		.4byte	0x83
 3063 03d2 4F010000 		.4byte	.LLST9
 3064 03d6 15       		.uleb128 0x15
 3065 03d7 0E040000 		.4byte	.LASF54
 3066 03db 01       		.byte	0x1
 3067 03dc C20A     		.2byte	0xac2
 3068 03de 83000000 		.4byte	0x83
 3069 03e2 6D010000 		.4byte	.LLST10
 3070 03e6 00       		.byte	0
 3071 03e7 1B       		.uleb128 0x1b
 3072 03e8 94000000 		.4byte	.LASF55
 3073 03ec 01       		.byte	0x1
 3074 03ed D70A     		.2byte	0xad7
 3075 03ef 83000000 		.4byte	0x83
 3076 03f3 00000000 		.4byte	.LFB16
 3077 03f7 10000000 		.4byte	.LFE16-.LFB16
 3078 03fb 01       		.uleb128 0x1
 3079 03fc 9C       		.byte	0x9c
 3080 03fd 10040000 		.4byte	0x410
 3081 0401 1E       		.uleb128 0x1e
 3082 0402 16000000 		.4byte	.LASF56
 3083 0406 01       		.byte	0x1
 3084 0407 D90A     		.2byte	0xad9
 3085 0409 83000000 		.4byte	0x83
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 124


 3086 040d 01       		.uleb128 0x1
 3087 040e 50       		.byte	0x50
 3088 040f 00       		.byte	0
 3089 0410 13       		.uleb128 0x13
 3090 0411 C4000000 		.4byte	.LASF57
 3091 0415 01       		.byte	0x1
 3092 0416 EE0A     		.2byte	0xaee
 3093 0418 00000000 		.4byte	.LFB17
 3094 041c 0C000000 		.4byte	.LFE17-.LFB17
 3095 0420 01       		.uleb128 0x1
 3096 0421 9C       		.byte	0x9c
 3097 0422 35040000 		.4byte	0x435
 3098 0426 1A       		.uleb128 0x1a
 3099 0427 07020000 		.4byte	.LASF58
 3100 042b 01       		.byte	0x1
 3101 042c EE0A     		.2byte	0xaee
 3102 042e 83000000 		.4byte	0x83
 3103 0432 01       		.uleb128 0x1
 3104 0433 50       		.byte	0x50
 3105 0434 00       		.byte	0
 3106 0435 1F       		.uleb128 0x1f
 3107 0436 9E010000 		.4byte	0x19e
 3108 043a 00000000 		.4byte	.LFB18
 3109 043e 0E000000 		.4byte	.LFE18-.LFB18
 3110 0442 01       		.uleb128 0x1
 3111 0443 9C       		.byte	0x9c
 3112 0444 69040000 		.4byte	0x469
 3113 0448 20       		.uleb128 0x20
 3114 0449 AF010000 		.4byte	0x1af
 3115 044d 8F010000 		.4byte	.LLST11
 3116 0451 21       		.uleb128 0x21
 3117 0452 BB010000 		.4byte	0x1bb
 3118 0456 01       		.uleb128 0x1
 3119 0457 51       		.byte	0x51
 3120 0458 22       		.uleb128 0x22
 3121 0459 C7010000 		.4byte	0x1c7
 3122 045d 01       		.uleb128 0x1
 3123 045e 50       		.byte	0x50
 3124 045f 23       		.uleb128 0x23
 3125 0460 D3010000 		.4byte	0x1d3
 3126 0464 00000020 		.4byte	0x20000000
 3127 0468 00       		.byte	0
 3128 0469 1B       		.uleb128 0x1b
 3129 046a 31060000 		.4byte	.LASF59
 3130 046e 01       		.byte	0x1
 3131 046f 290B     		.2byte	0xb29
 3132 0471 C6000000 		.4byte	0xc6
 3133 0475 00000000 		.4byte	.LFB19
 3134 0479 0C000000 		.4byte	.LFE19-.LFB19
 3135 047d 01       		.uleb128 0x1
 3136 047e 9C       		.byte	0x9c
 3137 047f A4040000 		.4byte	0x4a4
 3138 0483 19       		.uleb128 0x19
 3139 0484 89030000 		.4byte	.LASF33
 3140 0488 01       		.byte	0x1
 3141 0489 290B     		.2byte	0xb29
 3142 048b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 125


 3143 048f B0010000 		.4byte	.LLST12
 3144 0493 24       		.uleb128 0x24
 3145 0494 00000000 		.4byte	.LASF36
 3146 0498 01       		.byte	0x1
 3147 0499 2B0B     		.2byte	0xb2b
 3148 049b E0010000 		.4byte	0x1e0
 3149 049f 00000020 		.4byte	0x20000000
 3150 04a3 00       		.byte	0
 3151 04a4 1B       		.uleb128 0x1b
 3152 04a5 7A030000 		.4byte	.LASF60
 3153 04a9 01       		.byte	0x1
 3154 04aa 3F0B     		.2byte	0xb3f
 3155 04ac C6000000 		.4byte	0xc6
 3156 04b0 00000000 		.4byte	.LFB20
 3157 04b4 10000000 		.4byte	.LFE20-.LFB20
 3158 04b8 01       		.uleb128 0x1
 3159 04b9 9C       		.byte	0x9c
 3160 04ba FB040000 		.4byte	0x4fb
 3161 04be 19       		.uleb128 0x19
 3162 04bf 89030000 		.4byte	.LASF33
 3163 04c3 01       		.byte	0x1
 3164 04c4 3F0B     		.2byte	0xb3f
 3165 04c6 6B000000 		.4byte	0x6b
 3166 04ca D1010000 		.4byte	.LLST13
 3167 04ce 1A       		.uleb128 0x1a
 3168 04cf 7E040000 		.4byte	.LASF34
 3169 04d3 01       		.byte	0x1
 3170 04d4 3F0B     		.2byte	0xb3f
 3171 04d6 C6000000 		.4byte	0xc6
 3172 04da 01       		.uleb128 0x1
 3173 04db 51       		.byte	0x51
 3174 04dc 1E       		.uleb128 0x1e
 3175 04dd 4B000000 		.4byte	.LASF35
 3176 04e1 01       		.byte	0x1
 3177 04e2 410B     		.2byte	0xb41
 3178 04e4 C6000000 		.4byte	0xc6
 3179 04e8 01       		.uleb128 0x1
 3180 04e9 50       		.byte	0x50
 3181 04ea 24       		.uleb128 0x24
 3182 04eb 00000000 		.4byte	.LASF36
 3183 04ef 01       		.byte	0x1
 3184 04f0 420B     		.2byte	0xb42
 3185 04f2 E0010000 		.4byte	0x1e0
 3186 04f6 00000020 		.4byte	0x20000000
 3187 04fa 00       		.byte	0
 3188 04fb 1B       		.uleb128 0x1b
 3189 04fc A9050000 		.4byte	.LASF61
 3190 0500 01       		.byte	0x1
 3191 0501 5B0B     		.2byte	0xb5b
 3192 0503 C6000000 		.4byte	0xc6
 3193 0507 00000000 		.4byte	.LFB21
 3194 050b 10000000 		.4byte	.LFE21-.LFB21
 3195 050f 01       		.uleb128 0x1
 3196 0510 9C       		.byte	0x9c
 3197 0511 36050000 		.4byte	0x536
 3198 0515 19       		.uleb128 0x19
 3199 0516 89030000 		.4byte	.LASF33
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 126


 3200 051a 01       		.byte	0x1
 3201 051b 5B0B     		.2byte	0xb5b
 3202 051d 6B000000 		.4byte	0x6b
 3203 0521 F2010000 		.4byte	.LLST14
 3204 0525 24       		.uleb128 0x24
 3205 0526 00000000 		.4byte	.LASF36
 3206 052a 01       		.byte	0x1
 3207 052b 5D0B     		.2byte	0xb5d
 3208 052d E0010000 		.4byte	0x1e0
 3209 0531 00000020 		.4byte	0x20000000
 3210 0535 00       		.byte	0
 3211 0536 13       		.uleb128 0x13
 3212 0537 5B050000 		.4byte	.LASF62
 3213 053b 01       		.byte	0x1
 3214 053c 6E0B     		.2byte	0xb6e
 3215 053e 00000000 		.4byte	.LFB22
 3216 0542 34000000 		.4byte	.LFE22-.LFB22
 3217 0546 01       		.uleb128 0x1
 3218 0547 9C       		.byte	0x9c
 3219 0548 AF050000 		.4byte	0x5af
 3220 054c 19       		.uleb128 0x19
 3221 054d 89030000 		.4byte	.LASF33
 3222 0551 01       		.byte	0x1
 3223 0552 6E0B     		.2byte	0xb6e
 3224 0554 6B000000 		.4byte	0x6b
 3225 0558 13020000 		.4byte	.LLST15
 3226 055c 19       		.uleb128 0x19
 3227 055d 90030000 		.4byte	.LASF63
 3228 0561 01       		.byte	0x1
 3229 0562 6E0B     		.2byte	0xb6e
 3230 0564 6B000000 		.4byte	0x6b
 3231 0568 34020000 		.4byte	.LLST16
 3232 056c 15       		.uleb128 0x15
 3233 056d 43010000 		.4byte	.LASF22
 3234 0571 01       		.byte	0x1
 3235 0572 700B     		.2byte	0xb70
 3236 0574 6B000000 		.4byte	0x6b
 3237 0578 55020000 		.4byte	.LLST17
 3238 057c 15       		.uleb128 0x15
 3239 057d E3010000 		.4byte	.LASF64
 3240 0581 01       		.byte	0x1
 3241 0582 710B     		.2byte	0xb71
 3242 0584 83000000 		.4byte	0x83
 3243 0588 68020000 		.4byte	.LLST18
 3244 058c 15       		.uleb128 0x15
 3245 058d 69020000 		.4byte	.LASF32
 3246 0591 01       		.byte	0x1
 3247 0592 720B     		.2byte	0xb72
 3248 0594 83000000 		.4byte	0x83
 3249 0598 7B020000 		.4byte	.LLST19
 3250 059c 17       		.uleb128 0x17
 3251 059d 18000000 		.4byte	.LVL42
 3252 05a1 B30D0000 		.4byte	0xdb3
 3253 05a5 17       		.uleb128 0x17
 3254 05a6 2C000000 		.4byte	.LVL46
 3255 05aa BE0D0000 		.4byte	0xdbe
 3256 05ae 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 127


 3257 05af 1B       		.uleb128 0x1b
 3258 05b0 3D020000 		.4byte	.LASF65
 3259 05b4 01       		.byte	0x1
 3260 05b5 900B     		.2byte	0xb90
 3261 05b7 6B000000 		.4byte	0x6b
 3262 05bb 00000000 		.4byte	.LFB23
 3263 05bf 20000000 		.4byte	.LFE23-.LFB23
 3264 05c3 01       		.uleb128 0x1
 3265 05c4 9C       		.byte	0x9c
 3266 05c5 EA050000 		.4byte	0x5ea
 3267 05c9 19       		.uleb128 0x19
 3268 05ca 89030000 		.4byte	.LASF33
 3269 05ce 01       		.byte	0x1
 3270 05cf 900B     		.2byte	0xb90
 3271 05d1 6B000000 		.4byte	0x6b
 3272 05d5 99020000 		.4byte	.LLST20
 3273 05d9 15       		.uleb128 0x15
 3274 05da 90030000 		.4byte	.LASF63
 3275 05de 01       		.byte	0x1
 3276 05df 920B     		.2byte	0xb92
 3277 05e1 6B000000 		.4byte	0x6b
 3278 05e5 BA020000 		.4byte	.LLST21
 3279 05e9 00       		.byte	0
 3280 05ea 13       		.uleb128 0x13
 3281 05eb 25060000 		.4byte	.LASF66
 3282 05ef 01       		.byte	0x1
 3283 05f0 A50B     		.2byte	0xba5
 3284 05f2 00000000 		.4byte	.LFB24
 3285 05f6 14000000 		.4byte	.LFE24-.LFB24
 3286 05fa 01       		.uleb128 0x1
 3287 05fb 9C       		.byte	0x9c
 3288 05fc 11060000 		.4byte	0x611
 3289 0600 19       		.uleb128 0x19
 3290 0601 89030000 		.4byte	.LASF33
 3291 0605 01       		.byte	0x1
 3292 0606 A50B     		.2byte	0xba5
 3293 0608 6B000000 		.4byte	0x6b
 3294 060c DB020000 		.4byte	.LLST22
 3295 0610 00       		.byte	0
 3296 0611 1B       		.uleb128 0x1b
 3297 0612 0A010000 		.4byte	.LASF67
 3298 0616 01       		.byte	0x1
 3299 0617 B70B     		.2byte	0xbb7
 3300 0619 6B000000 		.4byte	0x6b
 3301 061d 00000000 		.4byte	.LFB25
 3302 0621 18000000 		.4byte	.LFE25-.LFB25
 3303 0625 01       		.uleb128 0x1
 3304 0626 9C       		.byte	0x9c
 3305 0627 3C060000 		.4byte	0x63c
 3306 062b 19       		.uleb128 0x19
 3307 062c 89030000 		.4byte	.LASF33
 3308 0630 01       		.byte	0x1
 3309 0631 B70B     		.2byte	0xbb7
 3310 0633 6B000000 		.4byte	0x6b
 3311 0637 FC020000 		.4byte	.LLST23
 3312 063b 00       		.byte	0
 3313 063c 13       		.uleb128 0x13
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 128


 3314 063d 94010000 		.4byte	.LASF68
 3315 0641 01       		.byte	0x1
 3316 0642 C70B     		.2byte	0xbc7
 3317 0644 00000000 		.4byte	.LFB26
 3318 0648 14000000 		.4byte	.LFE26-.LFB26
 3319 064c 01       		.uleb128 0x1
 3320 064d 9C       		.byte	0x9c
 3321 064e 63060000 		.4byte	0x663
 3322 0652 19       		.uleb128 0x19
 3323 0653 89030000 		.4byte	.LASF33
 3324 0657 01       		.byte	0x1
 3325 0658 C70B     		.2byte	0xbc7
 3326 065a 6B000000 		.4byte	0x6b
 3327 065e 1D030000 		.4byte	.LLST24
 3328 0662 00       		.byte	0
 3329 0663 13       		.uleb128 0x13
 3330 0664 0F030000 		.4byte	.LASF69
 3331 0668 01       		.byte	0x1
 3332 0669 D50B     		.2byte	0xbd5
 3333 066b 00000000 		.4byte	.LFB27
 3334 066f 14000000 		.4byte	.LFE27-.LFB27
 3335 0673 01       		.uleb128 0x1
 3336 0674 9C       		.byte	0x9c
 3337 0675 8A060000 		.4byte	0x68a
 3338 0679 19       		.uleb128 0x19
 3339 067a 89030000 		.4byte	.LASF33
 3340 067e 01       		.byte	0x1
 3341 067f D50B     		.2byte	0xbd5
 3342 0681 6B000000 		.4byte	0x6b
 3343 0685 3E030000 		.4byte	.LLST25
 3344 0689 00       		.byte	0
 3345 068a 13       		.uleb128 0x13
 3346 068b 60040000 		.4byte	.LASF70
 3347 068f 01       		.byte	0x1
 3348 0690 E40B     		.2byte	0xbe4
 3349 0692 00000000 		.4byte	.LFB28
 3350 0696 14000000 		.4byte	.LFE28-.LFB28
 3351 069a 01       		.uleb128 0x1
 3352 069b 9C       		.byte	0x9c
 3353 069c B1060000 		.4byte	0x6b1
 3354 06a0 19       		.uleb128 0x19
 3355 06a1 89030000 		.4byte	.LASF33
 3356 06a5 01       		.byte	0x1
 3357 06a6 E40B     		.2byte	0xbe4
 3358 06a8 6B000000 		.4byte	0x6b
 3359 06ac 5F030000 		.4byte	.LLST26
 3360 06b0 00       		.byte	0
 3361 06b1 13       		.uleb128 0x13
 3362 06b2 E2050000 		.4byte	.LASF71
 3363 06b6 01       		.byte	0x1
 3364 06b7 F30B     		.2byte	0xbf3
 3365 06b9 00000000 		.4byte	.LFB29
 3366 06bd 04000000 		.4byte	.LFE29-.LFB29
 3367 06c1 01       		.uleb128 0x1
 3368 06c2 9C       		.byte	0x9c
 3369 06c3 D6060000 		.4byte	0x6d6
 3370 06c7 1A       		.uleb128 0x1a
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 129


 3371 06c8 14060000 		.4byte	.LASF53
 3372 06cc 01       		.byte	0x1
 3373 06cd F30B     		.2byte	0xbf3
 3374 06cf 6B000000 		.4byte	0x6b
 3375 06d3 01       		.uleb128 0x1
 3376 06d4 50       		.byte	0x50
 3377 06d5 00       		.byte	0
 3378 06d6 1C       		.uleb128 0x1c
 3379 06d7 E1000000 		.4byte	.LASF72
 3380 06db 01       		.byte	0x1
 3381 06dc 0B0C     		.2byte	0xc0b
 3382 06de 00000000 		.4byte	.LFB30
 3383 06e2 18000000 		.4byte	.LFE30-.LFB30
 3384 06e6 01       		.uleb128 0x1
 3385 06e7 9C       		.byte	0x9c
 3386 06e8 13       		.uleb128 0x13
 3387 06e9 E7060000 		.4byte	.LASF73
 3388 06ed 01       		.byte	0x1
 3389 06ee 1F0C     		.2byte	0xc1f
 3390 06f0 00000000 		.4byte	.LFB31
 3391 06f4 2C000000 		.4byte	.LFE31-.LFB31
 3392 06f8 01       		.uleb128 0x1
 3393 06f9 9C       		.byte	0x9c
 3394 06fa 21070000 		.4byte	0x721
 3395 06fe 19       		.uleb128 0x19
 3396 06ff B8050000 		.4byte	.LASF74
 3397 0703 01       		.byte	0x1
 3398 0704 1F0C     		.2byte	0xc1f
 3399 0706 83000000 		.4byte	0x83
 3400 070a 80030000 		.4byte	.LLST27
 3401 070e 17       		.uleb128 0x17
 3402 070f 14000000 		.4byte	.LVL66
 3403 0713 C90D0000 		.4byte	0xdc9
 3404 0717 17       		.uleb128 0x17
 3405 0718 22000000 		.4byte	.LVL68
 3406 071c C90D0000 		.4byte	0xdc9
 3407 0720 00       		.byte	0
 3408 0721 1F       		.uleb128 0x1f
 3409 0722 F3000000 		.4byte	0xf3
 3410 0726 00000000 		.4byte	.LFB3
 3411 072a E4000000 		.4byte	.LFE3-.LFB3
 3412 072e 01       		.uleb128 0x1
 3413 072f 9C       		.byte	0x9c
 3414 0730 F5070000 		.4byte	0x7f5
 3415 0734 25       		.uleb128 0x25
 3416 0735 FF000000 		.4byte	0xff
 3417 0739 25       		.uleb128 0x25
 3418 073a 08010000 		.4byte	0x108
 3419 073e 25       		.uleb128 0x25
 3420 073f 13010000 		.4byte	0x113
 3421 0743 25       		.uleb128 0x25
 3422 0744 1E010000 		.4byte	0x11e
 3423 0748 26       		.uleb128 0x26
 3424 0749 29010000 		.4byte	0x129
 3425 074d 00       		.byte	0
 3426 074e 25       		.uleb128 0x25
 3427 074f 34010000 		.4byte	0x134
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 130


 3428 0753 27       		.uleb128 0x27
 3429 0754 0C000000 		.4byte	.LBB15
 3430 0758 AC000000 		.4byte	.LBE15-.LBB15
 3431 075c EB070000 		.4byte	0x7eb
 3432 0760 28       		.uleb128 0x28
 3433 0761 FF000000 		.4byte	0xff
 3434 0765 9E030000 		.4byte	.LLST28
 3435 0769 28       		.uleb128 0x28
 3436 076a 08010000 		.4byte	0x108
 3437 076e D5030000 		.4byte	.LLST29
 3438 0772 28       		.uleb128 0x28
 3439 0773 13010000 		.4byte	0x113
 3440 0777 0B040000 		.4byte	.LLST30
 3441 077b 28       		.uleb128 0x28
 3442 077c 1E010000 		.4byte	0x11e
 3443 0780 1F040000 		.4byte	.LLST31
 3444 0784 28       		.uleb128 0x28
 3445 0785 29010000 		.4byte	0x129
 3446 0789 68040000 		.4byte	.LLST32
 3447 078d 22       		.uleb128 0x22
 3448 078e 34010000 		.4byte	0x134
 3449 0792 02       		.uleb128 0x2
 3450 0793 91       		.byte	0x91
 3451 0794 64       		.sleb128 -28
 3452 0795 17       		.uleb128 0x17
 3453 0796 10000000 		.4byte	.LVL72
 3454 079a B30D0000 		.4byte	0xdb3
 3455 079e 29       		.uleb128 0x29
 3456 079f 78000000 		.4byte	.LVL86
 3457 07a3 D40D0000 		.4byte	0xdd4
 3458 07a7 B2070000 		.4byte	0x7b2
 3459 07ab 2A       		.uleb128 0x2a
 3460 07ac 01       		.uleb128 0x1
 3461 07ad 50       		.byte	0x50
 3462 07ae 02       		.uleb128 0x2
 3463 07af 08       		.byte	0x8
 3464 07b0 30       		.byte	0x30
 3465 07b1 00       		.byte	0
 3466 07b2 29       		.uleb128 0x29
 3467 07b3 94000000 		.4byte	.LVL89
 3468 07b7 E8060000 		.4byte	0x6e8
 3469 07bb C5070000 		.4byte	0x7c5
 3470 07bf 2A       		.uleb128 0x2a
 3471 07c0 01       		.uleb128 0x1
 3472 07c1 50       		.byte	0x50
 3473 07c2 01       		.uleb128 0x1
 3474 07c3 31       		.byte	0x31
 3475 07c4 00       		.byte	0
 3476 07c5 29       		.uleb128 0x29
 3477 07c6 A4000000 		.4byte	.LVL90
 3478 07ca E8060000 		.4byte	0x6e8
 3479 07ce D8070000 		.4byte	0x7d8
 3480 07d2 2A       		.uleb128 0x2a
 3481 07d3 01       		.uleb128 0x1
 3482 07d4 50       		.byte	0x50
 3483 07d5 01       		.uleb128 0x1
 3484 07d6 31       		.byte	0x31
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 131


 3485 07d7 00       		.byte	0
 3486 07d8 2B       		.uleb128 0x2b
 3487 07d9 B8000000 		.4byte	.LVL91
 3488 07dd BE0D0000 		.4byte	0xdbe
 3489 07e1 2A       		.uleb128 0x2a
 3490 07e2 01       		.uleb128 0x1
 3491 07e3 50       		.byte	0x50
 3492 07e4 04       		.uleb128 0x4
 3493 07e5 91       		.byte	0x91
 3494 07e6 5C       		.sleb128 -36
 3495 07e7 94       		.byte	0x94
 3496 07e8 01       		.byte	0x1
 3497 07e9 00       		.byte	0
 3498 07ea 00       		.byte	0
 3499 07eb 17       		.uleb128 0x17
 3500 07ec 08000000 		.4byte	.LVL71
 3501 07f0 DF0D0000 		.4byte	0xddf
 3502 07f4 00       		.byte	0
 3503 07f5 13       		.uleb128 0x13
 3504 07f6 99030000 		.4byte	.LASF75
 3505 07fa 01       		.byte	0x1
 3506 07fb 3103     		.2byte	0x331
 3507 07fd 00000000 		.4byte	.LFB10
 3508 0801 80000000 		.4byte	.LFE10-.LFB10
 3509 0805 01       		.uleb128 0x1
 3510 0806 9C       		.byte	0x9c
 3511 0807 8E080000 		.4byte	0x88e
 3512 080b 19       		.uleb128 0x19
 3513 080c 32010000 		.4byte	.LASF21
 3514 0810 01       		.byte	0x1
 3515 0811 3103     		.2byte	0x331
 3516 0813 83000000 		.4byte	0x83
 3517 0817 93040000 		.4byte	.LLST33
 3518 081b 1E       		.uleb128 0x1e
 3519 081c B9000000 		.4byte	.LASF76
 3520 0820 01       		.byte	0x1
 3521 0821 3403     		.2byte	0x334
 3522 0823 9E080000 		.4byte	0x89e
 3523 0827 02       		.uleb128 0x2
 3524 0828 91       		.byte	0x91
 3525 0829 58       		.sleb128 -40
 3526 082a 1E       		.uleb128 0x1e
 3527 082b A1010000 		.4byte	.LASF77
 3528 082f 01       		.byte	0x1
 3529 0830 3503     		.2byte	0x335
 3530 0832 B3080000 		.4byte	0x8b3
 3531 0836 02       		.uleb128 0x2
 3532 0837 91       		.byte	0x91
 3533 0838 60       		.sleb128 -32
 3534 0839 15       		.uleb128 0x15
 3535 083a 83010000 		.4byte	.LASF78
 3536 083e 01       		.byte	0x1
 3537 083f 3E03     		.2byte	0x33e
 3538 0841 83000000 		.4byte	0x83
 3539 0845 BF040000 		.4byte	.LLST34
 3540 0849 15       		.uleb128 0x15
 3541 084a 43010000 		.4byte	.LASF22
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 132


 3542 084e 01       		.byte	0x1
 3543 084f 4503     		.2byte	0x345
 3544 0851 6B000000 		.4byte	0x6b
 3545 0855 EA040000 		.4byte	.LLST35
 3546 0859 17       		.uleb128 0x17
 3547 085a 0A000000 		.4byte	.LVL93
 3548 085e B30D0000 		.4byte	0xdb3
 3549 0862 17       		.uleb128 0x17
 3550 0863 10000000 		.4byte	.LVL95
 3551 0867 4B020000 		.4byte	0x24b
 3552 086b 17       		.uleb128 0x17
 3553 086c 1A000000 		.4byte	.LVL97
 3554 0870 F7010000 		.4byte	0x1f7
 3555 0874 17       		.uleb128 0x17
 3556 0875 56000000 		.4byte	.LVL100
 3557 0879 F3000000 		.4byte	0xf3
 3558 087d 2B       		.uleb128 0x2b
 3559 087e 5C000000 		.4byte	.LVL101
 3560 0882 BE0D0000 		.4byte	0xdbe
 3561 0886 2A       		.uleb128 0x2a
 3562 0887 01       		.uleb128 0x1
 3563 0888 50       		.byte	0x50
 3564 0889 02       		.uleb128 0x2
 3565 088a 75       		.byte	0x75
 3566 088b 00       		.sleb128 0
 3567 088c 00       		.byte	0
 3568 088d 00       		.byte	0
 3569 088e 2C       		.uleb128 0x2c
 3570 088f C1000000 		.4byte	0xc1
 3571 0893 9E080000 		.4byte	0x89e
 3572 0897 2D       		.uleb128 0x2d
 3573 0898 E0000000 		.4byte	0xe0
 3574 089c 01       		.byte	0x1
 3575 089d 00       		.byte	0
 3576 089e 05       		.uleb128 0x5
 3577 089f 8E080000 		.4byte	0x88e
 3578 08a3 2C       		.uleb128 0x2c
 3579 08a4 C1000000 		.4byte	0xc1
 3580 08a8 B3080000 		.4byte	0x8b3
 3581 08ac 2D       		.uleb128 0x2d
 3582 08ad E0000000 		.4byte	0xe0
 3583 08b1 03       		.byte	0x3
 3584 08b2 00       		.byte	0
 3585 08b3 05       		.uleb128 0x5
 3586 08b4 A3080000 		.4byte	0x8a3
 3587 08b8 13       		.uleb128 0x13
 3588 08b9 4D060000 		.4byte	.LASF79
 3589 08bd 01       		.byte	0x1
 3590 08be 360C     		.2byte	0xc36
 3591 08c0 00000000 		.4byte	.LFB32
 3592 08c4 14000000 		.4byte	.LFE32-.LFB32
 3593 08c8 01       		.uleb128 0x1
 3594 08c9 9C       		.byte	0x9c
 3595 08ca E8080000 		.4byte	0x8e8
 3596 08ce 19       		.uleb128 0x19
 3597 08cf CF070000 		.4byte	.LASF80
 3598 08d3 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 133


 3599 08d4 360C     		.2byte	0xc36
 3600 08d6 77000000 		.4byte	0x77
 3601 08da FD040000 		.4byte	.LLST36
 3602 08de 17       		.uleb128 0x17
 3603 08df 0C000000 		.4byte	.LVL105
 3604 08e3 C90D0000 		.4byte	0xdc9
 3605 08e7 00       		.byte	0
 3606 08e8 13       		.uleb128 0x13
 3607 08e9 88050000 		.4byte	.LASF81
 3608 08ed 01       		.byte	0x1
 3609 08ee 660A     		.2byte	0xa66
 3610 08f0 00000000 		.4byte	.LFB11
 3611 08f4 44000000 		.4byte	.LFE11-.LFB11
 3612 08f8 01       		.uleb128 0x1
 3613 08f9 9C       		.byte	0x9c
 3614 08fa 30090000 		.4byte	0x930
 3615 08fe 19       		.uleb128 0x19
 3616 08ff D8050000 		.4byte	.LASF82
 3617 0903 01       		.byte	0x1
 3618 0904 660A     		.2byte	0xa66
 3619 0906 83000000 		.4byte	0x83
 3620 090a 1E050000 		.4byte	.LLST37
 3621 090e 2E       		.uleb128 0x2e
 3622 090f 40010000 		.4byte	0x140
 3623 0913 2C000000 		.4byte	.LBB16
 3624 0917 00000000 		.4byte	.Ldebug_ranges0+0
 3625 091b 01       		.byte	0x1
 3626 091c 760A     		.2byte	0xa76
 3627 091e 2B       		.uleb128 0x2b
 3628 091f 2C000000 		.4byte	.LVL108
 3629 0923 B8080000 		.4byte	0x8b8
 3630 0927 2A       		.uleb128 0x2a
 3631 0928 01       		.uleb128 0x1
 3632 0929 50       		.byte	0x50
 3633 092a 03       		.uleb128 0x3
 3634 092b 0A       		.byte	0xa
 3635 092c E803     		.2byte	0x3e8
 3636 092e 00       		.byte	0
 3637 092f 00       		.byte	0
 3638 0930 2F       		.uleb128 0x2f
 3639 0931 37010000 		.4byte	.LASF83
 3640 0935 01       		.byte	0x1
 3641 0936 440C     		.2byte	0xc44
 3642 0938 00000000 		.4byte	.LFB33
 3643 093c 48000000 		.4byte	.LFE33-.LFB33
 3644 0940 01       		.uleb128 0x1
 3645 0941 9C       		.byte	0x9c
 3646 0942 57090000 		.4byte	0x957
 3647 0946 19       		.uleb128 0x19
 3648 0947 32010000 		.4byte	.LASF21
 3649 094b 01       		.byte	0x1
 3650 094c 440C     		.2byte	0xc44
 3651 094e 83000000 		.4byte	0x83
 3652 0952 3F050000 		.4byte	.LLST38
 3653 0956 00       		.byte	0
 3654 0957 2F       		.uleb128 0x2f
 3655 0958 5B020000 		.4byte	.LASF84
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 134


 3656 095c 01       		.byte	0x1
 3657 095d 810C     		.2byte	0xc81
 3658 095f 00000000 		.4byte	.LFB35
 3659 0963 54000000 		.4byte	.LFE35-.LFB35
 3660 0967 01       		.uleb128 0x1
 3661 0968 9C       		.byte	0x9c
 3662 0969 160A0000 		.4byte	0xa16
 3663 096d 14       		.uleb128 0x14
 3664 096e 6900     		.ascii	"i\000"
 3665 0970 01       		.byte	0x1
 3666 0971 830C     		.2byte	0xc83
 3667 0973 83000000 		.4byte	0x83
 3668 0977 60050000 		.4byte	.LLST39
 3669 097b 30       		.uleb128 0x30
 3670 097c 49010000 		.4byte	0x149
 3671 0980 04000000 		.4byte	.LBB30
 3672 0984 18000000 		.4byte	.Ldebug_ranges0+0x18
 3673 0988 01       		.byte	0x1
 3674 0989 8D0C     		.2byte	0xc8d
 3675 098b A8090000 		.4byte	0x9a8
 3676 098f 20       		.uleb128 0x20
 3677 0990 56010000 		.4byte	0x156
 3678 0994 A4050000 		.4byte	.LLST40
 3679 0998 31       		.uleb128 0x31
 3680 0999 18000000 		.4byte	.Ldebug_ranges0+0x18
 3681 099d 20       		.uleb128 0x20
 3682 099e 56010000 		.4byte	0x156
 3683 09a2 A4050000 		.4byte	.LLST40
 3684 09a6 00       		.byte	0
 3685 09a7 00       		.byte	0
 3686 09a8 30       		.uleb128 0x30
 3687 09a9 9E010000 		.4byte	0x19e
 3688 09ad 08000000 		.4byte	.LBB37
 3689 09b1 38000000 		.4byte	.Ldebug_ranges0+0x38
 3690 09b5 01       		.byte	0x1
 3691 09b6 8A0C     		.2byte	0xc8a
 3692 09b8 E7090000 		.4byte	0x9e7
 3693 09bc 20       		.uleb128 0x20
 3694 09bd BB010000 		.4byte	0x1bb
 3695 09c1 B8050000 		.4byte	.LLST42
 3696 09c5 20       		.uleb128 0x20
 3697 09c6 AF010000 		.4byte	0x1af
 3698 09ca D0050000 		.4byte	.LLST43
 3699 09ce 31       		.uleb128 0x31
 3700 09cf 38000000 		.4byte	.Ldebug_ranges0+0x38
 3701 09d3 28       		.uleb128 0x28
 3702 09d4 C7010000 		.4byte	0x1c7
 3703 09d8 E4050000 		.4byte	.LLST44
 3704 09dc 23       		.uleb128 0x23
 3705 09dd D3010000 		.4byte	0x1d3
 3706 09e1 00000020 		.4byte	0x20000000
 3707 09e5 00       		.byte	0
 3708 09e6 00       		.byte	0
 3709 09e7 32       		.uleb128 0x32
 3710 09e8 84010000 		.4byte	0x184
 3711 09ec 2C000000 		.4byte	.LBB45
 3712 09f0 04000000 		.4byte	.LBE45-.LBB45
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 135


 3713 09f4 01       		.byte	0x1
 3714 09f5 900C     		.2byte	0xc90
 3715 09f7 050A0000 		.4byte	0xa05
 3716 09fb 20       		.uleb128 0x20
 3717 09fc 91010000 		.4byte	0x191
 3718 0a00 07060000 		.4byte	.LLST45
 3719 0a04 00       		.byte	0
 3720 0a05 33       		.uleb128 0x33
 3721 0a06 7B010000 		.4byte	0x17b
 3722 0a0a 30000000 		.4byte	.LBB47
 3723 0a0e 04000000 		.4byte	.LBE47-.LBB47
 3724 0a12 01       		.byte	0x1
 3725 0a13 910C     		.2byte	0xc91
 3726 0a15 00       		.byte	0
 3727 0a16 1C       		.uleb128 0x1c
 3728 0a17 71070000 		.4byte	.LASF85
 3729 0a1b 01       		.byte	0x1
 3730 0a1c B00C     		.2byte	0xcb0
 3731 0a1e 00000000 		.4byte	.LFB37
 3732 0a22 10000000 		.4byte	.LFE37-.LFB37
 3733 0a26 01       		.uleb128 0x1
 3734 0a27 9C       		.byte	0x9c
 3735 0a28 1C       		.uleb128 0x1c
 3736 0a29 F1000000 		.4byte	.LASF86
 3737 0a2d 01       		.byte	0x1
 3738 0a2e C00C     		.2byte	0xcc0
 3739 0a30 00000000 		.4byte	.LFB38
 3740 0a34 10000000 		.4byte	.LFE38-.LFB38
 3741 0a38 01       		.uleb128 0x1
 3742 0a39 9C       		.byte	0x9c
 3743 0a3a 13       		.uleb128 0x13
 3744 0a3b 83060000 		.4byte	.LASF87
 3745 0a3f 01       		.byte	0x1
 3746 0a40 9F0C     		.2byte	0xc9f
 3747 0a42 00000000 		.4byte	.LFB36
 3748 0a46 18000000 		.4byte	.LFE36-.LFB36
 3749 0a4a 01       		.uleb128 0x1
 3750 0a4b 9C       		.byte	0x9c
 3751 0a4c 5A0A0000 		.4byte	0xa5a
 3752 0a50 17       		.uleb128 0x17
 3753 0a51 06000000 		.4byte	.LVL123
 3754 0a55 280A0000 		.4byte	0xa28
 3755 0a59 00       		.byte	0
 3756 0a5a 13       		.uleb128 0x13
 3757 0a5b FF030000 		.4byte	.LASF88
 3758 0a5f 01       		.byte	0x1
 3759 0a60 640C     		.2byte	0xc64
 3760 0a62 00000000 		.4byte	.LFB34
 3761 0a66 1C000000 		.4byte	.LFE34-.LFB34
 3762 0a6a 01       		.uleb128 0x1
 3763 0a6b 9C       		.byte	0x9c
 3764 0a6c 830A0000 		.4byte	0xa83
 3765 0a70 17       		.uleb128 0x17
 3766 0a71 0E000000 		.4byte	.LVL124
 3767 0a75 57090000 		.4byte	0x957
 3768 0a79 17       		.uleb128 0x17
 3769 0a7a 16000000 		.4byte	.LVL125
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 136


 3770 0a7e 3A0A0000 		.4byte	0xa3a
 3771 0a82 00       		.byte	0
 3772 0a83 1C       		.uleb128 0x1c
 3773 0a84 07070000 		.4byte	.LASF89
 3774 0a88 01       		.byte	0x1
 3775 0a89 D00C     		.2byte	0xcd0
 3776 0a8b 00000000 		.4byte	.LFB39
 3777 0a8f 10000000 		.4byte	.LFE39-.LFB39
 3778 0a93 01       		.uleb128 0x1
 3779 0a94 9C       		.byte	0x9c
 3780 0a95 1F       		.uleb128 0x1f
 3781 0a96 84010000 		.4byte	0x184
 3782 0a9a 00000000 		.4byte	.LFB40
 3783 0a9e 10000000 		.4byte	.LFE40-.LFB40
 3784 0aa2 01       		.uleb128 0x1
 3785 0aa3 9C       		.byte	0x9c
 3786 0aa4 B20A0000 		.4byte	0xab2
 3787 0aa8 20       		.uleb128 0x20
 3788 0aa9 91010000 		.4byte	0x191
 3789 0aad 1A060000 		.4byte	.LLST46
 3790 0ab1 00       		.byte	0
 3791 0ab2 18       		.uleb128 0x18
 3792 0ab3 5A010000 		.4byte	.LASF90
 3793 0ab7 01       		.byte	0x1
 3794 0ab8 F10C     		.2byte	0xcf1
 3795 0aba 83000000 		.4byte	0x83
 3796 0abe 00000000 		.4byte	.LFB41
 3797 0ac2 10000000 		.4byte	.LFE41-.LFB41
 3798 0ac6 01       		.uleb128 0x1
 3799 0ac7 9C       		.byte	0x9c
 3800 0ac8 18       		.uleb128 0x18
 3801 0ac9 3B050000 		.4byte	.LASF91
 3802 0acd 01       		.byte	0x1
 3803 0ace 010D     		.2byte	0xd01
 3804 0ad0 83000000 		.4byte	0x83
 3805 0ad4 00000000 		.4byte	.LFB42
 3806 0ad8 10000000 		.4byte	.LFE42-.LFB42
 3807 0adc 01       		.uleb128 0x1
 3808 0add 9C       		.byte	0x9c
 3809 0ade 1F       		.uleb128 0x1f
 3810 0adf 49010000 		.4byte	0x149
 3811 0ae3 00000000 		.4byte	.LFB43
 3812 0ae7 18000000 		.4byte	.LFE43-.LFB43
 3813 0aeb 01       		.uleb128 0x1
 3814 0aec 9C       		.byte	0x9c
 3815 0aed 080B0000 		.4byte	0xb08
 3816 0af1 21       		.uleb128 0x21
 3817 0af2 56010000 		.4byte	0x156
 3818 0af6 01       		.uleb128 0x1
 3819 0af7 50       		.byte	0x50
 3820 0af8 31       		.uleb128 0x31
 3821 0af9 58000000 		.4byte	.Ldebug_ranges0+0x58
 3822 0afd 20       		.uleb128 0x20
 3823 0afe 56010000 		.4byte	0x156
 3824 0b02 3B060000 		.4byte	.LLST47
 3825 0b06 00       		.byte	0
 3826 0b07 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 137


 3827 0b08 18       		.uleb128 0x18
 3828 0b09 EF060000 		.4byte	.LASF92
 3829 0b0d 01       		.byte	0x1
 3830 0b0e 3A0D     		.2byte	0xd3a
 3831 0b10 83000000 		.4byte	0x83
 3832 0b14 00000000 		.4byte	.LFB44
 3833 0b18 10000000 		.4byte	.LFE44-.LFB44
 3834 0b1c 01       		.uleb128 0x1
 3835 0b1d 9C       		.byte	0x9c
 3836 0b1e 18       		.uleb128 0x18
 3837 0b1f 89020000 		.4byte	.LASF93
 3838 0b23 01       		.byte	0x1
 3839 0b24 510D     		.2byte	0xd51
 3840 0b26 83000000 		.4byte	0x83
 3841 0b2a 00000000 		.4byte	.LFB45
 3842 0b2e 10000000 		.4byte	.LFE45-.LFB45
 3843 0b32 01       		.uleb128 0x1
 3844 0b33 9C       		.byte	0x9c
 3845 0b34 34       		.uleb128 0x34
 3846 0b35 63010000 		.4byte	0x163
 3847 0b39 00000000 		.4byte	.LFB49
 3848 0b3d 24000000 		.4byte	.LFE49-.LFB49
 3849 0b41 01       		.uleb128 0x1
 3850 0b42 9C       		.byte	0x9c
 3851 0b43 690B0000 		.4byte	0xb69
 3852 0b47 25       		.uleb128 0x25
 3853 0b48 70010000 		.4byte	0x170
 3854 0b4c 27       		.uleb128 0x27
 3855 0b4d 0C000000 		.4byte	.LBB57
 3856 0b51 10000000 		.4byte	.LBE57-.LBB57
 3857 0b55 5F0B0000 		.4byte	0xb5f
 3858 0b59 25       		.uleb128 0x25
 3859 0b5a 70010000 		.4byte	0x170
 3860 0b5e 00       		.byte	0
 3861 0b5f 17       		.uleb128 0x17
 3862 0b60 06000000 		.4byte	.LVL131
 3863 0b64 1E0B0000 		.4byte	0xb1e
 3864 0b68 00       		.byte	0
 3865 0b69 1D       		.uleb128 0x1d
 3866 0b6a 7B010000 		.4byte	0x17b
 3867 0b6e 00000000 		.4byte	.LFB46
 3868 0b72 0C000000 		.4byte	.LFE46-.LFB46
 3869 0b76 01       		.uleb128 0x1
 3870 0b77 9C       		.byte	0x9c
 3871 0b78 1B       		.uleb128 0x1b
 3872 0b79 AA060000 		.4byte	.LASF94
 3873 0b7d 01       		.byte	0x1
 3874 0b7e 810D     		.2byte	0xd81
 3875 0b80 E7000000 		.4byte	0xe7
 3876 0b84 00000000 		.4byte	.LFB47
 3877 0b88 10000000 		.4byte	.LFE47-.LFB47
 3878 0b8c 01       		.uleb128 0x1
 3879 0b8d 9C       		.byte	0x9c
 3880 0b8e BF0B0000 		.4byte	0xbbf
 3881 0b92 19       		.uleb128 0x19
 3882 0b93 89030000 		.4byte	.LASF33
 3883 0b97 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 138


 3884 0b98 810D     		.2byte	0xd81
 3885 0b9a 83000000 		.4byte	0x83
 3886 0b9e 4F060000 		.4byte	.LLST48
 3887 0ba2 1A       		.uleb128 0x1a
 3888 0ba3 21050000 		.4byte	.LASF95
 3889 0ba7 01       		.byte	0x1
 3890 0ba8 810D     		.2byte	0xd81
 3891 0baa E7000000 		.4byte	0xe7
 3892 0bae 01       		.uleb128 0x1
 3893 0baf 51       		.byte	0x51
 3894 0bb0 1E       		.uleb128 0x1e
 3895 0bb1 8D000000 		.4byte	.LASF96
 3896 0bb5 01       		.byte	0x1
 3897 0bb6 830D     		.2byte	0xd83
 3898 0bb8 E7000000 		.4byte	0xe7
 3899 0bbc 01       		.uleb128 0x1
 3900 0bbd 50       		.byte	0x50
 3901 0bbe 00       		.byte	0
 3902 0bbf 1B       		.uleb128 0x1b
 3903 0bc0 1F030000 		.4byte	.LASF97
 3904 0bc4 01       		.byte	0x1
 3905 0bc5 990D     		.2byte	0xd99
 3906 0bc7 E7000000 		.4byte	0xe7
 3907 0bcb 00000000 		.4byte	.LFB48
 3908 0bcf 0C000000 		.4byte	.LFE48-.LFB48
 3909 0bd3 01       		.uleb128 0x1
 3910 0bd4 9C       		.byte	0x9c
 3911 0bd5 EA0B0000 		.4byte	0xbea
 3912 0bd9 19       		.uleb128 0x19
 3913 0bda 89030000 		.4byte	.LASF33
 3914 0bde 01       		.byte	0x1
 3915 0bdf 990D     		.2byte	0xd99
 3916 0be1 83000000 		.4byte	0x83
 3917 0be5 70060000 		.4byte	.LLST49
 3918 0be9 00       		.byte	0
 3919 0bea 13       		.uleb128 0x13
 3920 0beb 7B020000 		.4byte	.LASF98
 3921 0bef 01       		.byte	0x1
 3922 0bf0 C60D     		.2byte	0xdc6
 3923 0bf2 00000000 		.4byte	.LFB50
 3924 0bf6 74000000 		.4byte	.LFE50-.LFB50
 3925 0bfa 01       		.uleb128 0x1
 3926 0bfb 9C       		.byte	0x9c
 3927 0bfc 0F0C0000 		.4byte	0xc0f
 3928 0c00 1A       		.uleb128 0x1a
 3929 0c01 D2060000 		.4byte	.LASF99
 3930 0c05 01       		.byte	0x1
 3931 0c06 C60D     		.2byte	0xdc6
 3932 0c08 0F0C0000 		.4byte	0xc0f
 3933 0c0c 01       		.uleb128 0x1
 3934 0c0d 50       		.byte	0x50
 3935 0c0e 00       		.byte	0
 3936 0c0f 06       		.uleb128 0x6
 3937 0c10 04       		.byte	0x4
 3938 0c11 83000000 		.4byte	0x83
 3939 0c15 13       		.uleb128 0x13
 3940 0c16 E9050000 		.4byte	.LASF100
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 139


 3941 0c1a 01       		.byte	0x1
 3942 0c1b F30D     		.2byte	0xdf3
 3943 0c1d 00000000 		.4byte	.LFB51
 3944 0c21 20000000 		.4byte	.LFE51-.LFB51
 3945 0c25 01       		.uleb128 0x1
 3946 0c26 9C       		.byte	0x9c
 3947 0c27 4C0C0000 		.4byte	0xc4c
 3948 0c2b 19       		.uleb128 0x19
 3949 0c2c 1B040000 		.4byte	.LASF101
 3950 0c30 01       		.byte	0x1
 3951 0c31 F30D     		.2byte	0xdf3
 3952 0c33 83000000 		.4byte	0x83
 3953 0c37 91060000 		.4byte	.LLST50
 3954 0c3b 15       		.uleb128 0x15
 3955 0c3c 5B030000 		.4byte	.LASF23
 3956 0c40 01       		.byte	0x1
 3957 0c41 F50D     		.2byte	0xdf5
 3958 0c43 83000000 		.4byte	0x83
 3959 0c47 B2060000 		.4byte	.LLST51
 3960 0c4b 00       		.byte	0
 3961 0c4c 13       		.uleb128 0x13
 3962 0c4d AE030000 		.4byte	.LASF102
 3963 0c51 01       		.byte	0x1
 3964 0c52 0F0E     		.2byte	0xe0f
 3965 0c54 00000000 		.4byte	.LFB52
 3966 0c58 20000000 		.4byte	.LFE52-.LFB52
 3967 0c5c 01       		.uleb128 0x1
 3968 0c5d 9C       		.byte	0x9c
 3969 0c5e 830C0000 		.4byte	0xc83
 3970 0c62 19       		.uleb128 0x19
 3971 0c63 1B040000 		.4byte	.LASF101
 3972 0c67 01       		.byte	0x1
 3973 0c68 0F0E     		.2byte	0xe0f
 3974 0c6a 83000000 		.4byte	0x83
 3975 0c6e D0060000 		.4byte	.LLST52
 3976 0c72 15       		.uleb128 0x15
 3977 0c73 5B030000 		.4byte	.LASF23
 3978 0c77 01       		.byte	0x1
 3979 0c78 110E     		.2byte	0xe11
 3980 0c7a 83000000 		.4byte	0x83
 3981 0c7e F1060000 		.4byte	.LLST53
 3982 0c82 00       		.byte	0
 3983 0c83 13       		.uleb128 0x13
 3984 0c84 53070000 		.4byte	.LASF103
 3985 0c88 01       		.byte	0x1
 3986 0c89 2B0E     		.2byte	0xe2b
 3987 0c8b 00000000 		.4byte	.LFB53
 3988 0c8f 20000000 		.4byte	.LFE53-.LFB53
 3989 0c93 01       		.uleb128 0x1
 3990 0c94 9C       		.byte	0x9c
 3991 0c95 BA0C0000 		.4byte	0xcba
 3992 0c99 19       		.uleb128 0x19
 3993 0c9a 1B040000 		.4byte	.LASF101
 3994 0c9e 01       		.byte	0x1
 3995 0c9f 2B0E     		.2byte	0xe2b
 3996 0ca1 83000000 		.4byte	0x83
 3997 0ca5 0F070000 		.4byte	.LLST54
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 140


 3998 0ca9 15       		.uleb128 0x15
 3999 0caa 5B030000 		.4byte	.LASF23
 4000 0cae 01       		.byte	0x1
 4001 0caf 2D0E     		.2byte	0xe2d
 4002 0cb1 83000000 		.4byte	0x83
 4003 0cb5 30070000 		.4byte	.LLST55
 4004 0cb9 00       		.byte	0
 4005 0cba 13       		.uleb128 0x13
 4006 0cbb 3C040000 		.4byte	.LASF104
 4007 0cbf 01       		.byte	0x1
 4008 0cc0 490E     		.2byte	0xe49
 4009 0cc2 00000000 		.4byte	.LFB54
 4010 0cc6 3C000000 		.4byte	.LFE54-.LFB54
 4011 0cca 01       		.uleb128 0x1
 4012 0ccb 9C       		.byte	0x9c
 4013 0ccc 010D0000 		.4byte	0xd01
 4014 0cd0 19       		.uleb128 0x19
 4015 0cd1 D1000000 		.4byte	.LASF105
 4016 0cd5 01       		.byte	0x1
 4017 0cd6 490E     		.2byte	0xe49
 4018 0cd8 83000000 		.4byte	0x83
 4019 0cdc 4E070000 		.4byte	.LLST56
 4020 0ce0 19       		.uleb128 0x19
 4021 0ce1 1B040000 		.4byte	.LASF101
 4022 0ce5 01       		.byte	0x1
 4023 0ce6 490E     		.2byte	0xe49
 4024 0ce8 83000000 		.4byte	0x83
 4025 0cec A1070000 		.4byte	.LLST57
 4026 0cf0 15       		.uleb128 0x15
 4027 0cf1 5B030000 		.4byte	.LASF23
 4028 0cf5 01       		.byte	0x1
 4029 0cf6 4B0E     		.2byte	0xe4b
 4030 0cf8 83000000 		.4byte	0x83
 4031 0cfc C2070000 		.4byte	.LLST58
 4032 0d00 00       		.byte	0
 4033 0d01 2C       		.uleb128 0x2c
 4034 0d02 E7000000 		.4byte	0xe7
 4035 0d06 110D0000 		.4byte	0xd11
 4036 0d0a 2D       		.uleb128 0x2d
 4037 0d0b E0000000 		.4byte	0xe0
 4038 0d0f 04       		.byte	0x4
 4039 0d10 00       		.byte	0
 4040 0d11 35       		.uleb128 0x35
 4041 0d12 BF060000 		.4byte	.LASF106
 4042 0d16 01       		.byte	0x1
 4043 0d17 22       		.byte	0x22
 4044 0d18 010D0000 		.4byte	0xd01
 4045 0d1c 05       		.uleb128 0x5
 4046 0d1d 03       		.byte	0x3
 4047 0d1e 00000000 		.4byte	CySysTickCallbacks
 4048 0d22 36       		.uleb128 0x36
 4049 0d23 4D050000 		.4byte	.LASF107
 4050 0d27 01       		.byte	0x1
 4051 0d28 1B       		.byte	0x1b
 4052 0d29 83000000 		.4byte	0x83
 4053 0d2d 05       		.uleb128 0x5
 4054 0d2e 03       		.byte	0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 141


 4055 0d2f 00000000 		.4byte	cydelayFreqHz
 4056 0d33 36       		.uleb128 0x36
 4057 0d34 C6010000 		.4byte	.LASF108
 4058 0d38 01       		.byte	0x1
 4059 0d39 1C       		.byte	0x1c
 4060 0d3a 83000000 		.4byte	0x83
 4061 0d3e 05       		.uleb128 0x5
 4062 0d3f 03       		.byte	0x3
 4063 0d40 00000000 		.4byte	cydelayFreqKhz
 4064 0d44 36       		.uleb128 0x36
 4065 0d45 31070000 		.4byte	.LASF109
 4066 0d49 01       		.byte	0x1
 4067 0d4a 1D       		.byte	0x1d
 4068 0d4b 6B000000 		.4byte	0x6b
 4069 0d4f 05       		.uleb128 0x5
 4070 0d50 03       		.byte	0x3
 4071 0d51 00000000 		.4byte	cydelayFreqMhz
 4072 0d55 36       		.uleb128 0x36
 4073 0d56 4E020000 		.4byte	.LASF110
 4074 0d5a 01       		.byte	0x1
 4075 0d5b 1E       		.byte	0x1e
 4076 0d5c 83000000 		.4byte	0x83
 4077 0d60 05       		.uleb128 0x5
 4078 0d61 03       		.byte	0x3
 4079 0d62 00000000 		.4byte	cydelay32kMs
 4080 0d66 36       		.uleb128 0x36
 4081 0d67 2B040000 		.4byte	.LASF111
 4082 0d6b 01       		.byte	0x1
 4083 0d6c 36       		.byte	0x36
 4084 0d6d 83000000 		.4byte	0x83
 4085 0d71 05       		.uleb128 0x5
 4086 0d72 03       		.byte	0x3
 4087 0d73 00000000 		.4byte	CySysTickInitVar
 4088 0d77 2C       		.uleb128 0x2c
 4089 0d78 870D0000 		.4byte	0xd87
 4090 0d7c 870D0000 		.4byte	0xd87
 4091 0d80 2D       		.uleb128 0x2d
 4092 0d81 E0000000 		.4byte	0xe0
 4093 0d85 2D       		.byte	0x2d
 4094 0d86 00       		.byte	0
 4095 0d87 37       		.uleb128 0x37
 4096 0d88 6B000000 		.4byte	0x6b
 4097 0d8c 36       		.uleb128 0x36
 4098 0d8d 2A050000 		.4byte	.LASF112
 4099 0d91 01       		.byte	0x1
 4100 0d92 3B       		.byte	0x3b
 4101 0d93 9D0D0000 		.4byte	0xd9d
 4102 0d97 05       		.uleb128 0x5
 4103 0d98 03       		.byte	0x3
 4104 0d99 00000000 		.4byte	cyImoFreqMhz2Reg
 4105 0d9d 37       		.uleb128 0x37
 4106 0d9e 770D0000 		.4byte	0xd77
 4107 0da2 36       		.uleb128 0x36
 4108 0da3 38000000 		.4byte	.LASF113
 4109 0da7 01       		.byte	0x1
 4110 0da8 58       		.byte	0x58
 4111 0da9 83000000 		.4byte	0x83
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 142


 4112 0dad 05       		.uleb128 0x5
 4113 0dae 03       		.byte	0x3
 4114 0daf 00000000 		.4byte	CySysClkPumpConfig
 4115 0db3 38       		.uleb128 0x38
 4116 0db4 F8020000 		.4byte	.LASF114
 4117 0db8 F8020000 		.4byte	.LASF114
 4118 0dbc 03       		.byte	0x3
 4119 0dbd F8       		.byte	0xf8
 4120 0dbe 38       		.uleb128 0x38
 4121 0dbf 72050000 		.4byte	.LASF115
 4122 0dc3 72050000 		.4byte	.LASF115
 4123 0dc7 03       		.byte	0x3
 4124 0dc8 F9       		.byte	0xf9
 4125 0dc9 38       		.uleb128 0x38
 4126 0dca C5050000 		.4byte	.LASF116
 4127 0dce C5050000 		.4byte	.LASF116
 4128 0dd2 03       		.byte	0x3
 4129 0dd3 EF       		.byte	0xef
 4130 0dd4 38       		.uleb128 0x38
 4131 0dd5 98070000 		.4byte	.LASF117
 4132 0dd9 98070000 		.4byte	.LASF117
 4133 0ddd 04       		.byte	0x4
 4134 0dde 52       		.byte	0x52
 4135 0ddf 38       		.uleb128 0x38
 4136 0de0 40070000 		.4byte	.LASF118
 4137 0de4 40070000 		.4byte	.LASF118
 4138 0de8 05       		.byte	0x5
 4139 0de9 54       		.byte	0x54
 4140 0dea 00       		.byte	0
 4141              		.section	.debug_abbrev,"",%progbits
 4142              	.Ldebug_abbrev0:
 4143 0000 01       		.uleb128 0x1
 4144 0001 11       		.uleb128 0x11
 4145 0002 01       		.byte	0x1
 4146 0003 25       		.uleb128 0x25
 4147 0004 0E       		.uleb128 0xe
 4148 0005 13       		.uleb128 0x13
 4149 0006 0B       		.uleb128 0xb
 4150 0007 03       		.uleb128 0x3
 4151 0008 0E       		.uleb128 0xe
 4152 0009 1B       		.uleb128 0x1b
 4153 000a 0E       		.uleb128 0xe
 4154 000b 55       		.uleb128 0x55
 4155 000c 17       		.uleb128 0x17
 4156 000d 11       		.uleb128 0x11
 4157 000e 01       		.uleb128 0x1
 4158 000f 10       		.uleb128 0x10
 4159 0010 17       		.uleb128 0x17
 4160 0011 00       		.byte	0
 4161 0012 00       		.byte	0
 4162 0013 02       		.uleb128 0x2
 4163 0014 24       		.uleb128 0x24
 4164 0015 00       		.byte	0
 4165 0016 0B       		.uleb128 0xb
 4166 0017 0B       		.uleb128 0xb
 4167 0018 3E       		.uleb128 0x3e
 4168 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 143


 4169 001a 03       		.uleb128 0x3
 4170 001b 0E       		.uleb128 0xe
 4171 001c 00       		.byte	0
 4172 001d 00       		.byte	0
 4173 001e 03       		.uleb128 0x3
 4174 001f 24       		.uleb128 0x24
 4175 0020 00       		.byte	0
 4176 0021 0B       		.uleb128 0xb
 4177 0022 0B       		.uleb128 0xb
 4178 0023 3E       		.uleb128 0x3e
 4179 0024 0B       		.uleb128 0xb
 4180 0025 03       		.uleb128 0x3
 4181 0026 08       		.uleb128 0x8
 4182 0027 00       		.byte	0
 4183 0028 00       		.byte	0
 4184 0029 04       		.uleb128 0x4
 4185 002a 16       		.uleb128 0x16
 4186 002b 00       		.byte	0
 4187 002c 03       		.uleb128 0x3
 4188 002d 0E       		.uleb128 0xe
 4189 002e 3A       		.uleb128 0x3a
 4190 002f 0B       		.uleb128 0xb
 4191 0030 3B       		.uleb128 0x3b
 4192 0031 05       		.uleb128 0x5
 4193 0032 49       		.uleb128 0x49
 4194 0033 13       		.uleb128 0x13
 4195 0034 00       		.byte	0
 4196 0035 00       		.byte	0
 4197 0036 05       		.uleb128 0x5
 4198 0037 35       		.uleb128 0x35
 4199 0038 00       		.byte	0
 4200 0039 49       		.uleb128 0x49
 4201 003a 13       		.uleb128 0x13
 4202 003b 00       		.byte	0
 4203 003c 00       		.byte	0
 4204 003d 06       		.uleb128 0x6
 4205 003e 0F       		.uleb128 0xf
 4206 003f 00       		.byte	0
 4207 0040 0B       		.uleb128 0xb
 4208 0041 0B       		.uleb128 0xb
 4209 0042 49       		.uleb128 0x49
 4210 0043 13       		.uleb128 0x13
 4211 0044 00       		.byte	0
 4212 0045 00       		.byte	0
 4213 0046 07       		.uleb128 0x7
 4214 0047 15       		.uleb128 0x15
 4215 0048 00       		.byte	0
 4216 0049 27       		.uleb128 0x27
 4217 004a 19       		.uleb128 0x19
 4218 004b 00       		.byte	0
 4219 004c 00       		.byte	0
 4220 004d 08       		.uleb128 0x8
 4221 004e 2E       		.uleb128 0x2e
 4222 004f 01       		.byte	0x1
 4223 0050 3F       		.uleb128 0x3f
 4224 0051 19       		.uleb128 0x19
 4225 0052 03       		.uleb128 0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 144


 4226 0053 0E       		.uleb128 0xe
 4227 0054 3A       		.uleb128 0x3a
 4228 0055 0B       		.uleb128 0xb
 4229 0056 3B       		.uleb128 0x3b
 4230 0057 0B       		.uleb128 0xb
 4231 0058 27       		.uleb128 0x27
 4232 0059 19       		.uleb128 0x19
 4233 005a 20       		.uleb128 0x20
 4234 005b 0B       		.uleb128 0xb
 4235 005c 01       		.uleb128 0x1
 4236 005d 13       		.uleb128 0x13
 4237 005e 00       		.byte	0
 4238 005f 00       		.byte	0
 4239 0060 09       		.uleb128 0x9
 4240 0061 34       		.uleb128 0x34
 4241 0062 00       		.byte	0
 4242 0063 03       		.uleb128 0x3
 4243 0064 08       		.uleb128 0x8
 4244 0065 3A       		.uleb128 0x3a
 4245 0066 0B       		.uleb128 0xb
 4246 0067 3B       		.uleb128 0x3b
 4247 0068 0B       		.uleb128 0xb
 4248 0069 49       		.uleb128 0x49
 4249 006a 13       		.uleb128 0x13
 4250 006b 00       		.byte	0
 4251 006c 00       		.byte	0
 4252 006d 0A       		.uleb128 0xa
 4253 006e 34       		.uleb128 0x34
 4254 006f 00       		.byte	0
 4255 0070 03       		.uleb128 0x3
 4256 0071 0E       		.uleb128 0xe
 4257 0072 3A       		.uleb128 0x3a
 4258 0073 0B       		.uleb128 0xb
 4259 0074 3B       		.uleb128 0x3b
 4260 0075 0B       		.uleb128 0xb
 4261 0076 49       		.uleb128 0x49
 4262 0077 13       		.uleb128 0x13
 4263 0078 00       		.byte	0
 4264 0079 00       		.byte	0
 4265 007a 0B       		.uleb128 0xb
 4266 007b 2E       		.uleb128 0x2e
 4267 007c 00       		.byte	0
 4268 007d 3F       		.uleb128 0x3f
 4269 007e 19       		.uleb128 0x19
 4270 007f 03       		.uleb128 0x3
 4271 0080 0E       		.uleb128 0xe
 4272 0081 3A       		.uleb128 0x3a
 4273 0082 0B       		.uleb128 0xb
 4274 0083 3B       		.uleb128 0x3b
 4275 0084 05       		.uleb128 0x5
 4276 0085 27       		.uleb128 0x27
 4277 0086 19       		.uleb128 0x19
 4278 0087 20       		.uleb128 0x20
 4279 0088 0B       		.uleb128 0xb
 4280 0089 00       		.byte	0
 4281 008a 00       		.byte	0
 4282 008b 0C       		.uleb128 0xc
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 145


 4283 008c 2E       		.uleb128 0x2e
 4284 008d 01       		.byte	0x1
 4285 008e 3F       		.uleb128 0x3f
 4286 008f 19       		.uleb128 0x19
 4287 0090 03       		.uleb128 0x3
 4288 0091 0E       		.uleb128 0xe
 4289 0092 3A       		.uleb128 0x3a
 4290 0093 0B       		.uleb128 0xb
 4291 0094 3B       		.uleb128 0x3b
 4292 0095 05       		.uleb128 0x5
 4293 0096 27       		.uleb128 0x27
 4294 0097 19       		.uleb128 0x19
 4295 0098 20       		.uleb128 0x20
 4296 0099 0B       		.uleb128 0xb
 4297 009a 01       		.uleb128 0x1
 4298 009b 13       		.uleb128 0x13
 4299 009c 00       		.byte	0
 4300 009d 00       		.byte	0
 4301 009e 0D       		.uleb128 0xd
 4302 009f 05       		.uleb128 0x5
 4303 00a0 00       		.byte	0
 4304 00a1 03       		.uleb128 0x3
 4305 00a2 0E       		.uleb128 0xe
 4306 00a3 3A       		.uleb128 0x3a
 4307 00a4 0B       		.uleb128 0xb
 4308 00a5 3B       		.uleb128 0x3b
 4309 00a6 05       		.uleb128 0x5
 4310 00a7 49       		.uleb128 0x49
 4311 00a8 13       		.uleb128 0x13
 4312 00a9 00       		.byte	0
 4313 00aa 00       		.byte	0
 4314 00ab 0E       		.uleb128 0xe
 4315 00ac 2E       		.uleb128 0x2e
 4316 00ad 01       		.byte	0x1
 4317 00ae 03       		.uleb128 0x3
 4318 00af 0E       		.uleb128 0xe
 4319 00b0 3A       		.uleb128 0x3a
 4320 00b1 0B       		.uleb128 0xb
 4321 00b2 3B       		.uleb128 0x3b
 4322 00b3 05       		.uleb128 0x5
 4323 00b4 27       		.uleb128 0x27
 4324 00b5 19       		.uleb128 0x19
 4325 00b6 20       		.uleb128 0x20
 4326 00b7 0B       		.uleb128 0xb
 4327 00b8 01       		.uleb128 0x1
 4328 00b9 13       		.uleb128 0x13
 4329 00ba 00       		.byte	0
 4330 00bb 00       		.byte	0
 4331 00bc 0F       		.uleb128 0xf
 4332 00bd 34       		.uleb128 0x34
 4333 00be 00       		.byte	0
 4334 00bf 03       		.uleb128 0x3
 4335 00c0 08       		.uleb128 0x8
 4336 00c1 3A       		.uleb128 0x3a
 4337 00c2 0B       		.uleb128 0xb
 4338 00c3 3B       		.uleb128 0x3b
 4339 00c4 05       		.uleb128 0x5
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 146


 4340 00c5 49       		.uleb128 0x49
 4341 00c6 13       		.uleb128 0x13
 4342 00c7 00       		.byte	0
 4343 00c8 00       		.byte	0
 4344 00c9 10       		.uleb128 0x10
 4345 00ca 2E       		.uleb128 0x2e
 4346 00cb 01       		.byte	0x1
 4347 00cc 3F       		.uleb128 0x3f
 4348 00cd 19       		.uleb128 0x19
 4349 00ce 03       		.uleb128 0x3
 4350 00cf 0E       		.uleb128 0xe
 4351 00d0 3A       		.uleb128 0x3a
 4352 00d1 0B       		.uleb128 0xb
 4353 00d2 3B       		.uleb128 0x3b
 4354 00d3 05       		.uleb128 0x5
 4355 00d4 27       		.uleb128 0x27
 4356 00d5 19       		.uleb128 0x19
 4357 00d6 49       		.uleb128 0x49
 4358 00d7 13       		.uleb128 0x13
 4359 00d8 20       		.uleb128 0x20
 4360 00d9 0B       		.uleb128 0xb
 4361 00da 01       		.uleb128 0x1
 4362 00db 13       		.uleb128 0x13
 4363 00dc 00       		.byte	0
 4364 00dd 00       		.byte	0
 4365 00de 11       		.uleb128 0x11
 4366 00df 34       		.uleb128 0x34
 4367 00e0 00       		.byte	0
 4368 00e1 03       		.uleb128 0x3
 4369 00e2 0E       		.uleb128 0xe
 4370 00e3 3A       		.uleb128 0x3a
 4371 00e4 0B       		.uleb128 0xb
 4372 00e5 3B       		.uleb128 0x3b
 4373 00e6 05       		.uleb128 0x5
 4374 00e7 49       		.uleb128 0x49
 4375 00e8 13       		.uleb128 0x13
 4376 00e9 00       		.byte	0
 4377 00ea 00       		.byte	0
 4378 00eb 12       		.uleb128 0x12
 4379 00ec 2E       		.uleb128 0x2e
 4380 00ed 00       		.byte	0
 4381 00ee 3F       		.uleb128 0x3f
 4382 00ef 19       		.uleb128 0x19
 4383 00f0 03       		.uleb128 0x3
 4384 00f1 0E       		.uleb128 0xe
 4385 00f2 3A       		.uleb128 0x3a
 4386 00f3 0B       		.uleb128 0xb
 4387 00f4 3B       		.uleb128 0x3b
 4388 00f5 0B       		.uleb128 0xb
 4389 00f6 27       		.uleb128 0x27
 4390 00f7 19       		.uleb128 0x19
 4391 00f8 11       		.uleb128 0x11
 4392 00f9 01       		.uleb128 0x1
 4393 00fa 12       		.uleb128 0x12
 4394 00fb 06       		.uleb128 0x6
 4395 00fc 40       		.uleb128 0x40
 4396 00fd 18       		.uleb128 0x18
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 147


 4397 00fe 9742     		.uleb128 0x2117
 4398 0100 19       		.uleb128 0x19
 4399 0101 00       		.byte	0
 4400 0102 00       		.byte	0
 4401 0103 13       		.uleb128 0x13
 4402 0104 2E       		.uleb128 0x2e
 4403 0105 01       		.byte	0x1
 4404 0106 3F       		.uleb128 0x3f
 4405 0107 19       		.uleb128 0x19
 4406 0108 03       		.uleb128 0x3
 4407 0109 0E       		.uleb128 0xe
 4408 010a 3A       		.uleb128 0x3a
 4409 010b 0B       		.uleb128 0xb
 4410 010c 3B       		.uleb128 0x3b
 4411 010d 05       		.uleb128 0x5
 4412 010e 27       		.uleb128 0x27
 4413 010f 19       		.uleb128 0x19
 4414 0110 11       		.uleb128 0x11
 4415 0111 01       		.uleb128 0x1
 4416 0112 12       		.uleb128 0x12
 4417 0113 06       		.uleb128 0x6
 4418 0114 40       		.uleb128 0x40
 4419 0115 18       		.uleb128 0x18
 4420 0116 9742     		.uleb128 0x2117
 4421 0118 19       		.uleb128 0x19
 4422 0119 01       		.uleb128 0x1
 4423 011a 13       		.uleb128 0x13
 4424 011b 00       		.byte	0
 4425 011c 00       		.byte	0
 4426 011d 14       		.uleb128 0x14
 4427 011e 34       		.uleb128 0x34
 4428 011f 00       		.byte	0
 4429 0120 03       		.uleb128 0x3
 4430 0121 08       		.uleb128 0x8
 4431 0122 3A       		.uleb128 0x3a
 4432 0123 0B       		.uleb128 0xb
 4433 0124 3B       		.uleb128 0x3b
 4434 0125 05       		.uleb128 0x5
 4435 0126 49       		.uleb128 0x49
 4436 0127 13       		.uleb128 0x13
 4437 0128 02       		.uleb128 0x2
 4438 0129 17       		.uleb128 0x17
 4439 012a 00       		.byte	0
 4440 012b 00       		.byte	0
 4441 012c 15       		.uleb128 0x15
 4442 012d 34       		.uleb128 0x34
 4443 012e 00       		.byte	0
 4444 012f 03       		.uleb128 0x3
 4445 0130 0E       		.uleb128 0xe
 4446 0131 3A       		.uleb128 0x3a
 4447 0132 0B       		.uleb128 0xb
 4448 0133 3B       		.uleb128 0x3b
 4449 0134 05       		.uleb128 0x5
 4450 0135 49       		.uleb128 0x49
 4451 0136 13       		.uleb128 0x13
 4452 0137 02       		.uleb128 0x2
 4453 0138 17       		.uleb128 0x17
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 148


 4454 0139 00       		.byte	0
 4455 013a 00       		.byte	0
 4456 013b 16       		.uleb128 0x16
 4457 013c 2E       		.uleb128 0x2e
 4458 013d 01       		.byte	0x1
 4459 013e 3F       		.uleb128 0x3f
 4460 013f 19       		.uleb128 0x19
 4461 0140 03       		.uleb128 0x3
 4462 0141 0E       		.uleb128 0xe
 4463 0142 3A       		.uleb128 0x3a
 4464 0143 0B       		.uleb128 0xb
 4465 0144 3B       		.uleb128 0x3b
 4466 0145 0B       		.uleb128 0xb
 4467 0146 27       		.uleb128 0x27
 4468 0147 19       		.uleb128 0x19
 4469 0148 11       		.uleb128 0x11
 4470 0149 01       		.uleb128 0x1
 4471 014a 12       		.uleb128 0x12
 4472 014b 06       		.uleb128 0x6
 4473 014c 40       		.uleb128 0x40
 4474 014d 18       		.uleb128 0x18
 4475 014e 9742     		.uleb128 0x2117
 4476 0150 19       		.uleb128 0x19
 4477 0151 01       		.uleb128 0x1
 4478 0152 13       		.uleb128 0x13
 4479 0153 00       		.byte	0
 4480 0154 00       		.byte	0
 4481 0155 17       		.uleb128 0x17
 4482 0156 898201   		.uleb128 0x4109
 4483 0159 00       		.byte	0
 4484 015a 11       		.uleb128 0x11
 4485 015b 01       		.uleb128 0x1
 4486 015c 31       		.uleb128 0x31
 4487 015d 13       		.uleb128 0x13
 4488 015e 00       		.byte	0
 4489 015f 00       		.byte	0
 4490 0160 18       		.uleb128 0x18
 4491 0161 2E       		.uleb128 0x2e
 4492 0162 00       		.byte	0
 4493 0163 3F       		.uleb128 0x3f
 4494 0164 19       		.uleb128 0x19
 4495 0165 03       		.uleb128 0x3
 4496 0166 0E       		.uleb128 0xe
 4497 0167 3A       		.uleb128 0x3a
 4498 0168 0B       		.uleb128 0xb
 4499 0169 3B       		.uleb128 0x3b
 4500 016a 05       		.uleb128 0x5
 4501 016b 27       		.uleb128 0x27
 4502 016c 19       		.uleb128 0x19
 4503 016d 49       		.uleb128 0x49
 4504 016e 13       		.uleb128 0x13
 4505 016f 11       		.uleb128 0x11
 4506 0170 01       		.uleb128 0x1
 4507 0171 12       		.uleb128 0x12
 4508 0172 06       		.uleb128 0x6
 4509 0173 40       		.uleb128 0x40
 4510 0174 18       		.uleb128 0x18
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 149


 4511 0175 9742     		.uleb128 0x2117
 4512 0177 19       		.uleb128 0x19
 4513 0178 00       		.byte	0
 4514 0179 00       		.byte	0
 4515 017a 19       		.uleb128 0x19
 4516 017b 05       		.uleb128 0x5
 4517 017c 00       		.byte	0
 4518 017d 03       		.uleb128 0x3
 4519 017e 0E       		.uleb128 0xe
 4520 017f 3A       		.uleb128 0x3a
 4521 0180 0B       		.uleb128 0xb
 4522 0181 3B       		.uleb128 0x3b
 4523 0182 05       		.uleb128 0x5
 4524 0183 49       		.uleb128 0x49
 4525 0184 13       		.uleb128 0x13
 4526 0185 02       		.uleb128 0x2
 4527 0186 17       		.uleb128 0x17
 4528 0187 00       		.byte	0
 4529 0188 00       		.byte	0
 4530 0189 1A       		.uleb128 0x1a
 4531 018a 05       		.uleb128 0x5
 4532 018b 00       		.byte	0
 4533 018c 03       		.uleb128 0x3
 4534 018d 0E       		.uleb128 0xe
 4535 018e 3A       		.uleb128 0x3a
 4536 018f 0B       		.uleb128 0xb
 4537 0190 3B       		.uleb128 0x3b
 4538 0191 05       		.uleb128 0x5
 4539 0192 49       		.uleb128 0x49
 4540 0193 13       		.uleb128 0x13
 4541 0194 02       		.uleb128 0x2
 4542 0195 18       		.uleb128 0x18
 4543 0196 00       		.byte	0
 4544 0197 00       		.byte	0
 4545 0198 1B       		.uleb128 0x1b
 4546 0199 2E       		.uleb128 0x2e
 4547 019a 01       		.byte	0x1
 4548 019b 3F       		.uleb128 0x3f
 4549 019c 19       		.uleb128 0x19
 4550 019d 03       		.uleb128 0x3
 4551 019e 0E       		.uleb128 0xe
 4552 019f 3A       		.uleb128 0x3a
 4553 01a0 0B       		.uleb128 0xb
 4554 01a1 3B       		.uleb128 0x3b
 4555 01a2 05       		.uleb128 0x5
 4556 01a3 27       		.uleb128 0x27
 4557 01a4 19       		.uleb128 0x19
 4558 01a5 49       		.uleb128 0x49
 4559 01a6 13       		.uleb128 0x13
 4560 01a7 11       		.uleb128 0x11
 4561 01a8 01       		.uleb128 0x1
 4562 01a9 12       		.uleb128 0x12
 4563 01aa 06       		.uleb128 0x6
 4564 01ab 40       		.uleb128 0x40
 4565 01ac 18       		.uleb128 0x18
 4566 01ad 9742     		.uleb128 0x2117
 4567 01af 19       		.uleb128 0x19
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 150


 4568 01b0 01       		.uleb128 0x1
 4569 01b1 13       		.uleb128 0x13
 4570 01b2 00       		.byte	0
 4571 01b3 00       		.byte	0
 4572 01b4 1C       		.uleb128 0x1c
 4573 01b5 2E       		.uleb128 0x2e
 4574 01b6 00       		.byte	0
 4575 01b7 3F       		.uleb128 0x3f
 4576 01b8 19       		.uleb128 0x19
 4577 01b9 03       		.uleb128 0x3
 4578 01ba 0E       		.uleb128 0xe
 4579 01bb 3A       		.uleb128 0x3a
 4580 01bc 0B       		.uleb128 0xb
 4581 01bd 3B       		.uleb128 0x3b
 4582 01be 05       		.uleb128 0x5
 4583 01bf 27       		.uleb128 0x27
 4584 01c0 19       		.uleb128 0x19
 4585 01c1 11       		.uleb128 0x11
 4586 01c2 01       		.uleb128 0x1
 4587 01c3 12       		.uleb128 0x12
 4588 01c4 06       		.uleb128 0x6
 4589 01c5 40       		.uleb128 0x40
 4590 01c6 18       		.uleb128 0x18
 4591 01c7 9742     		.uleb128 0x2117
 4592 01c9 19       		.uleb128 0x19
 4593 01ca 00       		.byte	0
 4594 01cb 00       		.byte	0
 4595 01cc 1D       		.uleb128 0x1d
 4596 01cd 2E       		.uleb128 0x2e
 4597 01ce 00       		.byte	0
 4598 01cf 31       		.uleb128 0x31
 4599 01d0 13       		.uleb128 0x13
 4600 01d1 11       		.uleb128 0x11
 4601 01d2 01       		.uleb128 0x1
 4602 01d3 12       		.uleb128 0x12
 4603 01d4 06       		.uleb128 0x6
 4604 01d5 40       		.uleb128 0x40
 4605 01d6 18       		.uleb128 0x18
 4606 01d7 9742     		.uleb128 0x2117
 4607 01d9 19       		.uleb128 0x19
 4608 01da 00       		.byte	0
 4609 01db 00       		.byte	0
 4610 01dc 1E       		.uleb128 0x1e
 4611 01dd 34       		.uleb128 0x34
 4612 01de 00       		.byte	0
 4613 01df 03       		.uleb128 0x3
 4614 01e0 0E       		.uleb128 0xe
 4615 01e1 3A       		.uleb128 0x3a
 4616 01e2 0B       		.uleb128 0xb
 4617 01e3 3B       		.uleb128 0x3b
 4618 01e4 05       		.uleb128 0x5
 4619 01e5 49       		.uleb128 0x49
 4620 01e6 13       		.uleb128 0x13
 4621 01e7 02       		.uleb128 0x2
 4622 01e8 18       		.uleb128 0x18
 4623 01e9 00       		.byte	0
 4624 01ea 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 151


 4625 01eb 1F       		.uleb128 0x1f
 4626 01ec 2E       		.uleb128 0x2e
 4627 01ed 01       		.byte	0x1
 4628 01ee 31       		.uleb128 0x31
 4629 01ef 13       		.uleb128 0x13
 4630 01f0 11       		.uleb128 0x11
 4631 01f1 01       		.uleb128 0x1
 4632 01f2 12       		.uleb128 0x12
 4633 01f3 06       		.uleb128 0x6
 4634 01f4 40       		.uleb128 0x40
 4635 01f5 18       		.uleb128 0x18
 4636 01f6 9742     		.uleb128 0x2117
 4637 01f8 19       		.uleb128 0x19
 4638 01f9 01       		.uleb128 0x1
 4639 01fa 13       		.uleb128 0x13
 4640 01fb 00       		.byte	0
 4641 01fc 00       		.byte	0
 4642 01fd 20       		.uleb128 0x20
 4643 01fe 05       		.uleb128 0x5
 4644 01ff 00       		.byte	0
 4645 0200 31       		.uleb128 0x31
 4646 0201 13       		.uleb128 0x13
 4647 0202 02       		.uleb128 0x2
 4648 0203 17       		.uleb128 0x17
 4649 0204 00       		.byte	0
 4650 0205 00       		.byte	0
 4651 0206 21       		.uleb128 0x21
 4652 0207 05       		.uleb128 0x5
 4653 0208 00       		.byte	0
 4654 0209 31       		.uleb128 0x31
 4655 020a 13       		.uleb128 0x13
 4656 020b 02       		.uleb128 0x2
 4657 020c 18       		.uleb128 0x18
 4658 020d 00       		.byte	0
 4659 020e 00       		.byte	0
 4660 020f 22       		.uleb128 0x22
 4661 0210 34       		.uleb128 0x34
 4662 0211 00       		.byte	0
 4663 0212 31       		.uleb128 0x31
 4664 0213 13       		.uleb128 0x13
 4665 0214 02       		.uleb128 0x2
 4666 0215 18       		.uleb128 0x18
 4667 0216 00       		.byte	0
 4668 0217 00       		.byte	0
 4669 0218 23       		.uleb128 0x23
 4670 0219 34       		.uleb128 0x34
 4671 021a 00       		.byte	0
 4672 021b 31       		.uleb128 0x31
 4673 021c 13       		.uleb128 0x13
 4674 021d 1C       		.uleb128 0x1c
 4675 021e 06       		.uleb128 0x6
 4676 021f 00       		.byte	0
 4677 0220 00       		.byte	0
 4678 0221 24       		.uleb128 0x24
 4679 0222 34       		.uleb128 0x34
 4680 0223 00       		.byte	0
 4681 0224 03       		.uleb128 0x3
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 152


 4682 0225 0E       		.uleb128 0xe
 4683 0226 3A       		.uleb128 0x3a
 4684 0227 0B       		.uleb128 0xb
 4685 0228 3B       		.uleb128 0x3b
 4686 0229 05       		.uleb128 0x5
 4687 022a 49       		.uleb128 0x49
 4688 022b 13       		.uleb128 0x13
 4689 022c 1C       		.uleb128 0x1c
 4690 022d 06       		.uleb128 0x6
 4691 022e 00       		.byte	0
 4692 022f 00       		.byte	0
 4693 0230 25       		.uleb128 0x25
 4694 0231 34       		.uleb128 0x34
 4695 0232 00       		.byte	0
 4696 0233 31       		.uleb128 0x31
 4697 0234 13       		.uleb128 0x13
 4698 0235 00       		.byte	0
 4699 0236 00       		.byte	0
 4700 0237 26       		.uleb128 0x26
 4701 0238 34       		.uleb128 0x34
 4702 0239 00       		.byte	0
 4703 023a 31       		.uleb128 0x31
 4704 023b 13       		.uleb128 0x13
 4705 023c 1C       		.uleb128 0x1c
 4706 023d 0B       		.uleb128 0xb
 4707 023e 00       		.byte	0
 4708 023f 00       		.byte	0
 4709 0240 27       		.uleb128 0x27
 4710 0241 0B       		.uleb128 0xb
 4711 0242 01       		.byte	0x1
 4712 0243 11       		.uleb128 0x11
 4713 0244 01       		.uleb128 0x1
 4714 0245 12       		.uleb128 0x12
 4715 0246 06       		.uleb128 0x6
 4716 0247 01       		.uleb128 0x1
 4717 0248 13       		.uleb128 0x13
 4718 0249 00       		.byte	0
 4719 024a 00       		.byte	0
 4720 024b 28       		.uleb128 0x28
 4721 024c 34       		.uleb128 0x34
 4722 024d 00       		.byte	0
 4723 024e 31       		.uleb128 0x31
 4724 024f 13       		.uleb128 0x13
 4725 0250 02       		.uleb128 0x2
 4726 0251 17       		.uleb128 0x17
 4727 0252 00       		.byte	0
 4728 0253 00       		.byte	0
 4729 0254 29       		.uleb128 0x29
 4730 0255 898201   		.uleb128 0x4109
 4731 0258 01       		.byte	0x1
 4732 0259 11       		.uleb128 0x11
 4733 025a 01       		.uleb128 0x1
 4734 025b 31       		.uleb128 0x31
 4735 025c 13       		.uleb128 0x13
 4736 025d 01       		.uleb128 0x1
 4737 025e 13       		.uleb128 0x13
 4738 025f 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 153


 4739 0260 00       		.byte	0
 4740 0261 2A       		.uleb128 0x2a
 4741 0262 8A8201   		.uleb128 0x410a
 4742 0265 00       		.byte	0
 4743 0266 02       		.uleb128 0x2
 4744 0267 18       		.uleb128 0x18
 4745 0268 9142     		.uleb128 0x2111
 4746 026a 18       		.uleb128 0x18
 4747 026b 00       		.byte	0
 4748 026c 00       		.byte	0
 4749 026d 2B       		.uleb128 0x2b
 4750 026e 898201   		.uleb128 0x4109
 4751 0271 01       		.byte	0x1
 4752 0272 11       		.uleb128 0x11
 4753 0273 01       		.uleb128 0x1
 4754 0274 31       		.uleb128 0x31
 4755 0275 13       		.uleb128 0x13
 4756 0276 00       		.byte	0
 4757 0277 00       		.byte	0
 4758 0278 2C       		.uleb128 0x2c
 4759 0279 01       		.uleb128 0x1
 4760 027a 01       		.byte	0x1
 4761 027b 49       		.uleb128 0x49
 4762 027c 13       		.uleb128 0x13
 4763 027d 01       		.uleb128 0x1
 4764 027e 13       		.uleb128 0x13
 4765 027f 00       		.byte	0
 4766 0280 00       		.byte	0
 4767 0281 2D       		.uleb128 0x2d
 4768 0282 21       		.uleb128 0x21
 4769 0283 00       		.byte	0
 4770 0284 49       		.uleb128 0x49
 4771 0285 13       		.uleb128 0x13
 4772 0286 2F       		.uleb128 0x2f
 4773 0287 0B       		.uleb128 0xb
 4774 0288 00       		.byte	0
 4775 0289 00       		.byte	0
 4776 028a 2E       		.uleb128 0x2e
 4777 028b 1D       		.uleb128 0x1d
 4778 028c 00       		.byte	0
 4779 028d 31       		.uleb128 0x31
 4780 028e 13       		.uleb128 0x13
 4781 028f 52       		.uleb128 0x52
 4782 0290 01       		.uleb128 0x1
 4783 0291 55       		.uleb128 0x55
 4784 0292 17       		.uleb128 0x17
 4785 0293 58       		.uleb128 0x58
 4786 0294 0B       		.uleb128 0xb
 4787 0295 59       		.uleb128 0x59
 4788 0296 05       		.uleb128 0x5
 4789 0297 00       		.byte	0
 4790 0298 00       		.byte	0
 4791 0299 2F       		.uleb128 0x2f
 4792 029a 2E       		.uleb128 0x2e
 4793 029b 01       		.byte	0x1
 4794 029c 3F       		.uleb128 0x3f
 4795 029d 19       		.uleb128 0x19
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 154


 4796 029e 03       		.uleb128 0x3
 4797 029f 0E       		.uleb128 0xe
 4798 02a0 3A       		.uleb128 0x3a
 4799 02a1 0B       		.uleb128 0xb
 4800 02a2 3B       		.uleb128 0x3b
 4801 02a3 05       		.uleb128 0x5
 4802 02a4 27       		.uleb128 0x27
 4803 02a5 19       		.uleb128 0x19
 4804 02a6 11       		.uleb128 0x11
 4805 02a7 01       		.uleb128 0x1
 4806 02a8 12       		.uleb128 0x12
 4807 02a9 06       		.uleb128 0x6
 4808 02aa 40       		.uleb128 0x40
 4809 02ab 18       		.uleb128 0x18
 4810 02ac 9642     		.uleb128 0x2116
 4811 02ae 19       		.uleb128 0x19
 4812 02af 01       		.uleb128 0x1
 4813 02b0 13       		.uleb128 0x13
 4814 02b1 00       		.byte	0
 4815 02b2 00       		.byte	0
 4816 02b3 30       		.uleb128 0x30
 4817 02b4 1D       		.uleb128 0x1d
 4818 02b5 01       		.byte	0x1
 4819 02b6 31       		.uleb128 0x31
 4820 02b7 13       		.uleb128 0x13
 4821 02b8 52       		.uleb128 0x52
 4822 02b9 01       		.uleb128 0x1
 4823 02ba 55       		.uleb128 0x55
 4824 02bb 17       		.uleb128 0x17
 4825 02bc 58       		.uleb128 0x58
 4826 02bd 0B       		.uleb128 0xb
 4827 02be 59       		.uleb128 0x59
 4828 02bf 05       		.uleb128 0x5
 4829 02c0 01       		.uleb128 0x1
 4830 02c1 13       		.uleb128 0x13
 4831 02c2 00       		.byte	0
 4832 02c3 00       		.byte	0
 4833 02c4 31       		.uleb128 0x31
 4834 02c5 0B       		.uleb128 0xb
 4835 02c6 01       		.byte	0x1
 4836 02c7 55       		.uleb128 0x55
 4837 02c8 17       		.uleb128 0x17
 4838 02c9 00       		.byte	0
 4839 02ca 00       		.byte	0
 4840 02cb 32       		.uleb128 0x32
 4841 02cc 1D       		.uleb128 0x1d
 4842 02cd 01       		.byte	0x1
 4843 02ce 31       		.uleb128 0x31
 4844 02cf 13       		.uleb128 0x13
 4845 02d0 11       		.uleb128 0x11
 4846 02d1 01       		.uleb128 0x1
 4847 02d2 12       		.uleb128 0x12
 4848 02d3 06       		.uleb128 0x6
 4849 02d4 58       		.uleb128 0x58
 4850 02d5 0B       		.uleb128 0xb
 4851 02d6 59       		.uleb128 0x59
 4852 02d7 05       		.uleb128 0x5
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 155


 4853 02d8 01       		.uleb128 0x1
 4854 02d9 13       		.uleb128 0x13
 4855 02da 00       		.byte	0
 4856 02db 00       		.byte	0
 4857 02dc 33       		.uleb128 0x33
 4858 02dd 1D       		.uleb128 0x1d
 4859 02de 00       		.byte	0
 4860 02df 31       		.uleb128 0x31
 4861 02e0 13       		.uleb128 0x13
 4862 02e1 11       		.uleb128 0x11
 4863 02e2 01       		.uleb128 0x1
 4864 02e3 12       		.uleb128 0x12
 4865 02e4 06       		.uleb128 0x6
 4866 02e5 58       		.uleb128 0x58
 4867 02e6 0B       		.uleb128 0xb
 4868 02e7 59       		.uleb128 0x59
 4869 02e8 05       		.uleb128 0x5
 4870 02e9 00       		.byte	0
 4871 02ea 00       		.byte	0
 4872 02eb 34       		.uleb128 0x34
 4873 02ec 2E       		.uleb128 0x2e
 4874 02ed 01       		.byte	0x1
 4875 02ee 31       		.uleb128 0x31
 4876 02ef 13       		.uleb128 0x13
 4877 02f0 11       		.uleb128 0x11
 4878 02f1 01       		.uleb128 0x1
 4879 02f2 12       		.uleb128 0x12
 4880 02f3 06       		.uleb128 0x6
 4881 02f4 40       		.uleb128 0x40
 4882 02f5 18       		.uleb128 0x18
 4883 02f6 9642     		.uleb128 0x2116
 4884 02f8 19       		.uleb128 0x19
 4885 02f9 01       		.uleb128 0x1
 4886 02fa 13       		.uleb128 0x13
 4887 02fb 00       		.byte	0
 4888 02fc 00       		.byte	0
 4889 02fd 35       		.uleb128 0x35
 4890 02fe 34       		.uleb128 0x34
 4891 02ff 00       		.byte	0
 4892 0300 03       		.uleb128 0x3
 4893 0301 0E       		.uleb128 0xe
 4894 0302 3A       		.uleb128 0x3a
 4895 0303 0B       		.uleb128 0xb
 4896 0304 3B       		.uleb128 0x3b
 4897 0305 0B       		.uleb128 0xb
 4898 0306 49       		.uleb128 0x49
 4899 0307 13       		.uleb128 0x13
 4900 0308 02       		.uleb128 0x2
 4901 0309 18       		.uleb128 0x18
 4902 030a 00       		.byte	0
 4903 030b 00       		.byte	0
 4904 030c 36       		.uleb128 0x36
 4905 030d 34       		.uleb128 0x34
 4906 030e 00       		.byte	0
 4907 030f 03       		.uleb128 0x3
 4908 0310 0E       		.uleb128 0xe
 4909 0311 3A       		.uleb128 0x3a
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 156


 4910 0312 0B       		.uleb128 0xb
 4911 0313 3B       		.uleb128 0x3b
 4912 0314 0B       		.uleb128 0xb
 4913 0315 49       		.uleb128 0x49
 4914 0316 13       		.uleb128 0x13
 4915 0317 3F       		.uleb128 0x3f
 4916 0318 19       		.uleb128 0x19
 4917 0319 02       		.uleb128 0x2
 4918 031a 18       		.uleb128 0x18
 4919 031b 00       		.byte	0
 4920 031c 00       		.byte	0
 4921 031d 37       		.uleb128 0x37
 4922 031e 26       		.uleb128 0x26
 4923 031f 00       		.byte	0
 4924 0320 49       		.uleb128 0x49
 4925 0321 13       		.uleb128 0x13
 4926 0322 00       		.byte	0
 4927 0323 00       		.byte	0
 4928 0324 38       		.uleb128 0x38
 4929 0325 2E       		.uleb128 0x2e
 4930 0326 00       		.byte	0
 4931 0327 3F       		.uleb128 0x3f
 4932 0328 19       		.uleb128 0x19
 4933 0329 3C       		.uleb128 0x3c
 4934 032a 19       		.uleb128 0x19
 4935 032b 6E       		.uleb128 0x6e
 4936 032c 0E       		.uleb128 0xe
 4937 032d 03       		.uleb128 0x3
 4938 032e 0E       		.uleb128 0xe
 4939 032f 3A       		.uleb128 0x3a
 4940 0330 0B       		.uleb128 0xb
 4941 0331 3B       		.uleb128 0x3b
 4942 0332 0B       		.uleb128 0xb
 4943 0333 00       		.byte	0
 4944 0334 00       		.byte	0
 4945 0335 00       		.byte	0
 4946              		.section	.debug_loc,"",%progbits
 4947              	.Ldebug_loc0:
 4948              	.LLST0:
 4949 0000 00000000 		.4byte	.LVL0
 4950 0004 0A000000 		.4byte	.LVL1
 4951 0008 0200     		.2byte	0x2
 4952 000a 30       		.byte	0x30
 4953 000b 9F       		.byte	0x9f
 4954 000c 0A000000 		.4byte	.LVL1
 4955 0010 16000000 		.4byte	.LVL2
 4956 0014 0100     		.2byte	0x1
 4957 0016 53       		.byte	0x53
 4958 0017 16000000 		.4byte	.LVL2
 4959 001b 18000000 		.4byte	.LVL3
 4960 001f 0300     		.2byte	0x3
 4961 0021 73       		.byte	0x73
 4962 0022 7D       		.sleb128 -3
 4963 0023 9F       		.byte	0x9f
 4964 0024 18000000 		.4byte	.LVL3
 4965 0028 20000000 		.4byte	.LVL5
 4966 002c 0100     		.2byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 157


 4967 002e 53       		.byte	0x53
 4968 002f 00000000 		.4byte	0
 4969 0033 00000000 		.4byte	0
 4970              	.LLST1:
 4971 0037 00000000 		.4byte	.LVL0
 4972 003b 16000000 		.4byte	.LVL2
 4973 003f 0200     		.2byte	0x2
 4974 0041 33       		.byte	0x33
 4975 0042 9F       		.byte	0x9f
 4976 0043 16000000 		.4byte	.LVL2
 4977 0047 18000000 		.4byte	.LVL3
 4978 004b 0100     		.2byte	0x1
 4979 004d 53       		.byte	0x53
 4980 004e 18000000 		.4byte	.LVL3
 4981 0052 20000000 		.4byte	.LVL5
 4982 0056 0200     		.2byte	0x2
 4983 0058 33       		.byte	0x33
 4984 0059 9F       		.byte	0x9f
 4985 005a 20000000 		.4byte	.LVL5
 4986 005e 2E000000 		.4byte	.LVL6
 4987 0062 0100     		.2byte	0x1
 4988 0064 53       		.byte	0x53
 4989 0065 2E000000 		.4byte	.LVL6
 4990 0069 30000000 		.4byte	.LVL7
 4991 006d 0700     		.2byte	0x7
 4992 006f 73       		.byte	0x73
 4993 0070 B39C8080 		.sleb128 -268431821
 4993      7F
 4994 0075 9F       		.byte	0x9f
 4995 0076 00000000 		.4byte	0
 4996 007a 00000000 		.4byte	0
 4997              	.LLST2:
 4998 007e 00000000 		.4byte	.LVL9
 4999 0082 07000000 		.4byte	.LVL10-1
 5000 0086 0100     		.2byte	0x1
 5001 0088 50       		.byte	0x50
 5002 0089 07000000 		.4byte	.LVL10-1
 5003 008d 1A000000 		.4byte	.LVL14
 5004 0091 0100     		.2byte	0x1
 5005 0093 54       		.byte	0x54
 5006 0094 1A000000 		.4byte	.LVL14
 5007 0098 20000000 		.4byte	.LFE6
 5008 009c 0400     		.2byte	0x4
 5009 009e F3       		.byte	0xf3
 5010 009f 01       		.uleb128 0x1
 5011 00a0 50       		.byte	0x50
 5012 00a1 9F       		.byte	0x9f
 5013 00a2 00000000 		.4byte	0
 5014 00a6 00000000 		.4byte	0
 5015              	.LLST3:
 5016 00aa 08000000 		.4byte	.LVL10
 5017 00ae 19000000 		.4byte	.LVL13-1
 5018 00b2 0100     		.2byte	0x1
 5019 00b4 50       		.byte	0x50
 5020 00b5 00000000 		.4byte	0
 5021 00b9 00000000 		.4byte	0
 5022              	.LLST4:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 158


 5023 00bd 10000000 		.4byte	.LVL11
 5024 00c1 14000000 		.4byte	.LVL12
 5025 00c5 0100     		.2byte	0x1
 5026 00c7 52       		.byte	0x52
 5027 00c8 14000000 		.4byte	.LVL12
 5028 00cc 19000000 		.4byte	.LVL13-1
 5029 00d0 0100     		.2byte	0x1
 5030 00d2 53       		.byte	0x53
 5031 00d3 00000000 		.4byte	0
 5032 00d7 00000000 		.4byte	0
 5033              	.LLST5:
 5034 00db 06000000 		.4byte	.LVL16
 5035 00df 0D000000 		.4byte	.LVL18-1
 5036 00e3 0100     		.2byte	0x1
 5037 00e5 50       		.byte	0x50
 5038 00e6 00000000 		.4byte	0
 5039 00ea 00000000 		.4byte	0
 5040              	.LLST6:
 5041 00ee 0A000000 		.4byte	.LVL17
 5042 00f2 12000000 		.4byte	.LVL19
 5043 00f6 0500     		.2byte	0x5
 5044 00f8 74       		.byte	0x74
 5045 00f9 00       		.sleb128 0
 5046 00fa 37       		.byte	0x37
 5047 00fb 1A       		.byte	0x1a
 5048 00fc 9F       		.byte	0x9f
 5049 00fd 12000000 		.4byte	.LVL19
 5050 0101 18000000 		.4byte	.LFE8
 5051 0105 0100     		.2byte	0x1
 5052 0107 50       		.byte	0x50
 5053 0108 00000000 		.4byte	0
 5054 010c 00000000 		.4byte	0
 5055              	.LLST7:
 5056 0110 00000000 		.4byte	.LVL20
 5057 0114 07000000 		.4byte	.LVL21-1
 5058 0118 0100     		.2byte	0x1
 5059 011a 50       		.byte	0x50
 5060 011b 07000000 		.4byte	.LVL21-1
 5061 011f 0C000000 		.4byte	.LVL22
 5062 0123 0100     		.2byte	0x1
 5063 0125 54       		.byte	0x54
 5064 0126 0C000000 		.4byte	.LVL22
 5065 012a 2C000000 		.4byte	.LFE9
 5066 012e 0400     		.2byte	0x4
 5067 0130 F3       		.byte	0xf3
 5068 0131 01       		.uleb128 0x1
 5069 0132 50       		.byte	0x50
 5070 0133 9F       		.byte	0x9f
 5071 0134 00000000 		.4byte	0
 5072 0138 00000000 		.4byte	0
 5073              	.LLST8:
 5074 013c 08000000 		.4byte	.LVL21
 5075 0140 21000000 		.4byte	.LVL23-1
 5076 0144 0100     		.2byte	0x1
 5077 0146 50       		.byte	0x50
 5078 0147 00000000 		.4byte	0
 5079 014b 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 159


 5080              	.LLST9:
 5081 014f 00000000 		.4byte	.LVL24
 5082 0153 08000000 		.4byte	.LVL25
 5083 0157 0100     		.2byte	0x1
 5084 0159 50       		.byte	0x50
 5085 015a 08000000 		.4byte	.LVL25
 5086 015e 14000000 		.4byte	.LFE15
 5087 0162 0100     		.2byte	0x1
 5088 0164 52       		.byte	0x52
 5089 0165 00000000 		.4byte	0
 5090 0169 00000000 		.4byte	0
 5091              	.LLST10:
 5092 016d 0A000000 		.4byte	.LVL26
 5093 0171 0C000000 		.4byte	.LVL27
 5094 0175 0500     		.2byte	0x5
 5095 0177 70       		.byte	0x70
 5096 0178 00       		.sleb128 0
 5097 0179 49       		.byte	0x49
 5098 017a 1A       		.byte	0x1a
 5099 017b 9F       		.byte	0x9f
 5100 017c 0C000000 		.4byte	.LVL27
 5101 0180 14000000 		.4byte	.LFE15
 5102 0184 0100     		.2byte	0x1
 5103 0186 50       		.byte	0x50
 5104 0187 00000000 		.4byte	0
 5105 018b 00000000 		.4byte	0
 5106              	.LLST11:
 5107 018f 00000000 		.4byte	.LVL30
 5108 0193 04000000 		.4byte	.LVL31
 5109 0197 0100     		.2byte	0x1
 5110 0199 50       		.byte	0x50
 5111 019a 04000000 		.4byte	.LVL31
 5112 019e 0E000000 		.4byte	.LFE18
 5113 01a2 0400     		.2byte	0x4
 5114 01a4 F3       		.byte	0xf3
 5115 01a5 01       		.uleb128 0x1
 5116 01a6 50       		.byte	0x50
 5117 01a7 9F       		.byte	0x9f
 5118 01a8 00000000 		.4byte	0
 5119 01ac 00000000 		.4byte	0
 5120              	.LLST12:
 5121 01b0 00000000 		.4byte	.LVL33
 5122 01b4 04000000 		.4byte	.LVL34
 5123 01b8 0100     		.2byte	0x1
 5124 01ba 50       		.byte	0x50
 5125 01bb 04000000 		.4byte	.LVL34
 5126 01bf 0C000000 		.4byte	.LFE19
 5127 01c3 0400     		.2byte	0x4
 5128 01c5 F3       		.byte	0xf3
 5129 01c6 01       		.uleb128 0x1
 5130 01c7 50       		.byte	0x50
 5131 01c8 9F       		.byte	0x9f
 5132 01c9 00000000 		.4byte	0
 5133 01cd 00000000 		.4byte	0
 5134              	.LLST13:
 5135 01d1 00000000 		.4byte	.LVL35
 5136 01d5 04000000 		.4byte	.LVL36
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 160


 5137 01d9 0100     		.2byte	0x1
 5138 01db 50       		.byte	0x50
 5139 01dc 04000000 		.4byte	.LVL36
 5140 01e0 10000000 		.4byte	.LFE20
 5141 01e4 0400     		.2byte	0x4
 5142 01e6 F3       		.byte	0xf3
 5143 01e7 01       		.uleb128 0x1
 5144 01e8 50       		.byte	0x50
 5145 01e9 9F       		.byte	0x9f
 5146 01ea 00000000 		.4byte	0
 5147 01ee 00000000 		.4byte	0
 5148              	.LLST14:
 5149 01f2 00000000 		.4byte	.LVL38
 5150 01f6 04000000 		.4byte	.LVL39
 5151 01fa 0100     		.2byte	0x1
 5152 01fc 50       		.byte	0x50
 5153 01fd 04000000 		.4byte	.LVL39
 5154 0201 10000000 		.4byte	.LFE21
 5155 0205 0400     		.2byte	0x4
 5156 0207 F3       		.byte	0xf3
 5157 0208 01       		.uleb128 0x1
 5158 0209 50       		.byte	0x50
 5159 020a 9F       		.byte	0x9f
 5160 020b 00000000 		.4byte	0
 5161 020f 00000000 		.4byte	0
 5162              	.LLST15:
 5163 0213 00000000 		.4byte	.LVL40
 5164 0217 17000000 		.4byte	.LVL42-1
 5165 021b 0100     		.2byte	0x1
 5166 021d 50       		.byte	0x50
 5167 021e 17000000 		.4byte	.LVL42-1
 5168 0222 34000000 		.4byte	.LFE22
 5169 0226 0400     		.2byte	0x4
 5170 0228 F3       		.byte	0xf3
 5171 0229 01       		.uleb128 0x1
 5172 022a 50       		.byte	0x50
 5173 022b 9F       		.byte	0x9f
 5174 022c 00000000 		.4byte	0
 5175 0230 00000000 		.4byte	0
 5176              	.LLST16:
 5177 0234 00000000 		.4byte	.LVL40
 5178 0238 17000000 		.4byte	.LVL42-1
 5179 023c 0100     		.2byte	0x1
 5180 023e 51       		.byte	0x51
 5181 023f 17000000 		.4byte	.LVL42-1
 5182 0243 34000000 		.4byte	.LFE22
 5183 0247 0400     		.2byte	0x4
 5184 0249 F3       		.byte	0xf3
 5185 024a 01       		.uleb128 0x1
 5186 024b 51       		.byte	0x51
 5187 024c 9F       		.byte	0x9f
 5188 024d 00000000 		.4byte	0
 5189 0251 00000000 		.4byte	0
 5190              	.LLST17:
 5191 0255 18000000 		.4byte	.LVL42
 5192 0259 2B000000 		.4byte	.LVL46-1
 5193 025d 0100     		.2byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 161


 5194 025f 50       		.byte	0x50
 5195 0260 00000000 		.4byte	0
 5196 0264 00000000 		.4byte	0
 5197              	.LLST18:
 5198 0268 10000000 		.4byte	.LVL41
 5199 026c 2C000000 		.4byte	.LVL47
 5200 0270 0100     		.2byte	0x1
 5201 0272 55       		.byte	0x55
 5202 0273 00000000 		.4byte	0
 5203 0277 00000000 		.4byte	0
 5204              	.LLST19:
 5205 027b 22000000 		.4byte	.LVL43
 5206 027f 26000000 		.4byte	.LVL45
 5207 0283 0100     		.2byte	0x1
 5208 0285 53       		.byte	0x53
 5209 0286 26000000 		.4byte	.LVL45
 5210 028a 2C000000 		.4byte	.LVL48
 5211 028e 0100     		.2byte	0x1
 5212 0290 57       		.byte	0x57
 5213 0291 00000000 		.4byte	0
 5214 0295 00000000 		.4byte	0
 5215              	.LLST20:
 5216 0299 00000000 		.4byte	.LVL49
 5217 029d 18000000 		.4byte	.LVL52
 5218 02a1 0100     		.2byte	0x1
 5219 02a3 50       		.byte	0x50
 5220 02a4 18000000 		.4byte	.LVL52
 5221 02a8 20000000 		.4byte	.LFE23
 5222 02ac 0400     		.2byte	0x4
 5223 02ae F3       		.byte	0xf3
 5224 02af 01       		.uleb128 0x1
 5225 02b0 50       		.byte	0x50
 5226 02b1 9F       		.byte	0x9f
 5227 02b2 00000000 		.4byte	0
 5228 02b6 00000000 		.4byte	0
 5229              	.LLST21:
 5230 02ba 0A000000 		.4byte	.LVL50
 5231 02be 16000000 		.4byte	.LVL51
 5232 02c2 0F00     		.2byte	0xf
 5233 02c4 71       		.byte	0x71
 5234 02c5 00       		.sleb128 0
 5235 02c6 70       		.byte	0x70
 5236 02c7 00       		.sleb128 0
 5237 02c8 33       		.byte	0x33
 5238 02c9 1A       		.byte	0x1a
 5239 02ca 08       		.byte	0x8
 5240 02cb FF       		.byte	0xff
 5241 02cc 1A       		.byte	0x1a
 5242 02cd 33       		.byte	0x33
 5243 02ce 24       		.byte	0x24
 5244 02cf 23       		.byte	0x23
 5245 02d0 06       		.uleb128 0x6
 5246 02d1 25       		.byte	0x25
 5247 02d2 9F       		.byte	0x9f
 5248 02d3 00000000 		.4byte	0
 5249 02d7 00000000 		.4byte	0
 5250              	.LLST22:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 162


 5251 02db 00000000 		.4byte	.LVL53
 5252 02df 04000000 		.4byte	.LVL54
 5253 02e3 0100     		.2byte	0x1
 5254 02e5 50       		.byte	0x50
 5255 02e6 04000000 		.4byte	.LVL54
 5256 02ea 14000000 		.4byte	.LFE24
 5257 02ee 0400     		.2byte	0x4
 5258 02f0 F3       		.byte	0xf3
 5259 02f1 01       		.uleb128 0x1
 5260 02f2 50       		.byte	0x50
 5261 02f3 9F       		.byte	0x9f
 5262 02f4 00000000 		.4byte	0
 5263 02f8 00000000 		.4byte	0
 5264              	.LLST23:
 5265 02fc 00000000 		.4byte	.LVL55
 5266 0300 06000000 		.4byte	.LVL56
 5267 0304 0100     		.2byte	0x1
 5268 0306 50       		.byte	0x50
 5269 0307 06000000 		.4byte	.LVL56
 5270 030b 18000000 		.4byte	.LFE25
 5271 030f 0400     		.2byte	0x4
 5272 0311 F3       		.byte	0xf3
 5273 0312 01       		.uleb128 0x1
 5274 0313 50       		.byte	0x50
 5275 0314 9F       		.byte	0x9f
 5276 0315 00000000 		.4byte	0
 5277 0319 00000000 		.4byte	0
 5278              	.LLST24:
 5279 031d 00000000 		.4byte	.LVL57
 5280 0321 04000000 		.4byte	.LVL58
 5281 0325 0100     		.2byte	0x1
 5282 0327 50       		.byte	0x50
 5283 0328 04000000 		.4byte	.LVL58
 5284 032c 14000000 		.4byte	.LFE26
 5285 0330 0400     		.2byte	0x4
 5286 0332 F3       		.byte	0xf3
 5287 0333 01       		.uleb128 0x1
 5288 0334 50       		.byte	0x50
 5289 0335 9F       		.byte	0x9f
 5290 0336 00000000 		.4byte	0
 5291 033a 00000000 		.4byte	0
 5292              	.LLST25:
 5293 033e 00000000 		.4byte	.LVL59
 5294 0342 04000000 		.4byte	.LVL60
 5295 0346 0100     		.2byte	0x1
 5296 0348 50       		.byte	0x50
 5297 0349 04000000 		.4byte	.LVL60
 5298 034d 14000000 		.4byte	.LFE27
 5299 0351 0400     		.2byte	0x4
 5300 0353 F3       		.byte	0xf3
 5301 0354 01       		.uleb128 0x1
 5302 0355 50       		.byte	0x50
 5303 0356 9F       		.byte	0x9f
 5304 0357 00000000 		.4byte	0
 5305 035b 00000000 		.4byte	0
 5306              	.LLST26:
 5307 035f 00000000 		.4byte	.LVL61
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 163


 5308 0363 04000000 		.4byte	.LVL62
 5309 0367 0100     		.2byte	0x1
 5310 0369 50       		.byte	0x50
 5311 036a 04000000 		.4byte	.LVL62
 5312 036e 14000000 		.4byte	.LFE28
 5313 0372 0400     		.2byte	0x4
 5314 0374 F3       		.byte	0xf3
 5315 0375 01       		.uleb128 0x1
 5316 0376 50       		.byte	0x50
 5317 0377 9F       		.byte	0x9f
 5318 0378 00000000 		.4byte	0
 5319 037c 00000000 		.4byte	0
 5320              	.LLST27:
 5321 0380 00000000 		.4byte	.LVL64
 5322 0384 08000000 		.4byte	.LVL65
 5323 0388 0100     		.2byte	0x1
 5324 038a 50       		.byte	0x50
 5325 038b 08000000 		.4byte	.LVL65
 5326 038f 22000000 		.4byte	.LVL69
 5327 0393 0100     		.2byte	0x1
 5328 0395 54       		.byte	0x54
 5329 0396 00000000 		.4byte	0
 5330 039a 00000000 		.4byte	0
 5331              	.LLST28:
 5332 039e 14000000 		.4byte	.LVL73
 5333 03a2 1A000000 		.4byte	.LVL74
 5334 03a6 0200     		.2byte	0x2
 5335 03a8 30       		.byte	0x30
 5336 03a9 9F       		.byte	0x9f
 5337 03aa 1A000000 		.4byte	.LVL74
 5338 03ae 26000000 		.4byte	.LVL75
 5339 03b2 0100     		.2byte	0x1
 5340 03b4 53       		.byte	0x53
 5341 03b5 26000000 		.4byte	.LVL75
 5342 03b9 28000000 		.4byte	.LVL76
 5343 03bd 0300     		.2byte	0x3
 5344 03bf 73       		.byte	0x73
 5345 03c0 7D       		.sleb128 -3
 5346 03c1 9F       		.byte	0x9f
 5347 03c2 28000000 		.4byte	.LVL76
 5348 03c6 30000000 		.4byte	.LVL78
 5349 03ca 0100     		.2byte	0x1
 5350 03cc 53       		.byte	0x53
 5351 03cd 00000000 		.4byte	0
 5352 03d1 00000000 		.4byte	0
 5353              	.LLST29:
 5354 03d5 14000000 		.4byte	.LVL73
 5355 03d9 26000000 		.4byte	.LVL75
 5356 03dd 0200     		.2byte	0x2
 5357 03df 33       		.byte	0x33
 5358 03e0 9F       		.byte	0x9f
 5359 03e1 26000000 		.4byte	.LVL75
 5360 03e5 28000000 		.4byte	.LVL76
 5361 03e9 0100     		.2byte	0x1
 5362 03eb 53       		.byte	0x53
 5363 03ec 28000000 		.4byte	.LVL76
 5364 03f0 30000000 		.4byte	.LVL78
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 164


 5365 03f4 0200     		.2byte	0x2
 5366 03f6 33       		.byte	0x33
 5367 03f7 9F       		.byte	0x9f
 5368 03f8 30000000 		.4byte	.LVL78
 5369 03fc 60000000 		.4byte	.LVL82
 5370 0400 0100     		.2byte	0x1
 5371 0402 53       		.byte	0x53
 5372 0403 00000000 		.4byte	0
 5373 0407 00000000 		.4byte	0
 5374              	.LLST30:
 5375 040b 14000000 		.4byte	.LVL73
 5376 040f B8000000 		.4byte	.LVL91
 5377 0413 0200     		.2byte	0x2
 5378 0415 91       		.byte	0x91
 5379 0416 5C       		.sleb128 -36
 5380 0417 00000000 		.4byte	0
 5381 041b 00000000 		.4byte	0
 5382              	.LLST31:
 5383 041f 50000000 		.4byte	.LVL79
 5384 0423 54000000 		.4byte	.LVL80
 5385 0427 0A00     		.2byte	0xa
 5386 0429 71       		.byte	0x71
 5387 042a 00       		.sleb128 0
 5388 042b 11       		.byte	0x11
 5389 042c 80F08380 		.sleb128 -1073678336
 5389      7C
 5390 0431 1A       		.byte	0x1a
 5391 0432 9F       		.byte	0x9f
 5392 0433 54000000 		.4byte	.LVL80
 5393 0437 5A000000 		.4byte	.LVL81
 5394 043b 0100     		.2byte	0x1
 5395 043d 51       		.byte	0x51
 5396 043e 6C000000 		.4byte	.LVL83
 5397 0442 70000000 		.4byte	.LVL84
 5398 0446 0100     		.2byte	0x1
 5399 0448 53       		.byte	0x53
 5400 0449 70000000 		.4byte	.LVL84
 5401 044d 74000000 		.4byte	.LVL85
 5402 0451 0200     		.2byte	0x2
 5403 0453 74       		.byte	0x74
 5404 0454 00       		.sleb128 0
 5405 0455 8C000000 		.4byte	.LVL87
 5406 0459 B8000000 		.4byte	.LVL91
 5407 045d 0100     		.2byte	0x1
 5408 045f 57       		.byte	0x57
 5409 0460 00000000 		.4byte	0
 5410 0464 00000000 		.4byte	0
 5411              	.LLST32:
 5412 0468 8C000000 		.4byte	.LVL87
 5413 046c 90000000 		.4byte	.LVL88
 5414 0470 0100     		.2byte	0x1
 5415 0472 55       		.byte	0x55
 5416 0473 90000000 		.4byte	.LVL88
 5417 0477 94000000 		.4byte	.LVL89
 5418 047b 0300     		.2byte	0x3
 5419 047d 75       		.byte	0x75
 5420 047e 70       		.sleb128 -16
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 165


 5421 047f 9F       		.byte	0x9f
 5422 0480 94000000 		.4byte	.LVL89
 5423 0484 B8000000 		.4byte	.LVL91
 5424 0488 0100     		.2byte	0x1
 5425 048a 55       		.byte	0x55
 5426 048b 00000000 		.4byte	0
 5427 048f 00000000 		.4byte	0
 5428              	.LLST33:
 5429 0493 00000000 		.4byte	.LVL92
 5430 0497 09000000 		.4byte	.LVL93-1
 5431 049b 0100     		.2byte	0x1
 5432 049d 50       		.byte	0x50
 5433 049e 09000000 		.4byte	.LVL93-1
 5434 04a2 30000000 		.4byte	.LVL99
 5435 04a6 0100     		.2byte	0x1
 5436 04a8 54       		.byte	0x54
 5437 04a9 30000000 		.4byte	.LVL99
 5438 04ad 80000000 		.4byte	.LFE10
 5439 04b1 0400     		.2byte	0x4
 5440 04b3 F3       		.byte	0xf3
 5441 04b4 01       		.uleb128 0x1
 5442 04b5 50       		.byte	0x50
 5443 04b6 9F       		.byte	0x9f
 5444 04b7 00000000 		.4byte	0
 5445 04bb 00000000 		.4byte	0
 5446              	.LLST34:
 5447 04bf 00000000 		.4byte	.LVL92
 5448 04c3 16000000 		.4byte	.LVL96
 5449 04c7 0200     		.2byte	0x2
 5450 04c9 30       		.byte	0x30
 5451 04ca 9F       		.byte	0x9f
 5452 04cb 16000000 		.4byte	.LVL96
 5453 04cf 1C000000 		.4byte	.LVL98
 5454 04d3 0200     		.2byte	0x2
 5455 04d5 31       		.byte	0x31
 5456 04d6 9F       		.byte	0x9f
 5457 04d7 1C000000 		.4byte	.LVL98
 5458 04db 55000000 		.4byte	.LVL100-1
 5459 04df 0100     		.2byte	0x1
 5460 04e1 52       		.byte	0x52
 5461 04e2 00000000 		.4byte	0
 5462 04e6 00000000 		.4byte	0
 5463              	.LLST35:
 5464 04ea 0C000000 		.4byte	.LVL94
 5465 04ee 5E000000 		.4byte	.LVL102
 5466 04f2 0100     		.2byte	0x1
 5467 04f4 55       		.byte	0x55
 5468 04f5 00000000 		.4byte	0
 5469 04f9 00000000 		.4byte	0
 5470              	.LLST36:
 5471 04fd 00000000 		.4byte	.LVL103
 5472 0501 08000000 		.4byte	.LVL104
 5473 0505 0100     		.2byte	0x1
 5474 0507 50       		.byte	0x50
 5475 0508 08000000 		.4byte	.LVL104
 5476 050c 14000000 		.4byte	.LFE32
 5477 0510 0400     		.2byte	0x4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 166


 5478 0512 F3       		.byte	0xf3
 5479 0513 01       		.uleb128 0x1
 5480 0514 50       		.byte	0x50
 5481 0515 9F       		.byte	0x9f
 5482 0516 00000000 		.4byte	0
 5483 051a 00000000 		.4byte	0
 5484              	.LLST37:
 5485 051e 00000000 		.4byte	.LVL106
 5486 0522 0E000000 		.4byte	.LVL107
 5487 0526 0100     		.2byte	0x1
 5488 0528 50       		.byte	0x50
 5489 0529 0E000000 		.4byte	.LVL107
 5490 052d 44000000 		.4byte	.LFE11
 5491 0531 0400     		.2byte	0x4
 5492 0533 F3       		.byte	0xf3
 5493 0534 01       		.uleb128 0x1
 5494 0535 50       		.byte	0x50
 5495 0536 9F       		.byte	0x9f
 5496 0537 00000000 		.4byte	0
 5497 053b 00000000 		.4byte	0
 5498              	.LLST38:
 5499 053f 00000000 		.4byte	.LVL109
 5500 0543 18000000 		.4byte	.LVL110
 5501 0547 0100     		.2byte	0x1
 5502 0549 50       		.byte	0x50
 5503 054a 18000000 		.4byte	.LVL110
 5504 054e 48000000 		.4byte	.LFE33
 5505 0552 0400     		.2byte	0x4
 5506 0554 F3       		.byte	0xf3
 5507 0555 01       		.uleb128 0x1
 5508 0556 50       		.byte	0x50
 5509 0557 9F       		.byte	0x9f
 5510 0558 00000000 		.4byte	0
 5511 055c 00000000 		.4byte	0
 5512              	.LLST39:
 5513 0560 00000000 		.4byte	.LVL113
 5514 0564 0C000000 		.4byte	.LVL114
 5515 0568 0200     		.2byte	0x2
 5516 056a 30       		.byte	0x30
 5517 056b 9F       		.byte	0x9f
 5518 056c 0C000000 		.4byte	.LVL114
 5519 0570 10000000 		.4byte	.LVL115
 5520 0574 0200     		.2byte	0x2
 5521 0576 31       		.byte	0x31
 5522 0577 9F       		.byte	0x9f
 5523 0578 10000000 		.4byte	.LVL115
 5524 057c 12000000 		.4byte	.LVL116
 5525 0580 0200     		.2byte	0x2
 5526 0582 32       		.byte	0x32
 5527 0583 9F       		.byte	0x9f
 5528 0584 12000000 		.4byte	.LVL116
 5529 0588 14000000 		.4byte	.LVL117
 5530 058c 0200     		.2byte	0x2
 5531 058e 33       		.byte	0x33
 5532 058f 9F       		.byte	0x9f
 5533 0590 14000000 		.4byte	.LVL117
 5534 0594 54000000 		.4byte	.LFE35
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 167


 5535 0598 0200     		.2byte	0x2
 5536 059a 35       		.byte	0x35
 5537 059b 9F       		.byte	0x9f
 5538 059c 00000000 		.4byte	0
 5539 05a0 00000000 		.4byte	0
 5540              	.LLST40:
 5541 05a4 18000000 		.4byte	.LVL119
 5542 05a8 22000000 		.4byte	.LVL120
 5543 05ac 0200     		.2byte	0x2
 5544 05ae 31       		.byte	0x31
 5545 05af 9F       		.byte	0x9f
 5546 05b0 00000000 		.4byte	0
 5547 05b4 00000000 		.4byte	0
 5548              	.LLST42:
 5549 05b8 14000000 		.4byte	.LVL117
 5550 05bc 18000000 		.4byte	.LVL119
 5551 05c0 0600     		.2byte	0x6
 5552 05c2 03       		.byte	0x3
 5553 05c3 00000000 		.4byte	CySysTickServiceCallbacks
 5554 05c7 9F       		.byte	0x9f
 5555 05c8 00000000 		.4byte	0
 5556 05cc 00000000 		.4byte	0
 5557              	.LLST43:
 5558 05d0 14000000 		.4byte	.LVL117
 5559 05d4 18000000 		.4byte	.LVL119
 5560 05d8 0200     		.2byte	0x2
 5561 05da 3F       		.byte	0x3f
 5562 05db 9F       		.byte	0x9f
 5563 05dc 00000000 		.4byte	0
 5564 05e0 00000000 		.4byte	0
 5565              	.LLST44:
 5566 05e4 14000000 		.4byte	.LVL117
 5567 05e8 16000000 		.4byte	.LVL118
 5568 05ec 0500     		.2byte	0x5
 5569 05ee 0C       		.byte	0xc
 5570 05ef 3C000020 		.4byte	0x2000003c
 5571 05f3 16000000 		.4byte	.LVL118
 5572 05f7 18000000 		.4byte	.LVL119
 5573 05fb 0200     		.2byte	0x2
 5574 05fd 73       		.byte	0x73
 5575 05fe 00       		.sleb128 0
 5576 05ff 00000000 		.4byte	0
 5577 0603 00000000 		.4byte	0
 5578              	.LLST45:
 5579 0607 2C000000 		.4byte	.LVL121
 5580 060b 30000000 		.4byte	.LVL122
 5581 060f 0100     		.2byte	0x1
 5582 0611 50       		.byte	0x50
 5583 0612 00000000 		.4byte	0
 5584 0616 00000000 		.4byte	0
 5585              	.LLST46:
 5586 061a 00000000 		.4byte	.LVL126
 5587 061e 04000000 		.4byte	.LVL127
 5588 0622 0100     		.2byte	0x1
 5589 0624 50       		.byte	0x50
 5590 0625 04000000 		.4byte	.LVL127
 5591 0629 10000000 		.4byte	.LFE40
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 168


 5592 062d 0400     		.2byte	0x4
 5593 062f F3       		.byte	0xf3
 5594 0630 01       		.uleb128 0x1
 5595 0631 50       		.byte	0x50
 5596 0632 9F       		.byte	0x9f
 5597 0633 00000000 		.4byte	0
 5598 0637 00000000 		.4byte	0
 5599              	.LLST47:
 5600 063b 0A000000 		.4byte	.LVL129
 5601 063f 0E000000 		.4byte	.LVL130
 5602 0643 0200     		.2byte	0x2
 5603 0645 31       		.byte	0x31
 5604 0646 9F       		.byte	0x9f
 5605 0647 00000000 		.4byte	0
 5606 064b 00000000 		.4byte	0
 5607              	.LLST48:
 5608 064f 00000000 		.4byte	.LVL133
 5609 0653 06000000 		.4byte	.LVL134
 5610 0657 0100     		.2byte	0x1
 5611 0659 50       		.byte	0x50
 5612 065a 06000000 		.4byte	.LVL134
 5613 065e 10000000 		.4byte	.LFE47
 5614 0662 0400     		.2byte	0x4
 5615 0664 F3       		.byte	0xf3
 5616 0665 01       		.uleb128 0x1
 5617 0666 50       		.byte	0x50
 5618 0667 9F       		.byte	0x9f
 5619 0668 00000000 		.4byte	0
 5620 066c 00000000 		.4byte	0
 5621              	.LLST49:
 5622 0670 00000000 		.4byte	.LVL135
 5623 0674 04000000 		.4byte	.LVL136
 5624 0678 0100     		.2byte	0x1
 5625 067a 50       		.byte	0x50
 5626 067b 04000000 		.4byte	.LVL136
 5627 067f 0C000000 		.4byte	.LFE48
 5628 0683 0400     		.2byte	0x4
 5629 0685 F3       		.byte	0xf3
 5630 0686 01       		.uleb128 0x1
 5631 0687 50       		.byte	0x50
 5632 0688 9F       		.byte	0x9f
 5633 0689 00000000 		.4byte	0
 5634 068d 00000000 		.4byte	0
 5635              	.LLST50:
 5636 0691 00000000 		.4byte	.LVL138
 5637 0695 08000000 		.4byte	.LVL139
 5638 0699 0100     		.2byte	0x1
 5639 069b 50       		.byte	0x50
 5640 069c 08000000 		.4byte	.LVL139
 5641 06a0 20000000 		.4byte	.LFE51
 5642 06a4 0400     		.2byte	0x4
 5643 06a6 F3       		.byte	0xf3
 5644 06a7 01       		.uleb128 0x1
 5645 06a8 50       		.byte	0x50
 5646 06a9 9F       		.byte	0x9f
 5647 06aa 00000000 		.4byte	0
 5648 06ae 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 169


 5649              	.LLST51:
 5650 06b2 0A000000 		.4byte	.LVL140
 5651 06b6 12000000 		.4byte	.LVL141
 5652 06ba 0100     		.2byte	0x1
 5653 06bc 53       		.byte	0x53
 5654 06bd 12000000 		.4byte	.LVL141
 5655 06c1 20000000 		.4byte	.LFE51
 5656 06c5 0100     		.2byte	0x1
 5657 06c7 50       		.byte	0x50
 5658 06c8 00000000 		.4byte	0
 5659 06cc 00000000 		.4byte	0
 5660              	.LLST52:
 5661 06d0 00000000 		.4byte	.LVL142
 5662 06d4 08000000 		.4byte	.LVL143
 5663 06d8 0100     		.2byte	0x1
 5664 06da 50       		.byte	0x50
 5665 06db 08000000 		.4byte	.LVL143
 5666 06df 20000000 		.4byte	.LFE52
 5667 06e3 0400     		.2byte	0x4
 5668 06e5 F3       		.byte	0xf3
 5669 06e6 01       		.uleb128 0x1
 5670 06e7 50       		.byte	0x50
 5671 06e8 9F       		.byte	0x9f
 5672 06e9 00000000 		.4byte	0
 5673 06ed 00000000 		.4byte	0
 5674              	.LLST53:
 5675 06f1 0A000000 		.4byte	.LVL144
 5676 06f5 12000000 		.4byte	.LVL145
 5677 06f9 0100     		.2byte	0x1
 5678 06fb 53       		.byte	0x53
 5679 06fc 12000000 		.4byte	.LVL145
 5680 0700 20000000 		.4byte	.LFE52
 5681 0704 0100     		.2byte	0x1
 5682 0706 50       		.byte	0x50
 5683 0707 00000000 		.4byte	0
 5684 070b 00000000 		.4byte	0
 5685              	.LLST54:
 5686 070f 00000000 		.4byte	.LVL146
 5687 0713 08000000 		.4byte	.LVL147
 5688 0717 0100     		.2byte	0x1
 5689 0719 50       		.byte	0x50
 5690 071a 08000000 		.4byte	.LVL147
 5691 071e 20000000 		.4byte	.LFE53
 5692 0722 0400     		.2byte	0x4
 5693 0724 F3       		.byte	0xf3
 5694 0725 01       		.uleb128 0x1
 5695 0726 50       		.byte	0x50
 5696 0727 9F       		.byte	0x9f
 5697 0728 00000000 		.4byte	0
 5698 072c 00000000 		.4byte	0
 5699              	.LLST55:
 5700 0730 0A000000 		.4byte	.LVL148
 5701 0734 12000000 		.4byte	.LVL149
 5702 0738 0100     		.2byte	0x1
 5703 073a 53       		.byte	0x53
 5704 073b 12000000 		.4byte	.LVL149
 5705 073f 20000000 		.4byte	.LFE53
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 170


 5706 0743 0100     		.2byte	0x1
 5707 0745 50       		.byte	0x50
 5708 0746 00000000 		.4byte	0
 5709 074a 00000000 		.4byte	0
 5710              	.LLST56:
 5711 074e 00000000 		.4byte	.LVL150
 5712 0752 06000000 		.4byte	.LVL151
 5713 0756 0100     		.2byte	0x1
 5714 0758 50       		.byte	0x50
 5715 0759 06000000 		.4byte	.LVL151
 5716 075d 08000000 		.4byte	.LVL152
 5717 0761 0400     		.2byte	0x4
 5718 0763 F3       		.byte	0xf3
 5719 0764 01       		.uleb128 0x1
 5720 0765 50       		.byte	0x50
 5721 0766 9F       		.byte	0x9f
 5722 0767 08000000 		.4byte	.LVL152
 5723 076b 0E000000 		.4byte	.LVL153
 5724 076f 0100     		.2byte	0x1
 5725 0771 50       		.byte	0x50
 5726 0772 0E000000 		.4byte	.LVL153
 5727 0776 10000000 		.4byte	.LVL154
 5728 077a 0400     		.2byte	0x4
 5729 077c F3       		.byte	0xf3
 5730 077d 01       		.uleb128 0x1
 5731 077e 50       		.byte	0x50
 5732 077f 9F       		.byte	0x9f
 5733 0780 10000000 		.4byte	.LVL154
 5734 0784 16000000 		.4byte	.LVL155
 5735 0788 0100     		.2byte	0x1
 5736 078a 50       		.byte	0x50
 5737 078b 16000000 		.4byte	.LVL155
 5738 078f 3C000000 		.4byte	.LFE54
 5739 0793 0400     		.2byte	0x4
 5740 0795 F3       		.byte	0xf3
 5741 0796 01       		.uleb128 0x1
 5742 0797 50       		.byte	0x50
 5743 0798 9F       		.byte	0x9f
 5744 0799 00000000 		.4byte	0
 5745 079d 00000000 		.4byte	0
 5746              	.LLST57:
 5747 07a1 00000000 		.4byte	.LVL150
 5748 07a5 1C000000 		.4byte	.LVL156
 5749 07a9 0100     		.2byte	0x1
 5750 07ab 51       		.byte	0x51
 5751 07ac 1C000000 		.4byte	.LVL156
 5752 07b0 3C000000 		.4byte	.LFE54
 5753 07b4 0400     		.2byte	0x4
 5754 07b6 F3       		.byte	0xf3
 5755 07b7 01       		.uleb128 0x1
 5756 07b8 51       		.byte	0x51
 5757 07b9 9F       		.byte	0x9f
 5758 07ba 00000000 		.4byte	0
 5759 07be 00000000 		.4byte	0
 5760              	.LLST58:
 5761 07c2 1E000000 		.4byte	.LVL157
 5762 07c6 26000000 		.4byte	.LVL158
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 171


 5763 07ca 0100     		.2byte	0x1
 5764 07cc 53       		.byte	0x53
 5765 07cd 26000000 		.4byte	.LVL158
 5766 07d1 28000000 		.4byte	.LVL159
 5767 07d5 0100     		.2byte	0x1
 5768 07d7 51       		.byte	0x51
 5769 07d8 00000000 		.4byte	0
 5770 07dc 00000000 		.4byte	0
 5771              		.section	.debug_aranges,"",%progbits
 5772 0000 C4010000 		.4byte	0x1c4
 5773 0004 0200     		.2byte	0x2
 5774 0006 00000000 		.4byte	.Ldebug_info0
 5775 000a 04       		.byte	0x4
 5776 000b 00       		.byte	0
 5777 000c 0000     		.2byte	0
 5778 000e 0000     		.2byte	0
 5779 0010 00000000 		.4byte	.LFB1
 5780 0014 14000000 		.4byte	.LFE1-.LFB1
 5781 0018 00000000 		.4byte	.LFB4
 5782 001c 50000000 		.4byte	.LFE4-.LFB4
 5783 0020 00000000 		.4byte	.LFB2
 5784 0024 18000000 		.4byte	.LFE2-.LFB2
 5785 0028 00000000 		.4byte	.LFB5
 5786 002c 10000000 		.4byte	.LFE5-.LFB5
 5787 0030 00000000 		.4byte	.LFB6
 5788 0034 20000000 		.4byte	.LFE6-.LFB6
 5789 0038 00000000 		.4byte	.LFB7
 5790 003c 34000000 		.4byte	.LFE7-.LFB7
 5791 0040 00000000 		.4byte	.LFB8
 5792 0044 18000000 		.4byte	.LFE8-.LFB8
 5793 0048 00000000 		.4byte	.LFB9
 5794 004c 2C000000 		.4byte	.LFE9-.LFB9
 5795 0050 00000000 		.4byte	.LFB12
 5796 0054 20000000 		.4byte	.LFE12-.LFB12
 5797 0058 00000000 		.4byte	.LFB13
 5798 005c 10000000 		.4byte	.LFE13-.LFB13
 5799 0060 00000000 		.4byte	.LFB14
 5800 0064 0C000000 		.4byte	.LFE14-.LFB14
 5801 0068 00000000 		.4byte	.LFB15
 5802 006c 14000000 		.4byte	.LFE15-.LFB15
 5803 0070 00000000 		.4byte	.LFB16
 5804 0074 10000000 		.4byte	.LFE16-.LFB16
 5805 0078 00000000 		.4byte	.LFB17
 5806 007c 0C000000 		.4byte	.LFE17-.LFB17
 5807 0080 00000000 		.4byte	.LFB18
 5808 0084 0E000000 		.4byte	.LFE18-.LFB18
 5809 0088 00000000 		.4byte	.LFB19
 5810 008c 0C000000 		.4byte	.LFE19-.LFB19
 5811 0090 00000000 		.4byte	.LFB20
 5812 0094 10000000 		.4byte	.LFE20-.LFB20
 5813 0098 00000000 		.4byte	.LFB21
 5814 009c 10000000 		.4byte	.LFE21-.LFB21
 5815 00a0 00000000 		.4byte	.LFB22
 5816 00a4 34000000 		.4byte	.LFE22-.LFB22
 5817 00a8 00000000 		.4byte	.LFB23
 5818 00ac 20000000 		.4byte	.LFE23-.LFB23
 5819 00b0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 172


 5820 00b4 14000000 		.4byte	.LFE24-.LFB24
 5821 00b8 00000000 		.4byte	.LFB25
 5822 00bc 18000000 		.4byte	.LFE25-.LFB25
 5823 00c0 00000000 		.4byte	.LFB26
 5824 00c4 14000000 		.4byte	.LFE26-.LFB26
 5825 00c8 00000000 		.4byte	.LFB27
 5826 00cc 14000000 		.4byte	.LFE27-.LFB27
 5827 00d0 00000000 		.4byte	.LFB28
 5828 00d4 14000000 		.4byte	.LFE28-.LFB28
 5829 00d8 00000000 		.4byte	.LFB29
 5830 00dc 04000000 		.4byte	.LFE29-.LFB29
 5831 00e0 00000000 		.4byte	.LFB30
 5832 00e4 18000000 		.4byte	.LFE30-.LFB30
 5833 00e8 00000000 		.4byte	.LFB31
 5834 00ec 2C000000 		.4byte	.LFE31-.LFB31
 5835 00f0 00000000 		.4byte	.LFB3
 5836 00f4 E4000000 		.4byte	.LFE3-.LFB3
 5837 00f8 00000000 		.4byte	.LFB10
 5838 00fc 80000000 		.4byte	.LFE10-.LFB10
 5839 0100 00000000 		.4byte	.LFB32
 5840 0104 14000000 		.4byte	.LFE32-.LFB32
 5841 0108 00000000 		.4byte	.LFB11
 5842 010c 44000000 		.4byte	.LFE11-.LFB11
 5843 0110 00000000 		.4byte	.LFB33
 5844 0114 48000000 		.4byte	.LFE33-.LFB33
 5845 0118 00000000 		.4byte	.LFB35
 5846 011c 54000000 		.4byte	.LFE35-.LFB35
 5847 0120 00000000 		.4byte	.LFB37
 5848 0124 10000000 		.4byte	.LFE37-.LFB37
 5849 0128 00000000 		.4byte	.LFB38
 5850 012c 10000000 		.4byte	.LFE38-.LFB38
 5851 0130 00000000 		.4byte	.LFB36
 5852 0134 18000000 		.4byte	.LFE36-.LFB36
 5853 0138 00000000 		.4byte	.LFB34
 5854 013c 1C000000 		.4byte	.LFE34-.LFB34
 5855 0140 00000000 		.4byte	.LFB39
 5856 0144 10000000 		.4byte	.LFE39-.LFB39
 5857 0148 00000000 		.4byte	.LFB40
 5858 014c 10000000 		.4byte	.LFE40-.LFB40
 5859 0150 00000000 		.4byte	.LFB41
 5860 0154 10000000 		.4byte	.LFE41-.LFB41
 5861 0158 00000000 		.4byte	.LFB42
 5862 015c 10000000 		.4byte	.LFE42-.LFB42
 5863 0160 00000000 		.4byte	.LFB43
 5864 0164 18000000 		.4byte	.LFE43-.LFB43
 5865 0168 00000000 		.4byte	.LFB44
 5866 016c 10000000 		.4byte	.LFE44-.LFB44
 5867 0170 00000000 		.4byte	.LFB45
 5868 0174 10000000 		.4byte	.LFE45-.LFB45
 5869 0178 00000000 		.4byte	.LFB49
 5870 017c 24000000 		.4byte	.LFE49-.LFB49
 5871 0180 00000000 		.4byte	.LFB46
 5872 0184 0C000000 		.4byte	.LFE46-.LFB46
 5873 0188 00000000 		.4byte	.LFB47
 5874 018c 10000000 		.4byte	.LFE47-.LFB47
 5875 0190 00000000 		.4byte	.LFB48
 5876 0194 0C000000 		.4byte	.LFE48-.LFB48
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 173


 5877 0198 00000000 		.4byte	.LFB50
 5878 019c 74000000 		.4byte	.LFE50-.LFB50
 5879 01a0 00000000 		.4byte	.LFB51
 5880 01a4 20000000 		.4byte	.LFE51-.LFB51
 5881 01a8 00000000 		.4byte	.LFB52
 5882 01ac 20000000 		.4byte	.LFE52-.LFB52
 5883 01b0 00000000 		.4byte	.LFB53
 5884 01b4 20000000 		.4byte	.LFE53-.LFB53
 5885 01b8 00000000 		.4byte	.LFB54
 5886 01bc 3C000000 		.4byte	.LFE54-.LFB54
 5887 01c0 00000000 		.4byte	0
 5888 01c4 00000000 		.4byte	0
 5889              		.section	.debug_ranges,"",%progbits
 5890              	.Ldebug_ranges0:
 5891 0000 2C000000 		.4byte	.LBB16
 5892 0004 2E000000 		.4byte	.LBE16
 5893 0008 2E000000 		.4byte	.LBB19
 5894 000c 30000000 		.4byte	.LBE19
 5895 0010 00000000 		.4byte	0
 5896 0014 00000000 		.4byte	0
 5897 0018 04000000 		.4byte	.LBB30
 5898 001c 06000000 		.4byte	.LBE30
 5899 0020 18000000 		.4byte	.LBB43
 5900 0024 1E000000 		.4byte	.LBE43
 5901 0028 20000000 		.4byte	.LBB44
 5902 002c 22000000 		.4byte	.LBE44
 5903 0030 00000000 		.4byte	0
 5904 0034 00000000 		.4byte	0
 5905 0038 08000000 		.4byte	.LBB37
 5906 003c 0A000000 		.4byte	.LBE37
 5907 0040 14000000 		.4byte	.LBB41
 5908 0044 16000000 		.4byte	.LBE41
 5909 0048 16000000 		.4byte	.LBB42
 5910 004c 18000000 		.4byte	.LBE42
 5911 0050 00000000 		.4byte	0
 5912 0054 00000000 		.4byte	0
 5913 0058 04000000 		.4byte	.LBB51
 5914 005c 06000000 		.4byte	.LBE51
 5915 0060 0A000000 		.4byte	.LBB54
 5916 0064 0E000000 		.4byte	.LBE54
 5917 0068 00000000 		.4byte	0
 5918 006c 00000000 		.4byte	0
 5919 0070 00000000 		.4byte	.LFB1
 5920 0074 14000000 		.4byte	.LFE1
 5921 0078 00000000 		.4byte	.LFB4
 5922 007c 50000000 		.4byte	.LFE4
 5923 0080 00000000 		.4byte	.LFB2
 5924 0084 18000000 		.4byte	.LFE2
 5925 0088 00000000 		.4byte	.LFB5
 5926 008c 10000000 		.4byte	.LFE5
 5927 0090 00000000 		.4byte	.LFB6
 5928 0094 20000000 		.4byte	.LFE6
 5929 0098 00000000 		.4byte	.LFB7
 5930 009c 34000000 		.4byte	.LFE7
 5931 00a0 00000000 		.4byte	.LFB8
 5932 00a4 18000000 		.4byte	.LFE8
 5933 00a8 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 174


 5934 00ac 2C000000 		.4byte	.LFE9
 5935 00b0 00000000 		.4byte	.LFB12
 5936 00b4 20000000 		.4byte	.LFE12
 5937 00b8 00000000 		.4byte	.LFB13
 5938 00bc 10000000 		.4byte	.LFE13
 5939 00c0 00000000 		.4byte	.LFB14
 5940 00c4 0C000000 		.4byte	.LFE14
 5941 00c8 00000000 		.4byte	.LFB15
 5942 00cc 14000000 		.4byte	.LFE15
 5943 00d0 00000000 		.4byte	.LFB16
 5944 00d4 10000000 		.4byte	.LFE16
 5945 00d8 00000000 		.4byte	.LFB17
 5946 00dc 0C000000 		.4byte	.LFE17
 5947 00e0 00000000 		.4byte	.LFB18
 5948 00e4 0E000000 		.4byte	.LFE18
 5949 00e8 00000000 		.4byte	.LFB19
 5950 00ec 0C000000 		.4byte	.LFE19
 5951 00f0 00000000 		.4byte	.LFB20
 5952 00f4 10000000 		.4byte	.LFE20
 5953 00f8 00000000 		.4byte	.LFB21
 5954 00fc 10000000 		.4byte	.LFE21
 5955 0100 00000000 		.4byte	.LFB22
 5956 0104 34000000 		.4byte	.LFE22
 5957 0108 00000000 		.4byte	.LFB23
 5958 010c 20000000 		.4byte	.LFE23
 5959 0110 00000000 		.4byte	.LFB24
 5960 0114 14000000 		.4byte	.LFE24
 5961 0118 00000000 		.4byte	.LFB25
 5962 011c 18000000 		.4byte	.LFE25
 5963 0120 00000000 		.4byte	.LFB26
 5964 0124 14000000 		.4byte	.LFE26
 5965 0128 00000000 		.4byte	.LFB27
 5966 012c 14000000 		.4byte	.LFE27
 5967 0130 00000000 		.4byte	.LFB28
 5968 0134 14000000 		.4byte	.LFE28
 5969 0138 00000000 		.4byte	.LFB29
 5970 013c 04000000 		.4byte	.LFE29
 5971 0140 00000000 		.4byte	.LFB30
 5972 0144 18000000 		.4byte	.LFE30
 5973 0148 00000000 		.4byte	.LFB31
 5974 014c 2C000000 		.4byte	.LFE31
 5975 0150 00000000 		.4byte	.LFB3
 5976 0154 E4000000 		.4byte	.LFE3
 5977 0158 00000000 		.4byte	.LFB10
 5978 015c 80000000 		.4byte	.LFE10
 5979 0160 00000000 		.4byte	.LFB32
 5980 0164 14000000 		.4byte	.LFE32
 5981 0168 00000000 		.4byte	.LFB11
 5982 016c 44000000 		.4byte	.LFE11
 5983 0170 00000000 		.4byte	.LFB33
 5984 0174 48000000 		.4byte	.LFE33
 5985 0178 00000000 		.4byte	.LFB35
 5986 017c 54000000 		.4byte	.LFE35
 5987 0180 00000000 		.4byte	.LFB37
 5988 0184 10000000 		.4byte	.LFE37
 5989 0188 00000000 		.4byte	.LFB38
 5990 018c 10000000 		.4byte	.LFE38
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 175


 5991 0190 00000000 		.4byte	.LFB36
 5992 0194 18000000 		.4byte	.LFE36
 5993 0198 00000000 		.4byte	.LFB34
 5994 019c 1C000000 		.4byte	.LFE34
 5995 01a0 00000000 		.4byte	.LFB39
 5996 01a4 10000000 		.4byte	.LFE39
 5997 01a8 00000000 		.4byte	.LFB40
 5998 01ac 10000000 		.4byte	.LFE40
 5999 01b0 00000000 		.4byte	.LFB41
 6000 01b4 10000000 		.4byte	.LFE41
 6001 01b8 00000000 		.4byte	.LFB42
 6002 01bc 10000000 		.4byte	.LFE42
 6003 01c0 00000000 		.4byte	.LFB43
 6004 01c4 18000000 		.4byte	.LFE43
 6005 01c8 00000000 		.4byte	.LFB44
 6006 01cc 10000000 		.4byte	.LFE44
 6007 01d0 00000000 		.4byte	.LFB45
 6008 01d4 10000000 		.4byte	.LFE45
 6009 01d8 00000000 		.4byte	.LFB49
 6010 01dc 24000000 		.4byte	.LFE49
 6011 01e0 00000000 		.4byte	.LFB46
 6012 01e4 0C000000 		.4byte	.LFE46
 6013 01e8 00000000 		.4byte	.LFB47
 6014 01ec 10000000 		.4byte	.LFE47
 6015 01f0 00000000 		.4byte	.LFB48
 6016 01f4 0C000000 		.4byte	.LFE48
 6017 01f8 00000000 		.4byte	.LFB50
 6018 01fc 74000000 		.4byte	.LFE50
 6019 0200 00000000 		.4byte	.LFB51
 6020 0204 20000000 		.4byte	.LFE51
 6021 0208 00000000 		.4byte	.LFB52
 6022 020c 20000000 		.4byte	.LFE52
 6023 0210 00000000 		.4byte	.LFB53
 6024 0214 20000000 		.4byte	.LFE53
 6025 0218 00000000 		.4byte	.LFB54
 6026 021c 3C000000 		.4byte	.LFE54
 6027 0220 00000000 		.4byte	0
 6028 0224 00000000 		.4byte	0
 6029              		.section	.debug_line,"",%progbits
 6030              	.Ldebug_line0:
 6031 0000 C1050000 		.section	.debug_str,"MS",%progbits,1
 6031      02006700 
 6031      00000201 
 6031      FB0E0D00 
 6031      01010101 
 6032              	.LASF36:
 6033 0000 72616D56 		.ascii	"ramVectorTable\000"
 6033      6563746F 
 6033      72546162 
 6033      6C6500
 6034              	.LASF10:
 6035 000f 75696E74 		.ascii	"uint16\000"
 6035      313600
 6036              	.LASF56:
 6037 0016 696E7453 		.ascii	"intState\000"
 6037      74617465 
 6037      00
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 176


 6038              	.LASF39:
 6039 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6039      73436C6B 
 6039      57726974 
 6039      65486663 
 6039      6C6B4469 
 6040              	.LASF113:
 6041 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 6041      73436C6B 
 6041      50756D70 
 6041      436F6E66 
 6041      696700
 6042              	.LASF35:
 6043 004b 6F6C6449 		.ascii	"oldIsr\000"
 6043      737200
 6044              	.LASF121:
 6045 0052 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Desktop\\Dashboard-Firmware-FE10\\Da"
 6045      635C486F 
 6045      6D655C44 
 6045      65736B74 
 6045      6F705C44 
 6046 007f 7368626F 		.ascii	"shboard.cydsn\000"
 6046      6172642E 
 6046      63796473 
 6046      6E00
 6047              	.LASF96:
 6048 008d 72657456 		.ascii	"retVal\000"
 6048      616C00
 6049              	.LASF55:
 6050 0094 43794469 		.ascii	"CyDisableInts\000"
 6050      7361626C 
 6050      65496E74 
 6050      7300
 6051              	.LASF7:
 6052 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 6052      206C6F6E 
 6052      6720756E 
 6052      7369676E 
 6052      65642069 
 6053              	.LASF76:
 6054 00b9 70617261 		.ascii	"parameters\000"
 6054      6D657465 
 6054      727300
 6055              	.LASF57:
 6056 00c4 4379456E 		.ascii	"CyEnableInts\000"
 6056      61626C65 
 6056      496E7473 
 6056      00
 6057              	.LASF105:
 6058 00d1 696E7465 		.ascii	"interfaceNumber\000"
 6058      72666163 
 6058      654E756D 
 6058      62657200 
 6059              	.LASF72:
 6060 00e1 4379536F 		.ascii	"CySoftwareReset\000"
 6060      66747761 
 6060      72655265 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 177


 6060      73657400 
 6061              	.LASF86:
 6062 00f1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6062      73546963 
 6062      6B456E61 
 6062      626C6549 
 6062      6E746572 
 6063              	.LASF67:
 6064 010a 4379496E 		.ascii	"CyIntGetState\000"
 6064      74476574 
 6064      53746174 
 6064      6500
 6065              	.LASF6:
 6066 0118 6C6F6E67 		.ascii	"long long int\000"
 6066      206C6F6E 
 6066      6720696E 
 6066      7400
 6067              	.LASF0:
 6068 0126 7369676E 		.ascii	"signed char\000"
 6068      65642063 
 6068      68617200 
 6069              	.LASF21:
 6070 0132 66726571 		.ascii	"freq\000"
 6070      00
 6071              	.LASF83:
 6072 0137 43794465 		.ascii	"CyDelayFreq\000"
 6072      6C617946 
 6072      72657100 
 6073              	.LASF22:
 6074 0143 696E7465 		.ascii	"interruptState\000"
 6074      72727570 
 6074      74537461 
 6074      746500
 6075              	.LASF24:
 6076 0152 6C664C69 		.ascii	"lfLimit\000"
 6076      6D697400 
 6077              	.LASF90:
 6078 015a 43795379 		.ascii	"CySysTickGetReload\000"
 6078      73546963 
 6078      6B476574 
 6078      52656C6F 
 6078      616400
 6079              	.LASF49:
 6080 016d 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6080      73436C6B 
 6080      496D6F47 
 6080      65745763 
 6080      6F4C6F63 
 6081              	.LASF78:
 6082 0183 77636F4C 		.ascii	"wcoLock\000"
 6082      6F636B00 
 6083              	.LASF4:
 6084 018b 6C6F6E67 		.ascii	"long int\000"
 6084      20696E74 
 6084      00
 6085              	.LASF68:
 6086 0194 4379496E 		.ascii	"CyIntDisable\000"
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 178


 6086      74446973 
 6086      61626C65 
 6086      00
 6087              	.LASF77:
 6088 01a1 72656756 		.ascii	"regValues\000"
 6088      616C7565 
 6088      7300
 6089              	.LASF41:
 6090 01ab 43795379 		.ascii	"CySysEnablePumpClock\000"
 6090      73456E61 
 6090      626C6550 
 6090      756D7043 
 6090      6C6F636B 
 6091              	.LASF9:
 6092 01c0 75696E74 		.ascii	"uint8\000"
 6092      3800
 6093              	.LASF108:
 6094 01c6 63796465 		.ascii	"cydelayFreqKhz\000"
 6094      6C617946 
 6094      7265714B 
 6094      687A00
 6095              	.LASF43:
 6096 01d5 656E6162 		.ascii	"enable\000"
 6096      6C6500
 6097              	.LASF13:
 6098 01dc 646F7562 		.ascii	"double\000"
 6098      6C6500
 6099              	.LASF64:
 6100 01e3 73686966 		.ascii	"shift\000"
 6100      7400
 6101              	.LASF28:
 6102 01e9 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6102      734C7664 
 6102      436C6561 
 6102      72496E74 
 6102      65727275 
 6103              	.LASF11:
 6104 0200 75696E74 		.ascii	"uint32\000"
 6104      333200
 6105              	.LASF58:
 6106 0207 6D61736B 		.ascii	"mask\000"
 6106      00
 6107              	.LASF51:
 6108 020c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6108      73436C6B 
 6108      47657453 
 6108      7973636C 
 6108      6B536F75 
 6109              	.LASF26:
 6110 0224 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6110      73436C6B 
 6110      496D6F45 
 6110      6E61626C 
 6110      6557636F 
 6111              	.LASF65:
 6112 023d 4379496E 		.ascii	"CyIntGetPriority\000"
 6112      74476574 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 179


 6112      5072696F 
 6112      72697479 
 6112      00
 6113              	.LASF110:
 6114 024e 63796465 		.ascii	"cydelay32kMs\000"
 6114      6C617933 
 6114      326B4D73 
 6114      00
 6115              	.LASF84:
 6116 025b 43795379 		.ascii	"CySysTickInit\000"
 6116      73546963 
 6116      6B496E69 
 6116      7400
 6117              	.LASF32:
 6118 0269 76616C75 		.ascii	"value\000"
 6118      6500
 6119              	.LASF31:
 6120 026f 636C6F63 		.ascii	"clockSource\000"
 6120      6B536F75 
 6120      72636500 
 6121              	.LASF98:
 6122 027b 43794765 		.ascii	"CyGetUniqueId\000"
 6122      74556E69 
 6122      71756549 
 6122      6400
 6123              	.LASF93:
 6124 0289 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6124      73546963 
 6124      6B476574 
 6124      436F756E 
 6124      74466C61 
 6125              	.LASF8:
 6126 029f 756E7369 		.ascii	"unsigned int\000"
 6126      676E6564 
 6126      20696E74 
 6126      00
 6127              	.LASF29:
 6128 02ac 43795379 		.ascii	"CySysTickClear\000"
 6128      73546963 
 6128      6B436C65 
 6128      617200
 6129              	.LASF5:
 6130 02bb 6C6F6E67 		.ascii	"long unsigned int\000"
 6130      20756E73 
 6130      69676E65 
 6130      6420696E 
 6130      7400
 6131              	.LASF50:
 6132 02cd 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6132      734C7664 
 6132      47657449 
 6132      6E746572 
 6132      72757074 
 6133              	.LASF38:
 6134 02e8 43795379 		.ascii	"CySysClkImoStop\000"
 6134      73436C6B 
 6134      496D6F53 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 180


 6134      746F7000 
 6135              	.LASF114:
 6136 02f8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6136      74657243 
 6136      72697469 
 6136      63616C53 
 6136      65637469 
 6137              	.LASF69:
 6138 030f 4379496E 		.ascii	"CyIntSetPending\000"
 6138      74536574 
 6138      50656E64 
 6138      696E6700 
 6139              	.LASF97:
 6140 031f 43795379 		.ascii	"CySysTickGetCallback\000"
 6140      73546963 
 6140      6B476574 
 6140      43616C6C 
 6140      6261636B 
 6141              	.LASF52:
 6142 0334 43795379 		.ascii	"CySysGetResetReason\000"
 6142      73476574 
 6142      52657365 
 6142      74526561 
 6142      736F6E00 
 6143              	.LASF3:
 6144 0348 73686F72 		.ascii	"short unsigned int\000"
 6144      7420756E 
 6144      7369676E 
 6144      65642069 
 6144      6E7400
 6145              	.LASF23:
 6146 035b 72656754 		.ascii	"regTmp\000"
 6146      6D7000
 6147              	.LASF27:
 6148 0362 43795379 		.ascii	"CySysTickSetClockSource\000"
 6148      73546963 
 6148      6B536574 
 6148      436C6F63 
 6148      6B536F75 
 6149              	.LASF60:
 6150 037a 4379496E 		.ascii	"CyIntSetVector\000"
 6150      74536574 
 6150      56656374 
 6150      6F7200
 6151              	.LASF33:
 6152 0389 6E756D62 		.ascii	"number\000"
 6152      657200
 6153              	.LASF63:
 6154 0390 7072696F 		.ascii	"priority\000"
 6154      72697479 
 6154      00
 6155              	.LASF75:
 6156 0399 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6156      73436C6B 
 6156      57726974 
 6156      65496D6F 
 6156      46726571 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 181


 6157              	.LASF102:
 6158 03ae 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6158      73536574 
 6158      466C6173 
 6158      68416363 
 6158      65737341 
 6159              	.LASF123:
 6160 03cd 4379496E 		.ascii	"CyIntSetSysVector\000"
 6160      74536574 
 6160      53797356 
 6160      6563746F 
 6160      7200
 6161              	.LASF37:
 6162 03df 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6162      73436C6B 
 6162      496D6F44 
 6162      69736162 
 6162      6C655763 
 6163              	.LASF16:
 6164 03f9 72656733 		.ascii	"reg32\000"
 6164      3200
 6165              	.LASF88:
 6166 03ff 43795379 		.ascii	"CySysTickStart\000"
 6166      73546963 
 6166      6B537461 
 6166      727400
 6167              	.LASF54:
 6168 040e 72657475 		.ascii	"returnStatus\000"
 6168      726E5374 
 6168      61747573 
 6168      00
 6169              	.LASF101:
 6170 041b 736F7572 		.ascii	"source\000"
 6170      636500
 6171              	.LASF19:
 6172 0422 73697A65 		.ascii	"sizetype\000"
 6172      74797065 
 6172      00
 6173              	.LASF111:
 6174 042b 43795379 		.ascii	"CySysTickInitVar\000"
 6174      73546963 
 6174      6B496E69 
 6174      74566172 
 6174      00
 6175              	.LASF104:
 6176 043c 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6176      73536574 
 6176      50657269 
 6176      70686572 
 6176      616C4163 
 6177              	.LASF70:
 6178 0460 4379496E 		.ascii	"CyIntClearPending\000"
 6178      74436C65 
 6178      61725065 
 6178      6E64696E 
 6178      6700
 6179              	.LASF18:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 182


 6180 0472 6C6F6E67 		.ascii	"long double\000"
 6180      20646F75 
 6180      626C6500 
 6181              	.LASF34:
 6182 047e 61646472 		.ascii	"address\000"
 6182      65737300 
 6183              	.LASF119:
 6184 0486 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6184      43313120 
 6184      352E342E 
 6184      31203230 
 6184      31363036 
 6185 04b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6185      20726576 
 6185      6973696F 
 6185      6E203233 
 6185      37373135 
 6186 04ec 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6186      66756E63 
 6186      74696F6E 
 6186      2D736563 
 6186      74696F6E 
 6187              	.LASF44:
 6188 0514 73797363 		.ascii	"sysclkSource\000"
 6188      6C6B536F 
 6188      75726365 
 6188      00
 6189              	.LASF95:
 6190 0521 66756E63 		.ascii	"function\000"
 6190      74696F6E 
 6190      00
 6191              	.LASF112:
 6192 052a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6192      6F467265 
 6192      714D687A 
 6192      32526567 
 6192      00
 6193              	.LASF91:
 6194 053b 43795379 		.ascii	"CySysTickGetValue\000"
 6194      73546963 
 6194      6B476574 
 6194      56616C75 
 6194      6500
 6195              	.LASF107:
 6196 054d 63796465 		.ascii	"cydelayFreqHz\000"
 6196      6C617946 
 6196      72657148 
 6196      7A00
 6197              	.LASF62:
 6198 055b 4379496E 		.ascii	"CyIntSetPriority\000"
 6198      74536574 
 6198      5072696F 
 6198      72697479 
 6198      00
 6199              	.LASF12:
 6200 056c 666C6F61 		.ascii	"float\000"
 6200      7400
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 183


 6201              	.LASF115:
 6202 0572 43794578 		.ascii	"CyExitCriticalSection\000"
 6202      69744372 
 6202      69746963 
 6202      616C5365 
 6202      6374696F 
 6203              	.LASF81:
 6204 0588 43795379 		.ascii	"CySysLvdEnable\000"
 6204      734C7664 
 6204      456E6162 
 6204      6C6500
 6205              	.LASF20:
 6206 0597 63795379 		.ascii	"cySysTickCallback\000"
 6206      73546963 
 6206      6B43616C 
 6206      6C626163 
 6206      6B00
 6207              	.LASF61:
 6208 05a9 4379496E 		.ascii	"CyIntGetVector\000"
 6208      74476574 
 6208      56656374 
 6208      6F7200
 6209              	.LASF74:
 6210 05b8 6D696C6C 		.ascii	"milliseconds\000"
 6210      69736563 
 6210      6F6E6473 
 6210      00
 6211              	.LASF116:
 6212 05c5 43794465 		.ascii	"CyDelayCycles\000"
 6212      6C617943 
 6212      79636C65 
 6212      7300
 6213              	.LASF15:
 6214 05d3 72656738 		.ascii	"reg8\000"
 6214      00
 6215              	.LASF82:
 6216 05d8 74687265 		.ascii	"threshold\000"
 6216      73686F6C 
 6216      6400
 6217              	.LASF71:
 6218 05e2 43794861 		.ascii	"CyHalt\000"
 6218      6C7400
 6219              	.LASF100:
 6220 05e9 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6220      73536574 
 6220      52616D41 
 6220      63636573 
 6220      73417262 
 6221              	.LASF1:
 6222 0606 756E7369 		.ascii	"unsigned char\000"
 6222      676E6564 
 6222      20636861 
 6222      7200
 6223              	.LASF53:
 6224 0614 72656173 		.ascii	"reason\000"
 6224      6F6E00
 6225              	.LASF2:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 184


 6226 061b 73686F72 		.ascii	"short int\000"
 6226      7420696E 
 6226      7400
 6227              	.LASF66:
 6228 0625 4379496E 		.ascii	"CyIntEnable\000"
 6228      74456E61 
 6228      626C6500 
 6229              	.LASF59:
 6230 0631 4379496E 		.ascii	"CyIntGetSysVector\000"
 6230      74476574 
 6230      53797356 
 6230      6563746F 
 6230      7200
 6231              	.LASF42:
 6232 0643 636C6B53 		.ascii	"clkSelect\000"
 6232      656C6563 
 6232      7400
 6233              	.LASF79:
 6234 064d 43794465 		.ascii	"CyDelayUs\000"
 6234      6C617955 
 6234      7300
 6235              	.LASF122:
 6236 0657 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6236      73546963 
 6236      6B536572 
 6236      76696365 
 6236      43616C6C 
 6237              	.LASF14:
 6238 0671 63686172 		.ascii	"char\000"
 6238      00
 6239              	.LASF17:
 6240 0676 63796973 		.ascii	"cyisraddress\000"
 6240      72616464 
 6240      72657373 
 6240      00
 6241              	.LASF87:
 6242 0683 43795379 		.ascii	"CySysTickEnable\000"
 6242      73546963 
 6242      6B456E61 
 6242      626C6500 
 6243              	.LASF45:
 6244 0693 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6244      73436C6B 
 6244      57726974 
 6244      65537973 
 6244      636C6B44 
 6245              	.LASF94:
 6246 06aa 43795379 		.ascii	"CySysTickSetCallback\000"
 6246      73546963 
 6246      6B536574 
 6246      43616C6C 
 6246      6261636B 
 6247              	.LASF106:
 6248 06bf 43795379 		.ascii	"CySysTickCallbacks\000"
 6248      73546963 
 6248      6B43616C 
 6248      6C626163 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 185


 6248      6B7300
 6249              	.LASF99:
 6250 06d2 756E6971 		.ascii	"uniqueId\000"
 6250      75654964 
 6250      00
 6251              	.LASF25:
 6252 06db 666C6173 		.ascii	"flashCtlReg\000"
 6252      6843746C 
 6252      52656700 
 6253              	.LASF73:
 6254 06e7 43794465 		.ascii	"CyDelay\000"
 6254      6C617900 
 6255              	.LASF92:
 6256 06ef 43795379 		.ascii	"CySysTickGetClockSource\000"
 6256      73546963 
 6256      6B476574 
 6256      436C6F63 
 6256      6B536F75 
 6257              	.LASF89:
 6258 0707 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6258      73546963 
 6258      6B446973 
 6258      61626C65 
 6258      496E7465 
 6259              	.LASF48:
 6260 0721 43795379 		.ascii	"CySysLvdDisable\000"
 6260      734C7664 
 6260      44697361 
 6260      626C6500 
 6261              	.LASF109:
 6262 0731 63796465 		.ascii	"cydelayFreqMhz\000"
 6262      6C617946 
 6262      7265714D 
 6262      687A00
 6263              	.LASF118:
 6264 0740 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6264      73436C6B 
 6264      57636F45 
 6264      6E61626C 
 6264      656400
 6265              	.LASF103:
 6266 0753 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6266      73536574 
 6266      446D6163 
 6266      41636365 
 6266      73734172 
 6267              	.LASF85:
 6268 0771 43795379 		.ascii	"CySysTickStop\000"
 6268      73546963 
 6268      6B53746F 
 6268      7000
 6269              	.LASF46:
 6270 077f 64697669 		.ascii	"divider\000"
 6270      64657200 
 6271              	.LASF47:
 6272 0787 43795379 		.ascii	"CySysClkImoStart\000"
 6272      73436C6B 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccZAR4Lf.s 			page 186


 6272      496D6F53 
 6272      74617274 
 6272      00
 6273              	.LASF117:
 6274 0798 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6274      73466C61 
 6274      73685365 
 6274      74576169 
 6274      74437963 
 6275              	.LASF120:
 6276 07b0 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6276      72617465 
 6276      645F536F 
 6276      75726365 
 6276      5C50536F 
 6277              	.LASF80:
 6278 07cf 6D696372 		.ascii	"microseconds\000"
 6278      6F736563 
 6278      6F6E6473 
 6278      00
 6279              	.LASF40:
 6280 07dc 746D7052 		.ascii	"tmpReg\000"
 6280      656700
 6281              	.LASF30:
 6282 07e3 43795379 		.ascii	"CySysTickSetReload\000"
 6282      73546963 
 6282      6B536574 
 6282      52656C6F 
 6282      616400
 6283              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
