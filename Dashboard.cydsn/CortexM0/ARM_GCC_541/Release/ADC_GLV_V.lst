ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_GLV_V.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_GLV_V_Init,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_GLV_V_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_GLV_V_Init, %function
  25              	ADC_GLV_V_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_GLV_V.c"
   1:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_GLV_V.c **** * File Name: ADC_GLV_V.c
   3:Generated_Source\PSoC4/ADC_GLV_V.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_GLV_V.c **** *
   5:Generated_Source\PSoC4/ADC_GLV_V.c **** * Description:
   6:Generated_Source\PSoC4/ADC_GLV_V.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_GLV_V.c **** *
   9:Generated_Source\PSoC4/ADC_GLV_V.c **** * Note:
  10:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  11:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_GLV_V.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_GLV_V.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_GLV_V.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_GLV_V.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  18:Generated_Source\PSoC4/ADC_GLV_V.c **** #include "ADC_GLV_V.h"
  19:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  20:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  21:Generated_Source\PSoC4/ADC_GLV_V.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_GLV_V.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_GLV_V.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_GLV_V.c **** uint8 ADC_GLV_V_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_GLV_V.c **** volatile int16 ADC_GLV_V_offset[ADC_GLV_V_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_GLV_V.c **** volatile int32 ADC_GLV_V_countsPer10Volt[ADC_GLV_V_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  28:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  29:Generated_Source\PSoC4/ADC_GLV_V.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_GLV_V.c **** * Local data allocation
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 2


  31:Generated_Source\PSoC4/ADC_GLV_V.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_GLV_V.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_GLV_V.c **** static const uint32 CYCODE ADC_GLV_V_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  35:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  36:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_Start
  38:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  40:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_GLV_V.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_GLV_V.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  45:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
  47:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  48:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
  49:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
  50:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  51:Generated_Source\PSoC4/ADC_GLV_V.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_GLV_V.c **** *  The ADC_GLV_V_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_GLV_V.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_GLV_V.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_GLV_V.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_Start() routine.
  57:Generated_Source\PSoC4/ADC_GLV_V.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_GLV_V.c **** *  to zero before call of ADC_GLV_V_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_Init() and ADC_GLV_V_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_Start() routine.
  61:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  62:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_Start(void)
  64:Generated_Source\PSoC4/ADC_GLV_V.c **** {
  65:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_GLV_V.c ****     if(ADC_GLV_V_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
  68:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_Init();
  69:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
  71:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_Enable();
  72:Generated_Source\PSoC4/ADC_GLV_V.c **** }
  73:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  74:Generated_Source\PSoC4/ADC_GLV_V.c **** 
  75:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_Init
  77:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  79:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_GLV_V.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_Start().
  83:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  84:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
  86:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  87:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 3


  88:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
  89:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  90:Generated_Source\PSoC4/ADC_GLV_V.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_GLV_V.c **** *  The ADC_GLV_V_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_GLV_V.c **** *
  93:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_Init(void)
  95:Generated_Source\PSoC4/ADC_GLV_V.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_GLV_V.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_GLV_V.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_GLV_V.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 100:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_GLV_V.c ****         static const uint8 CYCODE ADC_GLV_V_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 103:Generated_Source\PSoC4/ADC_GLV_V.c ****             (uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_GLV_V.c ****             (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_GLV_V.c ****             ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_GLV_V.c ****              (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 8u */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 4


 135:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ,(uint8)(ADC_GLV_V_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (uint8)ADC_GLV_V_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_GLV_V.c ****         };
 168:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 170:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_GLV_V.c ****         CyIntSetPriority(ADC_GLV_V_INTC_NUMBER, ADC_GLV_V_INTC_PRIOR_NUMBER);
  38              		.loc 1 172 0
  39 0002 0321     		movs	r1, #3
  40 0004 1020     		movs	r0, #16
  41 0006 FFF7FEFF 		bl	CyIntSetPriority
  42              	.LVL0:
 173:Generated_Source\PSoC4/ADC_GLV_V.c ****         (void)CyIntSetVector(ADC_GLV_V_INTC_NUMBER, &ADC_GLV_V_ISR);
  43              		.loc 1 173 0
  44 000a 2349     		ldr	r1, .L5
  45 000c 1020     		movs	r0, #16
  46 000e FFF7FEFF 		bl	CyIntSetVector
  47              	.LVL1:
 174:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif   /* End ADC_GLV_V_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 176:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CHAN_EN_REG = ADC_GLV_V_DEFAULT_EN_CHANNELS;
  48              		.loc 1 177 0
  49 0012 0322     		movs	r2, #3
  50 0014 214B     		ldr	r3, .L5+4
  51 0016 1A60     		str	r2, [r3]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 5


 178:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_GLV_V.c ****         (((ADC_GLV_V_PUMP_CTRL_REG & ADC_GLV_V_PUMP_CTRL_ENABLED) != 0u) ? 
  52              		.loc 1 180 0
  53 0018 214B     		ldr	r3, .L5+8
  54 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_DEFAULT_CTRL_REG_CFG | 
  55              		.loc 1 178 0
  56 001c 002B     		cmp	r3, #0
  57 001e 01DB     		blt	.L3
  58 0020 2049     		ldr	r1, .L5+12
  59 0022 00E0     		b	.L2
  60              	.L3:
  61 0024 2049     		ldr	r1, .L5+16
  62              	.L2:
 178:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_DEFAULT_CTRL_REG_CFG | 
  63              		.loc 1 178 0 is_stmt 0 discriminator 4
  64 0026 214A     		ldr	r2, .L5+20
 181:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_CTRL_REG = ADC_GLV_V_DEFAULT_SAMPLE_CTRL_REG_CFG;
 183:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG = ADC_GLV_V_DEFAULT_RANGE_THRES_REG_CFG;
 184:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_COND_REG  = ADC_GLV_V_COMPARE_MODE;
 185:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME01_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME01_REG_CFG;
 186:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME23_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME23_REG_CFG;
 187:Generated_Source\PSoC4/ADC_GLV_V.c ****     
 188:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_MUX_SWITCH0_REG |= ADC_GLV_V_DEFAULT_MUX_SWITCH0;
  65              		.loc 1 190 0 is_stmt 1 discriminator 4
  66 0028 8020     		movs	r0, #128
 178:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_DEFAULT_CTRL_REG_CFG | 
  67              		.loc 1 178 0 discriminator 4
  68 002a 1368     		ldr	r3, [r2]
  69              		.loc 1 190 0 discriminator 4
  70 002c 4002     		lsls	r0, r0, #9
 178:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_DEFAULT_CTRL_REG_CFG | 
  71              		.loc 1 178 0 discriminator 4
  72 002e 0B43     		orrs	r3, r1
  73 0030 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG = ADC_GLV_V_DEFAULT_RANGE_THRES_REG_CFG;
  74              		.loc 1 182 0 discriminator 4
  75 0032 1F4A     		ldr	r2, .L5+24
  76 0034 1F4B     		ldr	r3, .L5+28
 185:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME23_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME23_REG_CFG;
  77              		.loc 1 185 0 discriminator 4
  78 0036 2049     		ldr	r1, .L5+32
 182:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG = ADC_GLV_V_DEFAULT_RANGE_THRES_REG_CFG;
  79              		.loc 1 182 0 discriminator 4
  80 0038 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_COND_REG  = ADC_GLV_V_COMPARE_MODE;
  81              		.loc 1 183 0 discriminator 4
  82 003a 204A     		ldr	r2, .L5+36
  83 003c 204B     		ldr	r3, .L5+40
 191:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_GLV_V.c ****             ADC_GLV_V_MUX_SWITCH_HW_CTRL_REG |= ADC_GLV_V_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 6


 195:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /*ADC_GLV_V_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 197:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SATURATE_INTR_MASK_REG = 0u;
 198:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_INTR_MASK_REG = 0u;
 199:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_INTR_MASK_REG = ADC_GLV_V_SAR_INTR_MASK;
 200:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 201:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_CY_SAR_IP_VER == ADC_GLV_V_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_ANA_TRIM_REG = ADC_GLV_V_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* (ADC_GLV_V_CY_SAR_IP_VER == ADC_GLV_V_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 205:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_GLV_V.c ****     tmpRegVal = ADC_GLV_V_SAR_DFT_CTRL_REG;
 207:Generated_Source\PSoC4/ADC_GLV_V.c ****     tmpRegVal &= (uint32)~ADC_GLV_V_DCEN;
 208:Generated_Source\PSoC4/ADC_GLV_V.c ****     
 209:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_CY_SAR_IP_VER == ADC_GLV_V_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_NOMINAL_CLOCK_FREQ > (ADC_GLV_V_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal |= ADC_GLV_V_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_GLV_V.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal |= ADC_GLV_V_DLY_INC;
 214:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_GLV_V.c ****     #else
 216:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if ((ADC_GLV_V_DEFAULT_VREF_SEL == ADC_GLV_V__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_GLV_V.c ****              (ADC_GLV_V_DEFAULT_VREF_SEL == ADC_GLV_V__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal |= ADC_GLV_V_DLY_INC;
 219:Generated_Source\PSoC4/ADC_GLV_V.c ****         #else
 220:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal |= ADC_GLV_V_DCEN;
 221:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal &= (uint32)~ADC_GLV_V_DLY_INC;
 222:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ((ADC_GLV_V_DEFAULT_VREF_SEL == ADC_GLV_V__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_GLV_V.c ****                    (ADC_GLV_V_DEFAULT_VREF_SEL == ADC_GLV_V__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* (ADC_GLV_V_CY_SAR_IP_VER == ADC_GLV_V_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_GLV_V.c ****     
 226:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_DFT_CTRL_REG = tmpRegVal;
 227:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 228:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_MAX_RESOLUTION != ADC_GLV_V_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_WOUNDING_REG = ADC_GLV_V_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* ADC_GLV_V_MAX_RESOLUTION != ADC_GLV_V_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 232:Generated_Source\PSoC4/ADC_GLV_V.c ****     for(chNum = 0u; chNum < ADC_GLV_V_TOTAL_CHANNELS_NUM; chNum++)
 233:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 234:Generated_Source\PSoC4/ADC_GLV_V.c ****         tmpRegVal = (ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal |= ADC_GLV_V_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* End ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_GLV_V.c ****         
 239:Generated_Source\PSoC4/ADC_GLV_V.c ****         
 240:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_GLV_V.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_GLV_V.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_GLV_V.c ****         */
 244:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if((ADC_GLV_V_MAX_RESOLUTION != ADC_GLV_V_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_GLV_V.c ****             (ADC_GLV_V_ALT_WOUNDING == ADC_GLV_V_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_GLV_V.c ****             tmpRegVal &= (uint32)(~ADC_GLV_V_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_MAX_RESOLUTION != ADC_GLV_V_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 249:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_GLV_V.c ****         if(chNum < ADC_GLV_V_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 7


 252:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 253:Generated_Source\PSoC4/ADC_GLV_V.c ****             CY_SET_REG32((reg32 *)(ADC_GLV_V_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal
  84              		.loc 1 253 0 discriminator 4
  85 003e 0725     		movs	r5, #7
 183:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_COND_REG  = ADC_GLV_V_COMPARE_MODE;
  86              		.loc 1 183 0 discriminator 4
  87 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME01_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME01_REG_CFG;
  88              		.loc 1 184 0 discriminator 4
  89 0042 0023     		movs	r3, #0
  90 0044 1F4A     		ldr	r2, .L5+44
  91              		.loc 1 253 0 discriminator 4
  92 0046 204C     		ldr	r4, .L5+48
 184:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME01_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME01_REG_CFG;
  93              		.loc 1 184 0 discriminator 4
  94 0048 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME23_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME23_REG_CFG;
  95              		.loc 1 185 0 discriminator 4
  96 004a 204A     		ldr	r2, .L5+52
 254:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 255:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 257:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 259:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 260:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 262:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 264:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 265:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_GLV_V.c ****             else
 267:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 268:Generated_Source\PSoC4/ADC_GLV_V.c ****                 CY_SET_REG32(ADC_GLV_V_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_GLV_V_INJ_TAILGATIN
 269:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 270:Generated_Source\PSoC4/ADC_GLV_V.c ****                 if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_GLV_V.c ****                 {
 272:Generated_Source\PSoC4/ADC_GLV_V.c ****                     ADC_GLV_V_SAR_INTR_MASK_REG |= ADC_GLV_V_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_GLV_V.c ****                 }
 274:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 275:Generated_Source\PSoC4/ADC_GLV_V.c ****                 if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC_GLV_V.c ****                 {
 277:Generated_Source\PSoC4/ADC_GLV_V.c ****                     ADC_GLV_V_SAR_INTR_MASK_REG |= ADC_GLV_V_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_GLV_V.c ****                 }
 279:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 280:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 282:Generated_Source\PSoC4/ADC_GLV_V.c ****         if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 284:Generated_Source\PSoC4/ADC_GLV_V.c ****                counts = (int32)ADC_GLV_V_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 286:Generated_Source\PSoC4/ADC_GLV_V.c ****         else
 287:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 288:Generated_Source\PSoC4/ADC_GLV_V.c ****                counts = (int32)ADC_GLV_V_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 290:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 291:Generated_Source\PSoC4/ADC_GLV_V.c ****         if((ADC_GLV_V_channelsConfig[chNum] & ADC_GLV_V_DIFFERENTIAL_EN) == 0u)
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 8


 292:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 293:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if((ADC_GLV_V_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_GLV_V__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_GLV_V.c ****                 (ADC_GLV_V_DEFAULT_NEG_INPUT_SEL == ADC_GLV_V__VREF))
 295:Generated_Source\PSoC4/ADC_GLV_V.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_GLV_V.c ****             #else
 298:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_offset[chNum] = 0;
 299:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_GLV_V__FSIGNED */
 300:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 301:Generated_Source\PSoC4/ADC_GLV_V.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 303:Generated_Source\PSoC4/ADC_GLV_V.c ****             #if(ADC_GLV_V_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_GLV_V__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_GLV_V.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_GLV_V.c ****             #else
 307:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* end ADC_GLV_V_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_GLV_V__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 310:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_countsPer10Volt[chNum] = (int16)(((counts * ADC_GLV_V_10MV_COUNTS) +
 312:Generated_Source\PSoC4/ADC_GLV_V.c ****                             ADC_GLV_V_DEFAULT_VREF_MV_VALUE) / (ADC_GLV_V_DEFAULT_VREF_MV_VALUE * 2
 313:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 314:Generated_Source\PSoC4/ADC_GLV_V.c **** }
  97              		.loc 1 314 0 discriminator 4
  98              		@ sp needed
 185:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SAMPLE_TIME23_REG = ADC_GLV_V_DEFAULT_SAMPLE_TIME23_REG_CFG;
  99              		.loc 1 185 0 discriminator 4
 100 004c 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_GLV_V.c ****     
 101              		.loc 1 186 0 discriminator 4
 102 004e 2049     		ldr	r1, .L5+56
 103 0050 0A60     		str	r2, [r1]
 190:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 104              		.loc 1 190 0 discriminator 4
 105 0052 204A     		ldr	r2, .L5+60
 106 0054 1168     		ldr	r1, [r2]
 107 0056 0143     		orrs	r1, r0
 108 0058 1160     		str	r1, [r2]
 193:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_TOTAL_CHANNELS_NUM > 1u */
 109              		.loc 1 193 0 discriminator 4
 110 005a 1F49     		ldr	r1, .L5+64
 111 005c 0A68     		ldr	r2, [r1]
 112 005e 0243     		orrs	r2, r0
 113 0060 0A60     		str	r2, [r1]
 199:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 114              		.loc 1 199 0 discriminator 4
 115 0062 0121     		movs	r1, #1
 197:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_INTR_MASK_REG = 0u;
 116              		.loc 1 197 0 discriminator 4
 117 0064 1D4A     		ldr	r2, .L5+68
 118 0066 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_INTR_MASK_REG = ADC_GLV_V_SAR_INTR_MASK;
 119              		.loc 1 198 0 discriminator 4
 120 0068 1D4A     		ldr	r2, .L5+72
 121 006a 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 122              		.loc 1 199 0 discriminator 4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 9


 123 006c 1D4A     		ldr	r2, .L5+76
 124 006e 1160     		str	r1, [r2]
 206:Generated_Source\PSoC4/ADC_GLV_V.c ****     tmpRegVal &= (uint32)~ADC_GLV_V_DCEN;
 125              		.loc 1 206 0 discriminator 4
 126 0070 1D49     		ldr	r1, .L5+80
 127 0072 1E4A     		ldr	r2, .L5+84
 128 0074 0868     		ldr	r0, [r1]
 129              	.LVL2:
 130 0076 0240     		ands	r2, r0
 221:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ((ADC_GLV_V_DEFAULT_VREF_SEL == ADC_GLV_V__INTERNAL1024) || \
 131              		.loc 1 221 0 discriminator 4
 132 0078 8020     		movs	r0, #128
 133              	.LVL3:
 134 007a 8005     		lsls	r0, r0, #22
 135 007c 0243     		orrs	r2, r0
 136              	.LVL4:
 226:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 137              		.loc 1 226 0 discriminator 4
 138 007e 0A60     		str	r2, [r1]
 139              	.LVL5:
 253:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 140              		.loc 1 253 0 discriminator 4
 141 0080 0621     		movs	r1, #6
 142 0082 1B4A     		ldr	r2, .L5+88
 298:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_GLV_V__FSIGNED */
 143              		.loc 1 298 0 discriminator 4
 144 0084 1B48     		ldr	r0, .L5+92
 253:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 145              		.loc 1 253 0 discriminator 4
 146 0086 1160     		str	r1, [r2]
 147              	.LVL6:
 311:Generated_Source\PSoC4/ADC_GLV_V.c ****                             ADC_GLV_V_DEFAULT_VREF_MV_VALUE) / (ADC_GLV_V_DEFAULT_VREF_MV_VALUE * 2
 148              		.loc 1 311 0 discriminator 4
 149 0088 1B4A     		ldr	r2, .L5+96
 150 008a 1C49     		ldr	r1, .L5+100
 298:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_GLV_V__FSIGNED */
 151              		.loc 1 298 0 discriminator 4
 152 008c 0380     		strh	r3, [r0]
 311:Generated_Source\PSoC4/ADC_GLV_V.c ****                             ADC_GLV_V_DEFAULT_VREF_MV_VALUE) / (ADC_GLV_V_DEFAULT_VREF_MV_VALUE * 2
 153              		.loc 1 311 0 discriminator 4
 154 008e 1160     		str	r1, [r2]
 155              	.LVL7:
 253:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 156              		.loc 1 253 0 discriminator 4
 157 0090 2560     		str	r5, [r4]
 298:Generated_Source\PSoC4/ADC_GLV_V.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_GLV_V__FSIGNED */
 158              		.loc 1 298 0 discriminator 4
 159 0092 4380     		strh	r3, [r0, #2]
 311:Generated_Source\PSoC4/ADC_GLV_V.c ****                             ADC_GLV_V_DEFAULT_VREF_MV_VALUE) / (ADC_GLV_V_DEFAULT_VREF_MV_VALUE * 2
 160              		.loc 1 311 0 discriminator 4
 161 0094 5160     		str	r1, [r2, #4]
 162              	.LVL8:
 163              		.loc 1 314 0 discriminator 4
 164 0096 70BD     		pop	{r4, r5, r6, pc}
 165              	.L6:
 166              		.align	2
 167              	.L5:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 10


 168 0098 00000000 		.word	ADC_GLV_V_ISR
 169 009c 20003A40 		.word	1077542944
 170 00a0 80033A40 		.word	1077543808
 171 00a4 70200010 		.word	268443760
 172 00a8 70201010 		.word	269492336
 173 00ac 00003A40 		.word	1077542912
 174 00b0 8C000080 		.word	-2147483508
 175 00b4 04003A40 		.word	1077542916
 176 00b8 10003A40 		.word	1077542928
 177 00bc 0000FF07 		.word	134152192
 178 00c0 18003A40 		.word	1077542936
 179 00c4 1C003A40 		.word	1077542940
 180 00c8 84003A40 		.word	1077543044
 181 00cc 02000200 		.word	131074
 182 00d0 14003A40 		.word	1077542932
 183 00d4 00033A40 		.word	1077543680
 184 00d8 40033A40 		.word	1077543744
 185 00dc 28023A40 		.word	1077543464
 186 00e0 38023A40 		.word	1077543480
 187 00e4 18023A40 		.word	1077543448
 188 00e8 30003A40 		.word	1077542960
 189 00ec FEFFFFDF 		.word	-536870914
 190 00f0 80003A40 		.word	1077543040
 191 00f4 00000000 		.word	ADC_GLV_V_offset
 192 00f8 00000000 		.word	ADC_GLV_V_countsPer10Volt
 193 00fc 3E180000 		.word	6206
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	ADC_GLV_V_Init, .-ADC_GLV_V_Init
 197              		.section	.text.ADC_GLV_V_Enable,"ax",%progbits
 198              		.align	1
 199              		.global	ADC_GLV_V_Enable
 200              		.code	16
 201              		.thumb_func
 202              		.type	ADC_GLV_V_Enable, %function
 203              	ADC_GLV_V_Enable:
 204              	.LFB3:
 315:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 316:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 320:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 323:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 325:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 326:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 327:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 328:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 329:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_Enable(void)
 331:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 205              		.loc 1 331 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 11


 208              		@ frame_needed = 0, uses_anonymous_args = 0
 332:Generated_Source\PSoC4/ADC_GLV_V.c ****     if (0u == (ADC_GLV_V_SAR_CTRL_REG & ADC_GLV_V_ENABLE))
 209              		.loc 1 332 0
 210 0000 084B     		ldr	r3, .L12
 331:Generated_Source\PSoC4/ADC_GLV_V.c ****     if (0u == (ADC_GLV_V_SAR_CTRL_REG & ADC_GLV_V_ENABLE))
 211              		.loc 1 331 0
 212 0002 10B5     		push	{r4, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 14, -4
 216              		.loc 1 332 0
 217 0004 1A68     		ldr	r2, [r3]
 218 0006 002A     		cmp	r2, #0
 219 0008 0BDB     		blt	.L7
 220              	.LBB4:
 221              	.LBB5:
 333:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 334:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_CY_SAR_IP_VER != ADC_GLV_V_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 336:Generated_Source\PSoC4/ADC_GLV_V.c ****             while (0u != (ADC_GLV_V_SAR_STATUS_REG & ADC_GLV_V_STATUS_BUSY))
 222              		.loc 1 336 0
 223 000a 0749     		ldr	r1, .L12+4
 224              	.L10:
 225 000c 0A68     		ldr	r2, [r1]
 226 000e 002A     		cmp	r2, #0
 227 0010 FCDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 338:Generated_Source\PSoC4/ADC_GLV_V.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 340:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* (ADC_GLV_V_CY_SAR_IP_VER != ADC_GLV_V_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_GLV_V.c ****         
 342:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_SAR_CTRL_REG |= ADC_GLV_V_ENABLE;
 228              		.loc 1 342 0
 229 0012 8021     		movs	r1, #128
 230 0014 1A68     		ldr	r2, [r3]
 231 0016 0906     		lsls	r1, r1, #24
 232 0018 0A43     		orrs	r2, r1
 233 001a 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_GLV_V.c ****         
 344:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_GLV_V.c ****         CyDelayUs(ADC_GLV_V_10US_DELAY);         
 234              		.loc 1 345 0
 235 001c 0A20     		movs	r0, #10
 236 001e FFF7FEFF 		bl	CyDelayUs
 237              	.LVL9:
 238              	.L7:
 239              	.LBE5:
 240              	.LBE4:
 346:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 347:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 241              		.loc 1 347 0
 242              		@ sp needed
 243 0022 10BD     		pop	{r4, pc}
 244              	.L13:
 245              		.align	2
 246              	.L12:
 247 0024 00003A40 		.word	1077542912
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 12


 248 0028 08023A40 		.word	1077543432
 249              		.cfi_endproc
 250              	.LFE3:
 251              		.size	ADC_GLV_V_Enable, .-ADC_GLV_V_Enable
 252              		.section	.text.ADC_GLV_V_Start,"ax",%progbits
 253              		.align	1
 254              		.global	ADC_GLV_V_Start
 255              		.code	16
 256              		.thumb_func
 257              		.type	ADC_GLV_V_Start, %function
 258              	ADC_GLV_V_Start:
 259              	.LFB1:
  64:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* If not Initialized then initialize all required hardware and software */
 260              		.loc 1 64 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 10B5     		push	{r4, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 268              		.loc 1 66 0
 269 0002 054C     		ldr	r4, .L16
 270 0004 2378     		ldrb	r3, [r4]
 271 0006 002B     		cmp	r3, #0
 272 0008 03D1     		bne	.L15
  68:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_initVar = 1u;
 273              		.loc 1 68 0
 274 000a FFF7FEFF 		bl	ADC_GLV_V_Init
 275              	.LVL10:
  69:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 276              		.loc 1 69 0
 277 000e 0123     		movs	r3, #1
 278 0010 2370     		strb	r3, [r4]
 279              	.L15:
  71:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 280              		.loc 1 71 0
 281 0012 FFF7FEFF 		bl	ADC_GLV_V_Enable
 282              	.LVL11:
  72:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 283              		.loc 1 72 0
 284              		@ sp needed
 285 0016 10BD     		pop	{r4, pc}
 286              	.L17:
 287              		.align	2
 288              	.L16:
 289 0018 00000000 		.word	.LANCHOR0
 290              		.cfi_endproc
 291              	.LFE1:
 292              		.size	ADC_GLV_V_Start, .-ADC_GLV_V_Start
 293              		.section	.text.ADC_GLV_V_Stop,"ax",%progbits
 294              		.align	1
 295              		.global	ADC_GLV_V_Stop
 296              		.code	16
 297              		.thumb_func
 298              		.type	ADC_GLV_V_Stop, %function
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 13


 299              	ADC_GLV_V_Stop:
 300              	.LFB4:
 348:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 349:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 350:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_Stop
 352:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 354:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_GLV_V.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_GLV_V.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 358:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 360:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 361:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 362:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 363:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 364:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_Stop(void)
 366:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 301              		.loc 1 366 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG &= (uint32)~ADC_GLV_V_ENABLE;
 306              		.loc 1 367 0
 307 0000 024A     		ldr	r2, .L19
 368:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 308              		.loc 1 368 0
 309              		@ sp needed
 367:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CTRL_REG &= (uint32)~ADC_GLV_V_ENABLE;
 310              		.loc 1 367 0
 311 0002 1368     		ldr	r3, [r2]
 312 0004 5B00     		lsls	r3, r3, #1
 313 0006 5B08     		lsrs	r3, r3, #1
 314 0008 1360     		str	r3, [r2]
 315              		.loc 1 368 0
 316 000a 7047     		bx	lr
 317              	.L20:
 318              		.align	2
 319              	.L19:
 320 000c 00003A40 		.word	1077542912
 321              		.cfi_endproc
 322              	.LFE4:
 323              		.size	ADC_GLV_V_Stop, .-ADC_GLV_V_Stop
 324              		.section	.text.ADC_GLV_V_StartConvert,"ax",%progbits
 325              		.align	1
 326              		.global	ADC_GLV_V_StartConvert
 327              		.code	16
 328              		.thumb_func
 329              		.type	ADC_GLV_V_StartConvert, %function
 330              	ADC_GLV_V_StartConvert:
 331              	.LFB5:
 369:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 370:Generated_Source\PSoC4/ADC_GLV_V.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 14


 371:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_StartConvert
 373:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 375:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_GLV_V.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_GLV_V.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 380:Generated_Source\PSoC4/ADC_GLV_V.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_GLV_V.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_GLV_V.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 384:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 386:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 387:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 388:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 389:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 390:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 332              		.loc 1 392 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_DEFAULT_SAMPLE_MODE_SEL == ADC_GLV_V__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_SAR_SAMPLE_CTRL_REG |= ADC_GLV_V_CONTINUOUS_EN;
 337              		.loc 1 394 0
 338 0000 8021     		movs	r1, #128
 339 0002 034A     		ldr	r2, .L22
 340 0004 4902     		lsls	r1, r1, #9
 341 0006 1368     		ldr	r3, [r2]
 395:Generated_Source\PSoC4/ADC_GLV_V.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_SAR_START_CTRL_REG = ADC_GLV_V_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* End ADC_GLV_V_DEFAULT_SAMPLE_MODE == ADC_GLV_V__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 399:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 342              		.loc 1 399 0
 343              		@ sp needed
 394:Generated_Source\PSoC4/ADC_GLV_V.c ****     #else /* Firmware trigger */
 344              		.loc 1 394 0
 345 0008 0B43     		orrs	r3, r1
 346 000a 1360     		str	r3, [r2]
 347              		.loc 1 399 0
 348 000c 7047     		bx	lr
 349              	.L23:
 350 000e C046     		.align	2
 351              	.L22:
 352 0010 04003A40 		.word	1077542916
 353              		.cfi_endproc
 354              	.LFE5:
 355              		.size	ADC_GLV_V_StartConvert, .-ADC_GLV_V_StartConvert
 356              		.section	.text.ADC_GLV_V_StopConvert,"ax",%progbits
 357              		.align	1
 358              		.global	ADC_GLV_V_StopConvert
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 15


 359              		.code	16
 360              		.thumb_func
 361              		.type	ADC_GLV_V_StopConvert, %function
 362              	ADC_GLV_V_StopConvert:
 363              	.LFB6:
 400:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 401:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 402:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_StopConvert
 404:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 406:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 409:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 411:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 412:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 413:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 414:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 415:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 364              		.loc 1 417 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_DEFAULT_SAMPLE_MODE_SEL == ADC_GLV_V__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_GLV_V_CONTINUOUS_EN);
 369              		.loc 1 419 0
 370 0000 024A     		ldr	r2, .L25
 371 0002 034B     		ldr	r3, .L25+4
 372 0004 1168     		ldr	r1, [r2]
 420:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* ADC_GLV_V_DEFAULT_SAMPLE_MODE == ADC_GLV_V__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 373              		.loc 1 421 0
 374              		@ sp needed
 419:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* ADC_GLV_V_DEFAULT_SAMPLE_MODE == ADC_GLV_V__FREERUNNING */
 375              		.loc 1 419 0
 376 0006 0B40     		ands	r3, r1
 377 0008 1360     		str	r3, [r2]
 378              		.loc 1 421 0
 379 000a 7047     		bx	lr
 380              	.L26:
 381              		.align	2
 382              	.L25:
 383 000c 04003A40 		.word	1077542916
 384 0010 FFFFFEFF 		.word	-65537
 385              		.cfi_endproc
 386              	.LFE6:
 387              		.size	ADC_GLV_V_StopConvert, .-ADC_GLV_V_StopConvert
 388              		.section	.text.ADC_GLV_V_IsEndConversion,"ax",%progbits
 389              		.align	1
 390              		.global	ADC_GLV_V_IsEndConversion
 391              		.code	16
 392              		.thumb_func
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 16


 393              		.type	ADC_GLV_V_IsEndConversion, %function
 394              	ADC_GLV_V_IsEndConversion:
 395              	.LFB7:
 422:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 423:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 424:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_IsEndConversion
 426:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 428:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_GLV_V.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_GLV_V.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_GLV_V.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_GLV_V.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_GLV_V.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_GLV_V.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 437:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_GLV_V.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_GLV_V.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 445:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 446:Generated_Source\PSoC4/ADC_GLV_V.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_GLV_V.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 449:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_GLV_V.c **** uint32 ADC_GLV_V_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 396              		.loc 1 451 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              	.LVL12:
 401 0000 10B5     		push	{r4, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 452:Generated_Source\PSoC4/ADC_GLV_V.c ****     uint32 status = 0u;
 405              		.loc 1 452 0
 406 0002 0023     		movs	r3, #0
 453:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 454:Generated_Source\PSoC4/ADC_GLV_V.c ****     if((retMode & (ADC_GLV_V_RETURN_STATUS | ADC_GLV_V_WAIT_FOR_RESULT)) != 0u)
 407              		.loc 1 454 0
 408 0004 8207     		lsls	r2, r0, #30
 409 0006 0DD0     		beq	.L32
 455:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 456:Generated_Source\PSoC4/ADC_GLV_V.c ****         do
 457:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 458:Generated_Source\PSoC4/ADC_GLV_V.c ****             status = ADC_GLV_V_SAR_INTR_REG & ADC_GLV_V_EOS_MASK;
 410              		.loc 1 458 0 discriminator 2
 411 0008 0124     		movs	r4, #1
 459:Generated_Source\PSoC4/ADC_GLV_V.c ****         }while((status == 0u) && ((retMode & ADC_GLV_V_WAIT_FOR_RESULT) != 0u));
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 17


 412              		.loc 1 459 0 discriminator 2
 413 000a 0233     		adds	r3, r3, #2
 458:Generated_Source\PSoC4/ADC_GLV_V.c ****         }while((status == 0u) && ((retMode & ADC_GLV_V_WAIT_FOR_RESULT) != 0u));
 414              		.loc 1 458 0 discriminator 2
 415 000c 0649     		ldr	r1, .L36
 416              		.loc 1 459 0 discriminator 2
 417 000e 1840     		ands	r0, r3
 418              	.LVL13:
 419              	.L33:
 458:Generated_Source\PSoC4/ADC_GLV_V.c ****         }while((status == 0u) && ((retMode & ADC_GLV_V_WAIT_FOR_RESULT) != 0u));
 420              		.loc 1 458 0 discriminator 2
 421 0010 0B68     		ldr	r3, [r1]
 422 0012 0122     		movs	r2, #1
 423 0014 2340     		ands	r3, r4
 424              	.LVL14:
 425              		.loc 1 459 0 discriminator 2
 426 0016 02D1     		bne	.L29
 427              		.loc 1 459 0 is_stmt 0 discriminator 1
 428 0018 0028     		cmp	r0, #0
 429 001a F9D1     		bne	.L33
 430 001c 02E0     		b	.L32
 431              	.L29:
 460:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 461:Generated_Source\PSoC4/ADC_GLV_V.c ****         if(status != 0u)
 462:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 463:Generated_Source\PSoC4/ADC_GLV_V.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_GLV_V.c ****             ADC_GLV_V_SAR_INTR_REG = ADC_GLV_V_EOS_MASK;
 432              		.loc 1 464 0 is_stmt 1
 433 001e 024B     		ldr	r3, .L36
 434              	.LVL15:
 435 0020 1A60     		str	r2, [r3]
 436 0022 1300     		movs	r3, r2
 437              	.LVL16:
 438              	.L32:
 465:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 466:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 467:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 468:Generated_Source\PSoC4/ADC_GLV_V.c ****     #if(ADC_GLV_V_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_GLV_V.c ****         if((retMode & (ADC_GLV_V_RETURN_STATUS_INJ | ADC_GLV_V_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_GLV_V.c ****         {
 471:Generated_Source\PSoC4/ADC_GLV_V.c ****             do
 472:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 473:Generated_Source\PSoC4/ADC_GLV_V.c ****                 status |= ADC_GLV_V_SAR_INTR_REG & ADC_GLV_V_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_GLV_V.c ****             }while(((status & ADC_GLV_V_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_GLV_V.c ****                    ((retMode & ADC_GLV_V_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 477:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((status & ADC_GLV_V_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 479:Generated_Source\PSoC4/ADC_GLV_V.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_SAR_INTR_REG = ADC_GLV_V_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 482:Generated_Source\PSoC4/ADC_GLV_V.c ****         }
 483:Generated_Source\PSoC4/ADC_GLV_V.c ****     #endif /* ADC_GLV_V_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 485:Generated_Source\PSoC4/ADC_GLV_V.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 439              		.loc 1 486 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 18


 440 0024 1800     		movs	r0, r3
 441              		@ sp needed
 442 0026 10BD     		pop	{r4, pc}
 443              	.L37:
 444              		.align	2
 445              	.L36:
 446 0028 10023A40 		.word	1077543440
 447              		.cfi_endproc
 448              	.LFE7:
 449              		.size	ADC_GLV_V_IsEndConversion, .-ADC_GLV_V_IsEndConversion
 450              		.section	.text.ADC_GLV_V_GetResult16,"ax",%progbits
 451              		.align	1
 452              		.global	ADC_GLV_V_GetResult16
 453              		.code	16
 454              		.thumb_func
 455              		.type	ADC_GLV_V_GetResult16, %function
 456              	ADC_GLV_V_GetResult16:
 457              	.LFB8:
 487:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 488:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 489:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_GetResult16
 491:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 493:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 496:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_GLV_V.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_GLV_V.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 500:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 501:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 503:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_GLV_V.c **** int16 ADC_GLV_V_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 458              		.loc 1 505 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LVL17:
 506:Generated_Source\PSoC4/ADC_GLV_V.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 508:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_GLV_V.c ****     CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
 510:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 511:Generated_Source\PSoC4/ADC_GLV_V.c ****     if(chan < ADC_GLV_V_SEQUENCED_CHANNELS_NUM)
 512:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 513:Generated_Source\PSoC4/ADC_GLV_V.c ****         result = CY_GET_REG32((reg32 *)(ADC_GLV_V_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 514:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 516:Generated_Source\PSoC4/ADC_GLV_V.c ****     else
 517:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 518:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_GLV_V.c ****             result = ADC_GLV_V_SAR_INJ_RESULT_REG & ADC_GLV_V_RESULT_MASK;
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 19


 520:Generated_Source\PSoC4/ADC_GLV_V.c ****         #else
 521:Generated_Source\PSoC4/ADC_GLV_V.c ****             result = 0u;
 464              		.loc 1 521 0
 465 0000 0023     		movs	r3, #0
 511:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 466              		.loc 1 511 0
 467 0002 0128     		cmp	r0, #1
 468 0004 04D8     		bhi	.L39
 513:Generated_Source\PSoC4/ADC_GLV_V.c ****                 ADC_GLV_V_RESULT_MASK;
 469              		.loc 1 513 0
 470 0006 034B     		ldr	r3, .L41
 471 0008 8000     		lsls	r0, r0, #2
 472              	.LVL18:
 473 000a C018     		adds	r0, r0, r3
 474 000c 0368     		ldr	r3, [r0]
 475 000e 9BB2     		uxth	r3, r3
 476              	.LVL19:
 477              	.L39:
 522:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 524:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 525:Generated_Source\PSoC4/ADC_GLV_V.c ****     return ( (int16)result );
 478              		.loc 1 525 0
 479 0010 18B2     		sxth	r0, r3
 526:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 480              		.loc 1 526 0
 481              		@ sp needed
 482 0012 7047     		bx	lr
 483              	.L42:
 484              		.align	2
 485              	.L41:
 486 0014 80013A40 		.word	1077543296
 487              		.cfi_endproc
 488              	.LFE8:
 489              		.size	ADC_GLV_V_GetResult16, .-ADC_GLV_V_GetResult16
 490              		.section	.text.ADC_GLV_V_SetChanMask,"ax",%progbits
 491              		.align	1
 492              		.global	ADC_GLV_V_SetChanMask
 493              		.code	16
 494              		.thumb_func
 495              		.type	ADC_GLV_V_SetChanMask, %function
 496              	ADC_GLV_V_SetChanMask:
 497              	.LFB9:
 527:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 528:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 529:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetChanMask
 531:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 533:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 536:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_GLV_V.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_GLV_V.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_GLV_V.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_GLV_V.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 20


 541:Generated_Source\PSoC4/ADC_GLV_V.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_GLV_V.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 545:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 546:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 547:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 548:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 498              		.loc 1 550 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL20:
 551:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CHAN_EN_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 504              		.loc 1 551 0
 505 0000 0323     		movs	r3, #3
 506 0002 1840     		ands	r0, r3
 507              	.LVL21:
 508 0004 014B     		ldr	r3, .L44
 552:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 509              		.loc 1 552 0
 510              		@ sp needed
 551:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_CHAN_EN_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 511              		.loc 1 551 0
 512 0006 1860     		str	r0, [r3]
 513              		.loc 1 552 0
 514 0008 7047     		bx	lr
 515              	.L45:
 516 000a C046     		.align	2
 517              	.L44:
 518 000c 20003A40 		.word	1077542944
 519              		.cfi_endproc
 520              	.LFE9:
 521              		.size	ADC_GLV_V_SetChanMask, .-ADC_GLV_V_SetChanMask
 522              		.section	.text.ADC_GLV_V_SetLowLimit,"ax",%progbits
 523              		.align	1
 524              		.global	ADC_GLV_V_SetLowLimit
 525              		.code	16
 526              		.thumb_func
 527              		.type	ADC_GLV_V_SetLowLimit, %function
 528              	ADC_GLV_V_SetLowLimit:
 529              	.LFB10:
 553:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 554:Generated_Source\PSoC4/ADC_GLV_V.c **** #if(ADC_GLV_V_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 556:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 557:Generated_Source\PSoC4/ADC_GLV_V.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Function Name: ADC_GLV_V_EnableInjection
 559:Generated_Source\PSoC4/ADC_GLV_V.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 561:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 564:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Parameters:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 21


 565:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 567:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 570:Generated_Source\PSoC4/ADC_GLV_V.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_GLV_V.c ****     void ADC_GLV_V_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 573:Generated_Source\PSoC4/ADC_GLV_V.c ****         ADC_GLV_V_SAR_INJ_CHAN_CONFIG_REG |= ADC_GLV_V_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 575:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 576:Generated_Source\PSoC4/ADC_GLV_V.c **** #endif /* ADC_GLV_V_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 578:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 579:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetLowLimit
 581:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 583:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 586:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_GLV_V.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 589:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 590:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 591:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 592:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 530              		.loc 1 594 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.LVL22:
 595:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_LOW_MASK);
 536              		.loc 1 595 0
 537 0000 044A     		ldr	r2, .L47
 596:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG |= lowLimit & ADC_GLV_V_RANGE_LOW_MASK;
 538              		.loc 1 596 0
 539 0002 80B2     		uxth	r0, r0
 540              	.LVL23:
 595:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_LOW_MASK);
 541              		.loc 1 595 0
 542 0004 1368     		ldr	r3, [r2]
 597:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 543              		.loc 1 597 0
 544              		@ sp needed
 595:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_LOW_MASK);
 545              		.loc 1 595 0
 546 0006 1B0C     		lsrs	r3, r3, #16
 547 0008 1B04     		lsls	r3, r3, #16
 548 000a 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG |= lowLimit & ADC_GLV_V_RANGE_LOW_MASK;
 549              		.loc 1 596 0
 550 000c 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 22


 551 000e 1843     		orrs	r0, r3
 552 0010 1060     		str	r0, [r2]
 553              		.loc 1 597 0
 554 0012 7047     		bx	lr
 555              	.L48:
 556              		.align	2
 557              	.L47:
 558 0014 18003A40 		.word	1077542936
 559              		.cfi_endproc
 560              	.LFE10:
 561              		.size	ADC_GLV_V_SetLowLimit, .-ADC_GLV_V_SetLowLimit
 562              		.section	.text.ADC_GLV_V_SetHighLimit,"ax",%progbits
 563              		.align	1
 564              		.global	ADC_GLV_V_SetHighLimit
 565              		.code	16
 566              		.thumb_func
 567              		.type	ADC_GLV_V_SetHighLimit, %function
 568              	ADC_GLV_V_SetHighLimit:
 569              	.LFB11:
 598:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 599:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 600:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetHighLimit
 602:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 604:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 607:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_GLV_V.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 610:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 611:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 612:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 613:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 570              		.loc 1 615 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575              	.LVL24:
 616:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_HIGH_MASK);
 576              		.loc 1 616 0
 577 0000 044B     		ldr	r3, .L50
 617:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_GLV_V_RANGE_HIGH_OFFSET);
 578              		.loc 1 617 0
 579 0002 0004     		lsls	r0, r0, #16
 580              	.LVL25:
 616:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_HIGH_MASK);
 581              		.loc 1 616 0
 582 0004 1A68     		ldr	r2, [r3]
 618:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 583              		.loc 1 618 0
 584              		@ sp needed
 616:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG &= (uint32)(~ADC_GLV_V_RANGE_HIGH_MASK);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 23


 585              		.loc 1 616 0
 586 0006 92B2     		uxth	r2, r2
 587 0008 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_GLV_V_RANGE_HIGH_OFFSET);
 588              		.loc 1 617 0
 589 000a 1A68     		ldr	r2, [r3]
 590 000c 1043     		orrs	r0, r2
 591 000e 1860     		str	r0, [r3]
 592              		.loc 1 618 0
 593 0010 7047     		bx	lr
 594              	.L51:
 595 0012 C046     		.align	2
 596              	.L50:
 597 0014 18003A40 		.word	1077542936
 598              		.cfi_endproc
 599              	.LFE11:
 600              		.size	ADC_GLV_V_SetHighLimit, .-ADC_GLV_V_SetHighLimit
 601              		.section	.text.ADC_GLV_V_SetLimitMask,"ax",%progbits
 602              		.align	1
 603              		.global	ADC_GLV_V_SetLimitMask
 604              		.code	16
 605              		.thumb_func
 606              		.type	ADC_GLV_V_SetLimitMask, %function
 607              	ADC_GLV_V_SetLimitMask:
 608              	.LFB12:
 619:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 620:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 621:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetLimitMask
 623:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 625:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 628:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_GLV_V.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_GLV_V.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_GLV_V.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_GLV_V.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 634:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 635:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 636:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 637:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 609              		.loc 1 639 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614              	.LVL26:
 640:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_INTR_MASK_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 615              		.loc 1 640 0
 616 0000 0323     		movs	r3, #3
 617 0002 1840     		ands	r0, r3
 618              	.LVL27:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 24


 619 0004 014B     		ldr	r3, .L53
 641:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 620              		.loc 1 641 0
 621              		@ sp needed
 640:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_RANGE_INTR_MASK_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 622              		.loc 1 640 0
 623 0006 1860     		str	r0, [r3]
 624              		.loc 1 641 0
 625 0008 7047     		bx	lr
 626              	.L54:
 627 000a C046     		.align	2
 628              	.L53:
 629 000c 38023A40 		.word	1077543480
 630              		.cfi_endproc
 631              	.LFE12:
 632              		.size	ADC_GLV_V_SetLimitMask, .-ADC_GLV_V_SetLimitMask
 633              		.section	.text.ADC_GLV_V_SetSatMask,"ax",%progbits
 634              		.align	1
 635              		.global	ADC_GLV_V_SetSatMask
 636              		.code	16
 637              		.thumb_func
 638              		.type	ADC_GLV_V_SetSatMask, %function
 639              	ADC_GLV_V_SetSatMask:
 640              	.LFB13:
 642:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 643:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 644:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetSatMask
 646:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 648:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 651:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_GLV_V.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_GLV_V.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_GLV_V.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_GLV_V.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 657:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 658:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 659:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 660:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 641              		.loc 1 662 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646              	.LVL28:
 663:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SATURATE_INTR_MASK_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 647              		.loc 1 663 0
 648 0000 0323     		movs	r3, #3
 649 0002 1840     		ands	r0, r3
 650              	.LVL29:
 651 0004 014B     		ldr	r3, .L56
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 25


 664:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 652              		.loc 1 664 0
 653              		@ sp needed
 663:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_SAR_SATURATE_INTR_MASK_REG = mask & ADC_GLV_V_MAX_CHANNELS_EN_MASK;
 654              		.loc 1 663 0
 655 0006 1860     		str	r0, [r3]
 656              		.loc 1 664 0
 657 0008 7047     		bx	lr
 658              	.L57:
 659 000a C046     		.align	2
 660              	.L56:
 661 000c 28023A40 		.word	1077543464
 662              		.cfi_endproc
 663              	.LFE13:
 664              		.size	ADC_GLV_V_SetSatMask, .-ADC_GLV_V_SetSatMask
 665              		.section	.text.ADC_GLV_V_SetOffset,"ax",%progbits
 666              		.align	1
 667              		.global	ADC_GLV_V_SetOffset
 668              		.code	16
 669              		.thumb_func
 670              		.type	ADC_GLV_V_SetOffset, %function
 671              	ADC_GLV_V_SetOffset:
 672              	.LFB14:
 665:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 666:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 667:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetOffset
 669:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 671:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_GLV_V.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_GLV_V.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_GLV_V.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_GLV_V.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 677:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_GLV_V.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_GLV_V.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_GLV_V.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 682:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 683:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 684:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 685:Generated_Source\PSoC4/ADC_GLV_V.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 688:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 673              		.loc 1 690 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              	.LVL30:
 691:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_GLV_V.c ****     CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 26


 693:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 694:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_offset[chan] = offset;
 679              		.loc 1 694 0
 680 0000 014B     		ldr	r3, .L59
 681 0002 4000     		lsls	r0, r0, #1
 682              	.LVL31:
 683 0004 C152     		strh	r1, [r0, r3]
 695:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 684              		.loc 1 695 0
 685              		@ sp needed
 686 0006 7047     		bx	lr
 687              	.L60:
 688              		.align	2
 689              	.L59:
 690 0008 00000000 		.word	ADC_GLV_V_offset
 691              		.cfi_endproc
 692              	.LFE14:
 693              		.size	ADC_GLV_V_SetOffset, .-ADC_GLV_V_SetOffset
 694              		.section	.text.ADC_GLV_V_SetGain,"ax",%progbits
 695              		.align	1
 696              		.global	ADC_GLV_V_SetGain
 697              		.code	16
 698              		.thumb_func
 699              		.type	ADC_GLV_V_SetGain, %function
 700              	ADC_GLV_V_SetGain:
 701              	.LFB15:
 696:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 697:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 698:Generated_Source\PSoC4/ADC_GLV_V.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_GLV_V.c **** * Function Name: ADC_GLV_V_SetGain
 700:Generated_Source\PSoC4/ADC_GLV_V.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 702:Generated_Source\PSoC4/ADC_GLV_V.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_GLV_V.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_GLV_V.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_GLV_V.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_GLV_V.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_GLV_V.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_GLV_V.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_GLV_V.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 711:Generated_Source\PSoC4/ADC_GLV_V.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_GLV_V.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_GLV_V.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 715:Generated_Source\PSoC4/ADC_GLV_V.c **** * Return:
 716:Generated_Source\PSoC4/ADC_GLV_V.c **** *  None.
 717:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 718:Generated_Source\PSoC4/ADC_GLV_V.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_GLV_V.c **** *  ADC_GLV_V_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_GLV_V.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_GLV_V.c **** *
 722:Generated_Source\PSoC4/ADC_GLV_V.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_GLV_V.c **** void ADC_GLV_V_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_GLV_V.c **** {
 702              		.loc 1 724 0
 703              		.cfi_startproc
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 27


 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL32:
 725:Generated_Source\PSoC4/ADC_GLV_V.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_GLV_V.c ****     CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
 727:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 728:Generated_Source\PSoC4/ADC_GLV_V.c ****     ADC_GLV_V_countsPer10Volt[chan] = adcGain;
 708              		.loc 1 728 0
 709 0000 014B     		ldr	r3, .L62
 710 0002 8000     		lsls	r0, r0, #2
 711              	.LVL33:
 712 0004 C150     		str	r1, [r0, r3]
 729:Generated_Source\PSoC4/ADC_GLV_V.c **** }
 713              		.loc 1 729 0
 714              		@ sp needed
 715 0006 7047     		bx	lr
 716              	.L63:
 717              		.align	2
 718              	.L62:
 719 0008 00000000 		.word	ADC_GLV_V_countsPer10Volt
 720              		.cfi_endproc
 721              	.LFE15:
 722              		.size	ADC_GLV_V_SetGain, .-ADC_GLV_V_SetGain
 723              		.global	__aeabi_idiv
 724              		.section	.text.ADC_GLV_V_CountsTo_mVolts,"ax",%progbits
 725              		.align	1
 726              		.global	ADC_GLV_V_CountsTo_mVolts
 727              		.code	16
 728              		.thumb_func
 729              		.type	ADC_GLV_V_CountsTo_mVolts, %function
 730              	ADC_GLV_V_CountsTo_mVolts:
 731              	.LFB16:
 730:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 731:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 732:Generated_Source\PSoC4/ADC_GLV_V.c **** #if(ADC_GLV_V_DEFAULT_JUSTIFICATION_SEL == ADC_GLV_V__RIGHT)
 733:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 734:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 735:Generated_Source\PSoC4/ADC_GLV_V.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Function Name: ADC_GLV_V_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_GLV_V.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 739:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 743:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 747:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 750:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_GLV_V.c ****     *   to mVolts.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 28


 754:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 755:Generated_Source\PSoC4/ADC_GLV_V.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_GLV_V.c ****     int16 ADC_GLV_V_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 732              		.loc 1 757 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL34:
 737 0000 70B5     		push	{r4, r5, r6, lr}
 738              		.cfi_def_cfa_offset 16
 739              		.cfi_offset 4, -16
 740              		.cfi_offset 5, -12
 741              		.cfi_offset 6, -8
 742              		.cfi_offset 14, -4
 758:Generated_Source\PSoC4/ADC_GLV_V.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 760:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_GLV_V.c ****         CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
 762:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 763:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((ADC_GLV_V_channelsConfig[chan] & ADC_GLV_V_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 767:Generated_Source\PSoC4/ADC_GLV_V.c ****                 adcCounts /= ADC_GLV_V_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 769:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 771:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_GLV_V.c ****         adcCounts -= ADC_GLV_V_offset[chan];
 743              		.loc 1 772 0
 744 0002 0B4B     		ldr	r3, .L67
 745 0004 0B4E     		ldr	r6, .L67+4
 746 0006 4200     		lsls	r2, r0, #1
 747 0008 8400     		lsls	r4, r0, #2
 748 000a D35A     		ldrh	r3, [r2, r3]
 773:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 774:Generated_Source\PSoC4/ADC_GLV_V.c ****         mVolts = (int16)((((int32)adcCounts * ADC_GLV_V_10MV_COUNTS) + ( (adcCounts > 0) ?
 775:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (ADC_GLV_V_countsPer10Volt[chan] / 2) : (-(ADC_GLV_V_countsPer10Volt[chan] / 2)) )
 749              		.loc 1 775 0
 750 000c 3259     		ldr	r2, [r6, r4]
 772:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 751              		.loc 1 772 0
 752 000e C91A     		subs	r1, r1, r3
 753              	.LVL35:
 774:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (ADC_GLV_V_countsPer10Volt[chan] / 2) : (-(ADC_GLV_V_countsPer10Volt[chan] / 2)) )
 754              		.loc 1 774 0
 755 0010 094D     		ldr	r5, .L67+8
 756              		.loc 1 775 0
 757 0012 D30F     		lsrs	r3, r2, #31
 772:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 758              		.loc 1 772 0
 759 0014 09B2     		sxth	r1, r1
 760              	.LVL36:
 761              		.loc 1 775 0
 762 0016 9A18     		adds	r2, r3, r2
 774:Generated_Source\PSoC4/ADC_GLV_V.c ****                  (ADC_GLV_V_countsPer10Volt[chan] / 2) : (-(ADC_GLV_V_countsPer10Volt[chan] / 2)) )
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 29


 763              		.loc 1 774 0
 764 0018 4D43     		muls	r5, r1
 765              		.loc 1 775 0
 766 001a 5310     		asrs	r3, r2, #1
 767 001c 0029     		cmp	r1, #0
 768 001e 01DC     		bgt	.L66
 769              		.loc 1 775 0 is_stmt 0 discriminator 2
 770 0020 5210     		asrs	r2, r2, #1
 771 0022 5342     		rsbs	r3, r2, #0
 772              	.L66:
 776:Generated_Source\PSoC4/ADC_GLV_V.c ****                  / ADC_GLV_V_countsPer10Volt[chan]);
 773              		.loc 1 776 0 is_stmt 1
 774 0024 3159     		ldr	r1, [r6, r4]
 775              	.LVL37:
 777:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 778:Generated_Source\PSoC4/ADC_GLV_V.c ****         return( mVolts );
 776              		.loc 1 778 0
 777 0026 5819     		adds	r0, r3, r5
 778              	.LVL38:
 779 0028 FFF7FEFF 		bl	__aeabi_idiv
 780              	.LVL39:
 779:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 781              		.loc 1 779 0
 782              		@ sp needed
 778:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 783              		.loc 1 778 0
 784 002c 00B2     		sxth	r0, r0
 785              		.loc 1 779 0
 786 002e 70BD     		pop	{r4, r5, r6, pc}
 787              	.L68:
 788              		.align	2
 789              	.L67:
 790 0030 00000000 		.word	ADC_GLV_V_offset
 791 0034 00000000 		.word	ADC_GLV_V_countsPer10Volt
 792 0038 10270000 		.word	10000
 793              		.cfi_endproc
 794              	.LFE16:
 795              		.size	ADC_GLV_V_CountsTo_mVolts, .-ADC_GLV_V_CountsTo_mVolts
 796              		.global	__aeabi_lmul
 797              		.global	__aeabi_ldivmod
 798              		.section	.text.ADC_GLV_V_CountsTo_uVolts,"ax",%progbits
 799              		.align	1
 800              		.global	ADC_GLV_V_CountsTo_uVolts
 801              		.code	16
 802              		.thumb_func
 803              		.type	ADC_GLV_V_CountsTo_uVolts, %function
 804              	ADC_GLV_V_CountsTo_uVolts:
 805              	.LFB17:
 780:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 781:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 782:Generated_Source\PSoC4/ADC_GLV_V.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Function Name: ADC_GLV_V_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_GLV_V.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 786:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  This function is not available when left data format justification selected.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 30


 789:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 790:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 794:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 797:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_GLV_V.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 802:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 809:Generated_Source\PSoC4/ADC_GLV_V.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_GLV_V.c ****     int32 ADC_GLV_V_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 806              		.loc 1 811 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              	.LVL40:
 812:Generated_Source\PSoC4/ADC_GLV_V.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 814:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_GLV_V.c ****         CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
 816:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 817:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((ADC_GLV_V_channelsConfig[chan] & ADC_GLV_V_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 821:Generated_Source\PSoC4/ADC_GLV_V.c ****                 adcCounts /= ADC_GLV_V_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 823:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 825:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_GLV_V.c ****         adcCounts -= ADC_GLV_V_offset[chan];
 811              		.loc 1 826 0
 812 0000 094B     		ldr	r3, .L70
 813 0002 4200     		lsls	r2, r0, #1
 814 0004 D35A     		ldrh	r3, [r2, r3]
 811:Generated_Source\PSoC4/ADC_GLV_V.c ****         int64 uVolts;
 815              		.loc 1 811 0
 816 0006 10B5     		push	{r4, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 4, -8
 819              		.cfi_offset 14, -4
 820              		.loc 1 826 0
 821 0008 C91A     		subs	r1, r1, r3
 822              	.LVL41:
 827:Generated_Source\PSoC4/ADC_GLV_V.c **** 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 31


 828:Generated_Source\PSoC4/ADC_GLV_V.c ****         uVolts = ((int64)adcCounts * ADC_GLV_V_10UV_COUNTS) / ADC_GLV_V_countsPer10Volt[chan];
 823              		.loc 1 828 0
 824 000a 084B     		ldr	r3, .L70+4
 825 000c 8000     		lsls	r0, r0, #2
 826              	.LVL42:
 827 000e C458     		ldr	r4, [r0, r3]
 828              	.LVL43:
 829:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 830:Generated_Source\PSoC4/ADC_GLV_V.c ****         return( (int32)uVolts );
 829              		.loc 1 830 0
 830 0010 08B2     		sxth	r0, r1
 831 0012 074A     		ldr	r2, .L70+8
 832 0014 0023     		movs	r3, #0
 833 0016 C117     		asrs	r1, r0, #31
 834              	.LVL44:
 835 0018 FFF7FEFF 		bl	__aeabi_lmul
 836              	.LVL45:
 837 001c E317     		asrs	r3, r4, #31
 838 001e 2200     		movs	r2, r4
 839 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 840              	.LVL46:
 831:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 841              		.loc 1 831 0
 842              		@ sp needed
 843 0024 10BD     		pop	{r4, pc}
 844              	.L71:
 845 0026 C046     		.align	2
 846              	.L70:
 847 0028 00000000 		.word	ADC_GLV_V_offset
 848 002c 00000000 		.word	ADC_GLV_V_countsPer10Volt
 849 0030 80969800 		.word	10000000
 850              		.cfi_endproc
 851              	.LFE17:
 852              		.size	ADC_GLV_V_CountsTo_uVolts, .-ADC_GLV_V_CountsTo_uVolts
 853              		.global	__aeabi_i2f
 854              		.global	__aeabi_fmul
 855              		.global	__aeabi_fdiv
 856              		.section	.text.ADC_GLV_V_CountsTo_Volts,"ax",%progbits
 857              		.align	1
 858              		.global	ADC_GLV_V_CountsTo_Volts
 859              		.code	16
 860              		.thumb_func
 861              		.type	ADC_GLV_V_CountsTo_Volts, %function
 862              	ADC_GLV_V_CountsTo_Volts:
 863              	.LFB18:
 832:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 833:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 834:Generated_Source\PSoC4/ADC_GLV_V.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Function Name: ADC_GLV_V_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_GLV_V.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 838:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 842:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  chan: The ADC channel number.
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 32


 844:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 846:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 849:Generated_Source\PSoC4/ADC_GLV_V.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_GLV_V.c ****     *  ADC_GLV_V_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_GLV_V.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_GLV_V.c ****     *
 854:Generated_Source\PSoC4/ADC_GLV_V.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_GLV_V.c ****     float32 ADC_GLV_V_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_GLV_V.c ****     {
 864              		.loc 1 856 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              	.LVL47:
 857:Generated_Source\PSoC4/ADC_GLV_V.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 859:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_GLV_V.c ****         CYASSERT(chan < ADC_GLV_V_TOTAL_CHANNELS_NUM);
 861:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 862:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_GLV_V.c ****         #if(ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_GLV_V.c ****             if((ADC_GLV_V_channelsConfig[chan] & ADC_GLV_V_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_GLV_V.c ****             {
 866:Generated_Source\PSoC4/ADC_GLV_V.c ****                 adcCounts /= ADC_GLV_V_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_GLV_V.c ****             }
 868:Generated_Source\PSoC4/ADC_GLV_V.c ****         #endif /* ADC_GLV_V_DEFAULT_AVG_MODE == ADC_GLV_V__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 870:Generated_Source\PSoC4/ADC_GLV_V.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_GLV_V.c ****         adcCounts -= ADC_GLV_V_offset[chan];
 869              		.loc 1 871 0
 870 0000 0B4B     		ldr	r3, .L73
 871 0002 4200     		lsls	r2, r0, #1
 872 0004 D35A     		ldrh	r3, [r2, r3]
 872:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 873:Generated_Source\PSoC4/ADC_GLV_V.c ****         volts = ((float32)adcCounts * ADC_GLV_V_10V_COUNTS) / (float32)ADC_GLV_V_countsPer10Volt[ch
 873              		.loc 1 873 0
 874 0006 8000     		lsls	r0, r0, #2
 875              	.LVL48:
 871:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 876              		.loc 1 871 0
 877 0008 C91A     		subs	r1, r1, r3
 878              	.LVL49:
 879              		.loc 1 873 0
 880 000a 0A4B     		ldr	r3, .L73+4
 856:Generated_Source\PSoC4/ADC_GLV_V.c ****         float32 volts;
 881              		.loc 1 856 0
 882 000c 70B5     		push	{r4, r5, r6, lr}
 883              		.cfi_def_cfa_offset 16
 884              		.cfi_offset 4, -16
 885              		.cfi_offset 5, -12
 886              		.cfi_offset 6, -8
 887              		.cfi_offset 14, -4
 888              		.loc 1 873 0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 33


 889 000e C558     		ldr	r5, [r0, r3]
 890              	.LVL50:
 874:Generated_Source\PSoC4/ADC_GLV_V.c **** 
 875:Generated_Source\PSoC4/ADC_GLV_V.c ****         return( volts );
 891              		.loc 1 875 0
 892 0010 08B2     		sxth	r0, r1
 893 0012 FFF7FEFF 		bl	__aeabi_i2f
 894              	.LVL51:
 895 0016 0849     		ldr	r1, .L73+8
 896 0018 FFF7FEFF 		bl	__aeabi_fmul
 897              	.LVL52:
 898 001c 041C     		adds	r4, r0, #0
 899 001e 2800     		movs	r0, r5
 900 0020 FFF7FEFF 		bl	__aeabi_i2f
 901              	.LVL53:
 902 0024 011C     		adds	r1, r0, #0
 903 0026 201C     		adds	r0, r4, #0
 904 0028 FFF7FEFF 		bl	__aeabi_fdiv
 905              	.LVL54:
 876:Generated_Source\PSoC4/ADC_GLV_V.c ****     }
 906              		.loc 1 876 0
 907              		@ sp needed
 908 002c 70BD     		pop	{r4, r5, r6, pc}
 909              	.L74:
 910 002e C046     		.align	2
 911              	.L73:
 912 0030 00000000 		.word	ADC_GLV_V_offset
 913 0034 00000000 		.word	ADC_GLV_V_countsPer10Volt
 914 0038 00002041 		.word	1092616192
 915              		.cfi_endproc
 916              	.LFE18:
 917              		.size	ADC_GLV_V_CountsTo_Volts, .-ADC_GLV_V_CountsTo_Volts
 918              		.comm	ADC_GLV_V_countsPer10Volt,8,4
 919              		.comm	ADC_GLV_V_offset,4,2
 920              		.global	ADC_GLV_V_initVar
 921              		.bss
 922              		.set	.LANCHOR0,. + 0
 923              		.type	ADC_GLV_V_initVar, %object
 924              		.size	ADC_GLV_V_initVar, 1
 925              	ADC_GLV_V_initVar:
 926 0000 00       		.space	1
 927              		.text
 928              	.Letext0:
 929              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 930              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 931              		.section	.debug_info,"",%progbits
 932              	.Ldebug_info0:
 933 0000 42050000 		.4byte	0x542
 934 0004 0400     		.2byte	0x4
 935 0006 00000000 		.4byte	.Ldebug_abbrev0
 936 000a 04       		.byte	0x4
 937 000b 01       		.uleb128 0x1
 938 000c 7C020000 		.4byte	.LASF63
 939 0010 0C       		.byte	0xc
 940 0011 8C000000 		.4byte	.LASF64
 941 0015 2A000000 		.4byte	.LASF65
 942 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 34


 943 001d 00000000 		.4byte	0
 944 0021 00000000 		.4byte	.Ldebug_line0
 945 0025 02       		.uleb128 0x2
 946 0026 08       		.byte	0x8
 947 0027 07       		.byte	0x7
 948 0028 AF000000 		.4byte	.LASF0
 949 002c 02       		.uleb128 0x2
 950 002d 08       		.byte	0x8
 951 002e 05       		.byte	0x5
 952 002f 10010000 		.4byte	.LASF1
 953 0033 03       		.uleb128 0x3
 954 0034 04       		.byte	0x4
 955 0035 05       		.byte	0x5
 956 0036 696E7400 		.ascii	"int\000"
 957 003a 02       		.uleb128 0x2
 958 003b 04       		.byte	0x4
 959 003c 04       		.byte	0x4
 960 003d 32030000 		.4byte	.LASF2
 961 0041 02       		.uleb128 0x2
 962 0042 02       		.byte	0x2
 963 0043 05       		.byte	0x5
 964 0044 80030000 		.4byte	.LASF3
 965 0048 02       		.uleb128 0x2
 966 0049 01       		.byte	0x1
 967 004a 06       		.byte	0x6
 968 004b 1E010000 		.4byte	.LASF4
 969 004f 02       		.uleb128 0x2
 970 0050 01       		.byte	0x1
 971 0051 08       		.byte	0x8
 972 0052 5C030000 		.4byte	.LASF5
 973 0056 02       		.uleb128 0x2
 974 0057 02       		.byte	0x2
 975 0058 07       		.byte	0x7
 976 0059 FB010000 		.4byte	.LASF6
 977 005d 02       		.uleb128 0x2
 978 005e 04       		.byte	0x4
 979 005f 05       		.byte	0x5
 980 0060 5C010000 		.4byte	.LASF7
 981 0064 02       		.uleb128 0x2
 982 0065 04       		.byte	0x4
 983 0066 07       		.byte	0x7
 984 0067 D9010000 		.4byte	.LASF8
 985 006b 02       		.uleb128 0x2
 986 006c 04       		.byte	0x4
 987 006d 07       		.byte	0x7
 988 006e C5010000 		.4byte	.LASF9
 989 0072 04       		.uleb128 0x4
 990 0073 74010000 		.4byte	.LASF10
 991 0077 02       		.byte	0x2
 992 0078 FC01     		.2byte	0x1fc
 993 007a 4F000000 		.4byte	0x4f
 994 007e 04       		.uleb128 0x4
 995 007f 14000000 		.4byte	.LASF11
 996 0083 02       		.byte	0x2
 997 0084 FD01     		.2byte	0x1fd
 998 0086 56000000 		.4byte	0x56
 999 008a 04       		.uleb128 0x4
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 35


 1000 008b 8B010000 		.4byte	.LASF12
 1001 008f 02       		.byte	0x2
 1002 0090 FE01     		.2byte	0x1fe
 1003 0092 64000000 		.4byte	0x64
 1004 0096 04       		.uleb128 0x4
 1005 0097 20040000 		.4byte	.LASF13
 1006 009b 02       		.byte	0x2
 1007 009c 0002     		.2byte	0x200
 1008 009e 41000000 		.4byte	0x41
 1009 00a2 04       		.uleb128 0x4
 1010 00a3 3F010000 		.4byte	.LASF14
 1011 00a7 02       		.byte	0x2
 1012 00a8 0102     		.2byte	0x201
 1013 00aa 5D000000 		.4byte	0x5d
 1014 00ae 04       		.uleb128 0x4
 1015 00af 3C020000 		.4byte	.LASF15
 1016 00b3 02       		.byte	0x2
 1017 00b4 0202     		.2byte	0x202
 1018 00b6 3A000000 		.4byte	0x3a
 1019 00ba 02       		.uleb128 0x2
 1020 00bb 08       		.byte	0x8
 1021 00bc 04       		.byte	0x4
 1022 00bd 84010000 		.4byte	.LASF16
 1023 00c1 04       		.uleb128 0x4
 1024 00c2 0A030000 		.4byte	.LASF17
 1025 00c6 02       		.byte	0x2
 1026 00c7 0702     		.2byte	0x207
 1027 00c9 2C000000 		.4byte	0x2c
 1028 00cd 02       		.uleb128 0x2
 1029 00ce 01       		.byte	0x1
 1030 00cf 08       		.byte	0x8
 1031 00d0 A7030000 		.4byte	.LASF18
 1032 00d4 04       		.uleb128 0x4
 1033 00d5 36020000 		.4byte	.LASF19
 1034 00d9 02       		.byte	0x2
 1035 00da A802     		.2byte	0x2a8
 1036 00dc E0000000 		.4byte	0xe0
 1037 00e0 05       		.uleb128 0x5
 1038 00e1 8A000000 		.4byte	0x8a
 1039 00e5 02       		.uleb128 0x2
 1040 00e6 08       		.byte	0x8
 1041 00e7 04       		.byte	0x4
 1042 00e8 56020000 		.4byte	.LASF20
 1043 00ec 02       		.uleb128 0x2
 1044 00ed 04       		.byte	0x4
 1045 00ee 07       		.byte	0x7
 1046 00ef 44020000 		.4byte	.LASF21
 1047 00f3 06       		.uleb128 0x6
 1048 00f4 7B000000 		.4byte	.LASF66
 1049 00f8 01       		.byte	0x1
 1050 00f9 4A01     		.2byte	0x14a
 1051 00fb 01       		.byte	0x1
 1052 00fc 07       		.uleb128 0x7
 1053 00fd 65010000 		.4byte	.LASF26
 1054 0101 01       		.byte	0x1
 1055 0102 5E       		.byte	0x5e
 1056 0103 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 36


 1057 0107 00010000 		.4byte	.LFE2-.LFB2
 1058 010b 01       		.uleb128 0x1
 1059 010c 9C       		.byte	0x9c
 1060 010d 72010000 		.4byte	0x172
 1061 0111 08       		.uleb128 0x8
 1062 0112 8A030000 		.4byte	.LASF22
 1063 0116 01       		.byte	0x1
 1064 0117 60       		.byte	0x60
 1065 0118 8A000000 		.4byte	0x8a
 1066 011c 00000000 		.4byte	.LLST0
 1067 0120 08       		.uleb128 0x8
 1068 0121 F1010000 		.4byte	.LASF23
 1069 0125 01       		.byte	0x1
 1070 0126 61       		.byte	0x61
 1071 0127 8A000000 		.4byte	0x8a
 1072 012b 2C000000 		.4byte	.LLST1
 1073 012f 09       		.uleb128 0x9
 1074 0130 23000000 		.4byte	.LASF24
 1075 0134 01       		.byte	0x1
 1076 0135 62       		.byte	0x62
 1077 0136 A2000000 		.4byte	0xa2
 1078 013a 0010     		.2byte	0x1000
 1079 013c 0A       		.uleb128 0xa
 1080 013d F6000000 		.4byte	.LASF25
 1081 0141 01       		.byte	0x1
 1082 0142 65       		.byte	0x65
 1083 0143 87010000 		.4byte	0x187
 1084 0147 02       		.byte	0x2
 1085 0148 06       		.byte	0x6
 1086 0149 07       		.byte	0x7
 1087 014a 0B       		.uleb128 0xb
 1088 014b 0A000000 		.4byte	.LVL0
 1089 014f 24050000 		.4byte	0x524
 1090 0153 62010000 		.4byte	0x162
 1091 0157 0C       		.uleb128 0xc
 1092 0158 01       		.uleb128 0x1
 1093 0159 50       		.byte	0x50
 1094 015a 01       		.uleb128 0x1
 1095 015b 40       		.byte	0x40
 1096 015c 0C       		.uleb128 0xc
 1097 015d 01       		.uleb128 0x1
 1098 015e 51       		.byte	0x51
 1099 015f 01       		.uleb128 0x1
 1100 0160 33       		.byte	0x33
 1101 0161 00       		.byte	0
 1102 0162 0D       		.uleb128 0xd
 1103 0163 12000000 		.4byte	.LVL1
 1104 0167 2F050000 		.4byte	0x52f
 1105 016b 0C       		.uleb128 0xc
 1106 016c 01       		.uleb128 0x1
 1107 016d 50       		.byte	0x50
 1108 016e 01       		.uleb128 0x1
 1109 016f 40       		.byte	0x40
 1110 0170 00       		.byte	0
 1111 0171 00       		.byte	0
 1112 0172 0E       		.uleb128 0xe
 1113 0173 82010000 		.4byte	0x182
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 37


 1114 0177 82010000 		.4byte	0x182
 1115 017b 0F       		.uleb128 0xf
 1116 017c EC000000 		.4byte	0xec
 1117 0180 01       		.byte	0x1
 1118 0181 00       		.byte	0
 1119 0182 10       		.uleb128 0x10
 1120 0183 72000000 		.4byte	0x72
 1121 0187 10       		.uleb128 0x10
 1122 0188 72010000 		.4byte	0x172
 1123 018c 11       		.uleb128 0x11
 1124 018d F3000000 		.4byte	0xf3
 1125 0191 00000000 		.4byte	.LFB3
 1126 0195 2C000000 		.4byte	.LFE3-.LFB3
 1127 0199 01       		.uleb128 0x1
 1128 019a 9C       		.byte	0x9c
 1129 019b AF010000 		.4byte	0x1af
 1130 019f 0D       		.uleb128 0xd
 1131 01a0 22000000 		.4byte	.LVL9
 1132 01a4 3A050000 		.4byte	0x53a
 1133 01a8 0C       		.uleb128 0xc
 1134 01a9 01       		.uleb128 0x1
 1135 01aa 50       		.byte	0x50
 1136 01ab 01       		.uleb128 0x1
 1137 01ac 3A       		.byte	0x3a
 1138 01ad 00       		.byte	0
 1139 01ae 00       		.byte	0
 1140 01af 07       		.uleb128 0x7
 1141 01b0 92010000 		.4byte	.LASF27
 1142 01b4 01       		.byte	0x1
 1143 01b5 3F       		.byte	0x3f
 1144 01b6 00000000 		.4byte	.LFB1
 1145 01ba 1C000000 		.4byte	.LFE1-.LFB1
 1146 01be 01       		.uleb128 0x1
 1147 01bf 9C       		.byte	0x9c
 1148 01c0 D7010000 		.4byte	0x1d7
 1149 01c4 12       		.uleb128 0x12
 1150 01c5 0E000000 		.4byte	.LVL10
 1151 01c9 FC000000 		.4byte	0xfc
 1152 01cd 12       		.uleb128 0x12
 1153 01ce 16000000 		.4byte	.LVL11
 1154 01d2 F3000000 		.4byte	0xf3
 1155 01d6 00       		.byte	0
 1156 01d7 13       		.uleb128 0x13
 1157 01d8 CC030000 		.4byte	.LASF28
 1158 01dc 01       		.byte	0x1
 1159 01dd 6D01     		.2byte	0x16d
 1160 01df 00000000 		.4byte	.LFB4
 1161 01e3 10000000 		.4byte	.LFE4-.LFB4
 1162 01e7 01       		.uleb128 0x1
 1163 01e8 9C       		.byte	0x9c
 1164 01e9 13       		.uleb128 0x13
 1165 01ea C6000000 		.4byte	.LASF29
 1166 01ee 01       		.byte	0x1
 1167 01ef 8701     		.2byte	0x187
 1168 01f1 00000000 		.4byte	.LFB5
 1169 01f5 14000000 		.4byte	.LFE5-.LFB5
 1170 01f9 01       		.uleb128 0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 38


 1171 01fa 9C       		.byte	0x9c
 1172 01fb 13       		.uleb128 0x13
 1173 01fc 65000000 		.4byte	.LASF30
 1174 0200 01       		.byte	0x1
 1175 0201 A001     		.2byte	0x1a0
 1176 0203 00000000 		.4byte	.LFB6
 1177 0207 14000000 		.4byte	.LFE6-.LFB6
 1178 020b 01       		.uleb128 0x1
 1179 020c 9C       		.byte	0x9c
 1180 020d 14       		.uleb128 0x14
 1181 020e E5030000 		.4byte	.LASF32
 1182 0212 01       		.byte	0x1
 1183 0213 C201     		.2byte	0x1c2
 1184 0215 8A000000 		.4byte	0x8a
 1185 0219 00000000 		.4byte	.LFB7
 1186 021d 2C000000 		.4byte	.LFE7-.LFB7
 1187 0221 01       		.uleb128 0x1
 1188 0222 9C       		.byte	0x9c
 1189 0223 48020000 		.4byte	0x248
 1190 0227 15       		.uleb128 0x15
 1191 0228 BD010000 		.4byte	.LASF34
 1192 022c 01       		.byte	0x1
 1193 022d C201     		.2byte	0x1c2
 1194 022f 8A000000 		.4byte	0x8a
 1195 0233 68000000 		.4byte	.LLST2
 1196 0237 16       		.uleb128 0x16
 1197 0238 FF030000 		.4byte	.LASF31
 1198 023c 01       		.byte	0x1
 1199 023d C401     		.2byte	0x1c4
 1200 023f 8A000000 		.4byte	0x8a
 1201 0243 89000000 		.4byte	.LLST3
 1202 0247 00       		.byte	0
 1203 0248 14       		.uleb128 0x14
 1204 0249 6A030000 		.4byte	.LASF33
 1205 024d 01       		.byte	0x1
 1206 024e F801     		.2byte	0x1f8
 1207 0250 96000000 		.4byte	0x96
 1208 0254 00000000 		.4byte	.LFB8
 1209 0258 18000000 		.4byte	.LFE8-.LFB8
 1210 025c 01       		.uleb128 0x1
 1211 025d 9C       		.byte	0x9c
 1212 025e 81020000 		.4byte	0x281
 1213 0262 15       		.uleb128 0x15
 1214 0263 90030000 		.4byte	.LASF35
 1215 0267 01       		.byte	0x1
 1216 0268 F801     		.2byte	0x1f8
 1217 026a 8A000000 		.4byte	0x8a
 1218 026e A8000000 		.4byte	.LLST4
 1219 0272 17       		.uleb128 0x17
 1220 0273 3C040000 		.4byte	.LASF36
 1221 0277 01       		.byte	0x1
 1222 0278 FA01     		.2byte	0x1fa
 1223 027a 8A000000 		.4byte	0x8a
 1224 027e 01       		.uleb128 0x1
 1225 027f 53       		.byte	0x53
 1226 0280 00       		.byte	0
 1227 0281 18       		.uleb128 0x18
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 39


 1228 0282 26040000 		.4byte	.LASF37
 1229 0286 01       		.byte	0x1
 1230 0287 2502     		.2byte	0x225
 1231 0289 00000000 		.4byte	.LFB9
 1232 028d 10000000 		.4byte	.LFE9-.LFB9
 1233 0291 01       		.uleb128 0x1
 1234 0292 9C       		.byte	0x9c
 1235 0293 A8020000 		.4byte	0x2a8
 1236 0297 15       		.uleb128 0x15
 1237 0298 A2010000 		.4byte	.LASF38
 1238 029c 01       		.byte	0x1
 1239 029d 2502     		.2byte	0x225
 1240 029f 8A000000 		.4byte	0x8a
 1241 02a3 C9000000 		.4byte	.LLST5
 1242 02a7 00       		.byte	0
 1243 02a8 18       		.uleb128 0x18
 1244 02a9 A7010000 		.4byte	.LASF39
 1245 02ad 01       		.byte	0x1
 1246 02ae 5102     		.2byte	0x251
 1247 02b0 00000000 		.4byte	.LFB10
 1248 02b4 18000000 		.4byte	.LFE10-.LFB10
 1249 02b8 01       		.uleb128 0x1
 1250 02b9 9C       		.byte	0x9c
 1251 02ba CF020000 		.4byte	0x2cf
 1252 02be 15       		.uleb128 0x15
 1253 02bf 4D020000 		.4byte	.LASF40
 1254 02c3 01       		.byte	0x1
 1255 02c4 5102     		.2byte	0x251
 1256 02c6 8A000000 		.4byte	0x8a
 1257 02ca EA000000 		.4byte	.LLST6
 1258 02ce 00       		.byte	0
 1259 02cf 18       		.uleb128 0x18
 1260 02d0 45010000 		.4byte	.LASF41
 1261 02d4 01       		.byte	0x1
 1262 02d5 6602     		.2byte	0x266
 1263 02d7 00000000 		.4byte	.LFB11
 1264 02db 18000000 		.4byte	.LFE11-.LFB11
 1265 02df 01       		.uleb128 0x1
 1266 02e0 9C       		.byte	0x9c
 1267 02e1 F6020000 		.4byte	0x2f6
 1268 02e5 15       		.uleb128 0x15
 1269 02e6 38030000 		.4byte	.LASF42
 1270 02ea 01       		.byte	0x1
 1271 02eb 6602     		.2byte	0x266
 1272 02ed 8A000000 		.4byte	0x8a
 1273 02f1 0B010000 		.4byte	.LLST7
 1274 02f5 00       		.byte	0
 1275 02f6 18       		.uleb128 0x18
 1276 02f7 43040000 		.4byte	.LASF43
 1277 02fb 01       		.byte	0x1
 1278 02fc 7E02     		.2byte	0x27e
 1279 02fe 00000000 		.4byte	.LFB12
 1280 0302 10000000 		.4byte	.LFE12-.LFB12
 1281 0306 01       		.uleb128 0x1
 1282 0307 9C       		.byte	0x9c
 1283 0308 1D030000 		.4byte	0x31d
 1284 030c 15       		.uleb128 0x15
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 40


 1285 030d A2010000 		.4byte	.LASF38
 1286 0311 01       		.byte	0x1
 1287 0312 7E02     		.2byte	0x27e
 1288 0314 8A000000 		.4byte	0x8a
 1289 0318 2C010000 		.4byte	.LLST8
 1290 031c 00       		.byte	0
 1291 031d 18       		.uleb128 0x18
 1292 031e 2A010000 		.4byte	.LASF44
 1293 0322 01       		.byte	0x1
 1294 0323 9502     		.2byte	0x295
 1295 0325 00000000 		.4byte	.LFB13
 1296 0329 10000000 		.4byte	.LFE13-.LFB13
 1297 032d 01       		.uleb128 0x1
 1298 032e 9C       		.byte	0x9c
 1299 032f 44030000 		.4byte	0x344
 1300 0333 15       		.uleb128 0x15
 1301 0334 A2010000 		.4byte	.LASF38
 1302 0338 01       		.byte	0x1
 1303 0339 9502     		.2byte	0x295
 1304 033b 8A000000 		.4byte	0x8a
 1305 033f 4D010000 		.4byte	.LLST9
 1306 0343 00       		.byte	0
 1307 0344 18       		.uleb128 0x18
 1308 0345 00000000 		.4byte	.LASF45
 1309 0349 01       		.byte	0x1
 1310 034a B102     		.2byte	0x2b1
 1311 034c 00000000 		.4byte	.LFB14
 1312 0350 0C000000 		.4byte	.LFE14-.LFB14
 1313 0354 01       		.uleb128 0x1
 1314 0355 9C       		.byte	0x9c
 1315 0356 79030000 		.4byte	0x379
 1316 035a 15       		.uleb128 0x15
 1317 035b 90030000 		.4byte	.LASF35
 1318 035f 01       		.byte	0x1
 1319 0360 B102     		.2byte	0x2b1
 1320 0362 8A000000 		.4byte	0x8a
 1321 0366 6E010000 		.4byte	.LLST10
 1322 036a 19       		.uleb128 0x19
 1323 036b C5030000 		.4byte	.LASF46
 1324 036f 01       		.byte	0x1
 1325 0370 B102     		.2byte	0x2b1
 1326 0372 96000000 		.4byte	0x96
 1327 0376 01       		.uleb128 0x1
 1328 0377 51       		.byte	0x51
 1329 0378 00       		.byte	0
 1330 0379 18       		.uleb128 0x18
 1331 037a 95030000 		.4byte	.LASF47
 1332 037e 01       		.byte	0x1
 1333 037f D302     		.2byte	0x2d3
 1334 0381 00000000 		.4byte	.LFB15
 1335 0385 0C000000 		.4byte	.LFE15-.LFB15
 1336 0389 01       		.uleb128 0x1
 1337 038a 9C       		.byte	0x9c
 1338 038b AE030000 		.4byte	0x3ae
 1339 038f 15       		.uleb128 0x15
 1340 0390 90030000 		.4byte	.LASF35
 1341 0394 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 41


 1342 0395 D302     		.2byte	0x2d3
 1343 0397 8A000000 		.4byte	0x8a
 1344 039b 8F010000 		.4byte	.LLST11
 1345 039f 19       		.uleb128 0x19
 1346 03a0 1B000000 		.4byte	.LASF48
 1347 03a4 01       		.byte	0x1
 1348 03a5 D302     		.2byte	0x2d3
 1349 03a7 A2000000 		.4byte	0xa2
 1350 03ab 01       		.uleb128 0x1
 1351 03ac 51       		.byte	0x51
 1352 03ad 00       		.byte	0
 1353 03ae 1A       		.uleb128 0x1a
 1354 03af 42030000 		.4byte	.LASF49
 1355 03b3 01       		.byte	0x1
 1356 03b4 F402     		.2byte	0x2f4
 1357 03b6 96000000 		.4byte	0x96
 1358 03ba 00000000 		.4byte	.LFB16
 1359 03be 3C000000 		.4byte	.LFE16-.LFB16
 1360 03c2 01       		.uleb128 0x1
 1361 03c3 9C       		.byte	0x9c
 1362 03c4 F9030000 		.4byte	0x3f9
 1363 03c8 15       		.uleb128 0x15
 1364 03c9 90030000 		.4byte	.LASF35
 1365 03cd 01       		.byte	0x1
 1366 03ce F402     		.2byte	0x2f4
 1367 03d0 8A000000 		.4byte	0x8a
 1368 03d4 B0010000 		.4byte	.LLST12
 1369 03d8 15       		.uleb128 0x15
 1370 03d9 DB030000 		.4byte	.LASF50
 1371 03dd 01       		.byte	0x1
 1372 03de F402     		.2byte	0x2f4
 1373 03e0 96000000 		.4byte	0x96
 1374 03e4 D1010000 		.4byte	.LLST13
 1375 03e8 16       		.uleb128 0x16
 1376 03e9 1D020000 		.4byte	.LASF51
 1377 03ed 01       		.byte	0x1
 1378 03ee F602     		.2byte	0x2f6
 1379 03f0 96000000 		.4byte	0x96
 1380 03f4 FD010000 		.4byte	.LLST14
 1381 03f8 00       		.byte	0
 1382 03f9 1A       		.uleb128 0x1a
 1383 03fa 62020000 		.4byte	.LASF52
 1384 03fe 01       		.byte	0x1
 1385 03ff 2A03     		.2byte	0x32a
 1386 0401 A2000000 		.4byte	0xa2
 1387 0405 00000000 		.4byte	.LFB17
 1388 0409 34000000 		.4byte	.LFE17-.LFB17
 1389 040d 01       		.uleb128 0x1
 1390 040e 9C       		.byte	0x9c
 1391 040f 44040000 		.4byte	0x444
 1392 0413 15       		.uleb128 0x15
 1393 0414 90030000 		.4byte	.LASF35
 1394 0418 01       		.byte	0x1
 1395 0419 2A03     		.2byte	0x32a
 1396 041b 8A000000 		.4byte	0x8a
 1397 041f 18020000 		.4byte	.LLST15
 1398 0423 15       		.uleb128 0x15
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 42


 1399 0424 DB030000 		.4byte	.LASF50
 1400 0428 01       		.byte	0x1
 1401 0429 2A03     		.2byte	0x32a
 1402 042b 96000000 		.4byte	0x96
 1403 042f 39020000 		.4byte	.LLST16
 1404 0433 16       		.uleb128 0x16
 1405 0434 D2010000 		.4byte	.LASF53
 1406 0438 01       		.byte	0x1
 1407 0439 2C03     		.2byte	0x32c
 1408 043b C1000000 		.4byte	0xc1
 1409 043f 62020000 		.4byte	.LLST17
 1410 0443 00       		.byte	0
 1411 0444 1A       		.uleb128 0x1a
 1412 0445 AC030000 		.4byte	.LASF54
 1413 0449 01       		.byte	0x1
 1414 044a 5703     		.2byte	0x357
 1415 044c AE000000 		.4byte	0xae
 1416 0450 00000000 		.4byte	.LFB18
 1417 0454 3C000000 		.4byte	.LFE18-.LFB18
 1418 0458 01       		.uleb128 0x1
 1419 0459 9C       		.byte	0x9c
 1420 045a 8F040000 		.4byte	0x48f
 1421 045e 15       		.uleb128 0x15
 1422 045f 90030000 		.4byte	.LASF35
 1423 0463 01       		.byte	0x1
 1424 0464 5703     		.2byte	0x357
 1425 0466 8A000000 		.4byte	0x8a
 1426 046a B2020000 		.4byte	.LLST18
 1427 046e 15       		.uleb128 0x15
 1428 046f DB030000 		.4byte	.LASF50
 1429 0473 01       		.byte	0x1
 1430 0474 5703     		.2byte	0x357
 1431 0476 96000000 		.4byte	0x96
 1432 047a D3020000 		.4byte	.LLST19
 1433 047e 16       		.uleb128 0x16
 1434 047f EB010000 		.4byte	.LASF55
 1435 0483 01       		.byte	0x1
 1436 0484 5903     		.2byte	0x359
 1437 0486 AE000000 		.4byte	0xae
 1438 048a F1020000 		.4byte	.LLST20
 1439 048e 00       		.byte	0
 1440 048f 0E       		.uleb128 0xe
 1441 0490 9F040000 		.4byte	0x49f
 1442 0494 9F040000 		.4byte	0x49f
 1443 0498 0F       		.uleb128 0xf
 1444 0499 EC000000 		.4byte	0xec
 1445 049d 01       		.byte	0x1
 1446 049e 00       		.byte	0
 1447 049f 10       		.uleb128 0x10
 1448 04a0 8A000000 		.4byte	0x8a
 1449 04a4 0A       		.uleb128 0xa
 1450 04a5 DD000000 		.4byte	.LASF56
 1451 04a9 01       		.byte	0x1
 1452 04aa 21       		.byte	0x21
 1453 04ab B8040000 		.4byte	0x4b8
 1454 04af 08       		.byte	0x8
 1455 04b0 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 43


 1456 04b1 00       		.byte	0
 1457 04b2 00       		.byte	0
 1458 04b3 00       		.byte	0
 1459 04b4 00       		.byte	0
 1460 04b5 00       		.byte	0
 1461 04b6 00       		.byte	0
 1462 04b7 00       		.byte	0
 1463 04b8 10       		.uleb128 0x10
 1464 04b9 8F040000 		.4byte	0x48f
 1465 04bd 1B       		.uleb128 0x1b
 1466 04be 24020000 		.4byte	.LASF57
 1467 04c2 01       		.byte	0x1
 1468 04c3 18       		.byte	0x18
 1469 04c4 72000000 		.4byte	0x72
 1470 04c8 05       		.uleb128 0x5
 1471 04c9 03       		.byte	0x3
 1472 04ca 00000000 		.4byte	ADC_GLV_V_initVar
 1473 04ce 0E       		.uleb128 0xe
 1474 04cf DE040000 		.4byte	0x4de
 1475 04d3 DE040000 		.4byte	0x4de
 1476 04d7 0F       		.uleb128 0xf
 1477 04d8 EC000000 		.4byte	0xec
 1478 04dc 01       		.byte	0x1
 1479 04dd 00       		.byte	0
 1480 04de 05       		.uleb128 0x5
 1481 04df 96000000 		.4byte	0x96
 1482 04e3 1B       		.uleb128 0x1b
 1483 04e4 21030000 		.4byte	.LASF58
 1484 04e8 01       		.byte	0x1
 1485 04e9 19       		.byte	0x19
 1486 04ea F4040000 		.4byte	0x4f4
 1487 04ee 05       		.uleb128 0x5
 1488 04ef 03       		.byte	0x3
 1489 04f0 00000000 		.4byte	ADC_GLV_V_offset
 1490 04f4 05       		.uleb128 0x5
 1491 04f5 CE040000 		.4byte	0x4ce
 1492 04f9 0E       		.uleb128 0xe
 1493 04fa 09050000 		.4byte	0x509
 1494 04fe 09050000 		.4byte	0x509
 1495 0502 0F       		.uleb128 0xf
 1496 0503 EC000000 		.4byte	0xec
 1497 0507 01       		.byte	0x1
 1498 0508 00       		.byte	0
 1499 0509 05       		.uleb128 0x5
 1500 050a A2000000 		.4byte	0xa2
 1501 050e 1B       		.uleb128 0x1b
 1502 050f 06040000 		.4byte	.LASF59
 1503 0513 01       		.byte	0x1
 1504 0514 1A       		.byte	0x1a
 1505 0515 1F050000 		.4byte	0x51f
 1506 0519 05       		.uleb128 0x5
 1507 051a 03       		.byte	0x3
 1508 051b 00000000 		.4byte	ADC_GLV_V_countsPer10Volt
 1509 051f 05       		.uleb128 0x5
 1510 0520 F9040000 		.4byte	0x4f9
 1511 0524 1C       		.uleb128 0x1c
 1512 0525 10030000 		.4byte	.LASF60
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 44


 1513 0529 10030000 		.4byte	.LASF60
 1514 052d 03       		.byte	0x3
 1515 052e D3       		.byte	0xd3
 1516 052f 1C       		.uleb128 0x1c
 1517 0530 0E020000 		.4byte	.LASF61
 1518 0534 0E020000 		.4byte	.LASF61
 1519 0538 03       		.byte	0x3
 1520 0539 D0       		.byte	0xd0
 1521 053a 1C       		.uleb128 0x1c
 1522 053b 7A010000 		.4byte	.LASF62
 1523 053f 7A010000 		.4byte	.LASF62
 1524 0543 03       		.byte	0x3
 1525 0544 ED       		.byte	0xed
 1526 0545 00       		.byte	0
 1527              		.section	.debug_abbrev,"",%progbits
 1528              	.Ldebug_abbrev0:
 1529 0000 01       		.uleb128 0x1
 1530 0001 11       		.uleb128 0x11
 1531 0002 01       		.byte	0x1
 1532 0003 25       		.uleb128 0x25
 1533 0004 0E       		.uleb128 0xe
 1534 0005 13       		.uleb128 0x13
 1535 0006 0B       		.uleb128 0xb
 1536 0007 03       		.uleb128 0x3
 1537 0008 0E       		.uleb128 0xe
 1538 0009 1B       		.uleb128 0x1b
 1539 000a 0E       		.uleb128 0xe
 1540 000b 55       		.uleb128 0x55
 1541 000c 17       		.uleb128 0x17
 1542 000d 11       		.uleb128 0x11
 1543 000e 01       		.uleb128 0x1
 1544 000f 10       		.uleb128 0x10
 1545 0010 17       		.uleb128 0x17
 1546 0011 00       		.byte	0
 1547 0012 00       		.byte	0
 1548 0013 02       		.uleb128 0x2
 1549 0014 24       		.uleb128 0x24
 1550 0015 00       		.byte	0
 1551 0016 0B       		.uleb128 0xb
 1552 0017 0B       		.uleb128 0xb
 1553 0018 3E       		.uleb128 0x3e
 1554 0019 0B       		.uleb128 0xb
 1555 001a 03       		.uleb128 0x3
 1556 001b 0E       		.uleb128 0xe
 1557 001c 00       		.byte	0
 1558 001d 00       		.byte	0
 1559 001e 03       		.uleb128 0x3
 1560 001f 24       		.uleb128 0x24
 1561 0020 00       		.byte	0
 1562 0021 0B       		.uleb128 0xb
 1563 0022 0B       		.uleb128 0xb
 1564 0023 3E       		.uleb128 0x3e
 1565 0024 0B       		.uleb128 0xb
 1566 0025 03       		.uleb128 0x3
 1567 0026 08       		.uleb128 0x8
 1568 0027 00       		.byte	0
 1569 0028 00       		.byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 45


 1570 0029 04       		.uleb128 0x4
 1571 002a 16       		.uleb128 0x16
 1572 002b 00       		.byte	0
 1573 002c 03       		.uleb128 0x3
 1574 002d 0E       		.uleb128 0xe
 1575 002e 3A       		.uleb128 0x3a
 1576 002f 0B       		.uleb128 0xb
 1577 0030 3B       		.uleb128 0x3b
 1578 0031 05       		.uleb128 0x5
 1579 0032 49       		.uleb128 0x49
 1580 0033 13       		.uleb128 0x13
 1581 0034 00       		.byte	0
 1582 0035 00       		.byte	0
 1583 0036 05       		.uleb128 0x5
 1584 0037 35       		.uleb128 0x35
 1585 0038 00       		.byte	0
 1586 0039 49       		.uleb128 0x49
 1587 003a 13       		.uleb128 0x13
 1588 003b 00       		.byte	0
 1589 003c 00       		.byte	0
 1590 003d 06       		.uleb128 0x6
 1591 003e 2E       		.uleb128 0x2e
 1592 003f 00       		.byte	0
 1593 0040 3F       		.uleb128 0x3f
 1594 0041 19       		.uleb128 0x19
 1595 0042 03       		.uleb128 0x3
 1596 0043 0E       		.uleb128 0xe
 1597 0044 3A       		.uleb128 0x3a
 1598 0045 0B       		.uleb128 0xb
 1599 0046 3B       		.uleb128 0x3b
 1600 0047 05       		.uleb128 0x5
 1601 0048 27       		.uleb128 0x27
 1602 0049 19       		.uleb128 0x19
 1603 004a 20       		.uleb128 0x20
 1604 004b 0B       		.uleb128 0xb
 1605 004c 00       		.byte	0
 1606 004d 00       		.byte	0
 1607 004e 07       		.uleb128 0x7
 1608 004f 2E       		.uleb128 0x2e
 1609 0050 01       		.byte	0x1
 1610 0051 3F       		.uleb128 0x3f
 1611 0052 19       		.uleb128 0x19
 1612 0053 03       		.uleb128 0x3
 1613 0054 0E       		.uleb128 0xe
 1614 0055 3A       		.uleb128 0x3a
 1615 0056 0B       		.uleb128 0xb
 1616 0057 3B       		.uleb128 0x3b
 1617 0058 0B       		.uleb128 0xb
 1618 0059 27       		.uleb128 0x27
 1619 005a 19       		.uleb128 0x19
 1620 005b 11       		.uleb128 0x11
 1621 005c 01       		.uleb128 0x1
 1622 005d 12       		.uleb128 0x12
 1623 005e 06       		.uleb128 0x6
 1624 005f 40       		.uleb128 0x40
 1625 0060 18       		.uleb128 0x18
 1626 0061 9742     		.uleb128 0x2117
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 46


 1627 0063 19       		.uleb128 0x19
 1628 0064 01       		.uleb128 0x1
 1629 0065 13       		.uleb128 0x13
 1630 0066 00       		.byte	0
 1631 0067 00       		.byte	0
 1632 0068 08       		.uleb128 0x8
 1633 0069 34       		.uleb128 0x34
 1634 006a 00       		.byte	0
 1635 006b 03       		.uleb128 0x3
 1636 006c 0E       		.uleb128 0xe
 1637 006d 3A       		.uleb128 0x3a
 1638 006e 0B       		.uleb128 0xb
 1639 006f 3B       		.uleb128 0x3b
 1640 0070 0B       		.uleb128 0xb
 1641 0071 49       		.uleb128 0x49
 1642 0072 13       		.uleb128 0x13
 1643 0073 02       		.uleb128 0x2
 1644 0074 17       		.uleb128 0x17
 1645 0075 00       		.byte	0
 1646 0076 00       		.byte	0
 1647 0077 09       		.uleb128 0x9
 1648 0078 34       		.uleb128 0x34
 1649 0079 00       		.byte	0
 1650 007a 03       		.uleb128 0x3
 1651 007b 0E       		.uleb128 0xe
 1652 007c 3A       		.uleb128 0x3a
 1653 007d 0B       		.uleb128 0xb
 1654 007e 3B       		.uleb128 0x3b
 1655 007f 0B       		.uleb128 0xb
 1656 0080 49       		.uleb128 0x49
 1657 0081 13       		.uleb128 0x13
 1658 0082 1C       		.uleb128 0x1c
 1659 0083 05       		.uleb128 0x5
 1660 0084 00       		.byte	0
 1661 0085 00       		.byte	0
 1662 0086 0A       		.uleb128 0xa
 1663 0087 34       		.uleb128 0x34
 1664 0088 00       		.byte	0
 1665 0089 03       		.uleb128 0x3
 1666 008a 0E       		.uleb128 0xe
 1667 008b 3A       		.uleb128 0x3a
 1668 008c 0B       		.uleb128 0xb
 1669 008d 3B       		.uleb128 0x3b
 1670 008e 0B       		.uleb128 0xb
 1671 008f 49       		.uleb128 0x49
 1672 0090 13       		.uleb128 0x13
 1673 0091 1C       		.uleb128 0x1c
 1674 0092 0A       		.uleb128 0xa
 1675 0093 00       		.byte	0
 1676 0094 00       		.byte	0
 1677 0095 0B       		.uleb128 0xb
 1678 0096 898201   		.uleb128 0x4109
 1679 0099 01       		.byte	0x1
 1680 009a 11       		.uleb128 0x11
 1681 009b 01       		.uleb128 0x1
 1682 009c 31       		.uleb128 0x31
 1683 009d 13       		.uleb128 0x13
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 47


 1684 009e 01       		.uleb128 0x1
 1685 009f 13       		.uleb128 0x13
 1686 00a0 00       		.byte	0
 1687 00a1 00       		.byte	0
 1688 00a2 0C       		.uleb128 0xc
 1689 00a3 8A8201   		.uleb128 0x410a
 1690 00a6 00       		.byte	0
 1691 00a7 02       		.uleb128 0x2
 1692 00a8 18       		.uleb128 0x18
 1693 00a9 9142     		.uleb128 0x2111
 1694 00ab 18       		.uleb128 0x18
 1695 00ac 00       		.byte	0
 1696 00ad 00       		.byte	0
 1697 00ae 0D       		.uleb128 0xd
 1698 00af 898201   		.uleb128 0x4109
 1699 00b2 01       		.byte	0x1
 1700 00b3 11       		.uleb128 0x11
 1701 00b4 01       		.uleb128 0x1
 1702 00b5 31       		.uleb128 0x31
 1703 00b6 13       		.uleb128 0x13
 1704 00b7 00       		.byte	0
 1705 00b8 00       		.byte	0
 1706 00b9 0E       		.uleb128 0xe
 1707 00ba 01       		.uleb128 0x1
 1708 00bb 01       		.byte	0x1
 1709 00bc 49       		.uleb128 0x49
 1710 00bd 13       		.uleb128 0x13
 1711 00be 01       		.uleb128 0x1
 1712 00bf 13       		.uleb128 0x13
 1713 00c0 00       		.byte	0
 1714 00c1 00       		.byte	0
 1715 00c2 0F       		.uleb128 0xf
 1716 00c3 21       		.uleb128 0x21
 1717 00c4 00       		.byte	0
 1718 00c5 49       		.uleb128 0x49
 1719 00c6 13       		.uleb128 0x13
 1720 00c7 2F       		.uleb128 0x2f
 1721 00c8 0B       		.uleb128 0xb
 1722 00c9 00       		.byte	0
 1723 00ca 00       		.byte	0
 1724 00cb 10       		.uleb128 0x10
 1725 00cc 26       		.uleb128 0x26
 1726 00cd 00       		.byte	0
 1727 00ce 49       		.uleb128 0x49
 1728 00cf 13       		.uleb128 0x13
 1729 00d0 00       		.byte	0
 1730 00d1 00       		.byte	0
 1731 00d2 11       		.uleb128 0x11
 1732 00d3 2E       		.uleb128 0x2e
 1733 00d4 01       		.byte	0x1
 1734 00d5 31       		.uleb128 0x31
 1735 00d6 13       		.uleb128 0x13
 1736 00d7 11       		.uleb128 0x11
 1737 00d8 01       		.uleb128 0x1
 1738 00d9 12       		.uleb128 0x12
 1739 00da 06       		.uleb128 0x6
 1740 00db 40       		.uleb128 0x40
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 48


 1741 00dc 18       		.uleb128 0x18
 1742 00dd 9742     		.uleb128 0x2117
 1743 00df 19       		.uleb128 0x19
 1744 00e0 01       		.uleb128 0x1
 1745 00e1 13       		.uleb128 0x13
 1746 00e2 00       		.byte	0
 1747 00e3 00       		.byte	0
 1748 00e4 12       		.uleb128 0x12
 1749 00e5 898201   		.uleb128 0x4109
 1750 00e8 00       		.byte	0
 1751 00e9 11       		.uleb128 0x11
 1752 00ea 01       		.uleb128 0x1
 1753 00eb 31       		.uleb128 0x31
 1754 00ec 13       		.uleb128 0x13
 1755 00ed 00       		.byte	0
 1756 00ee 00       		.byte	0
 1757 00ef 13       		.uleb128 0x13
 1758 00f0 2E       		.uleb128 0x2e
 1759 00f1 00       		.byte	0
 1760 00f2 3F       		.uleb128 0x3f
 1761 00f3 19       		.uleb128 0x19
 1762 00f4 03       		.uleb128 0x3
 1763 00f5 0E       		.uleb128 0xe
 1764 00f6 3A       		.uleb128 0x3a
 1765 00f7 0B       		.uleb128 0xb
 1766 00f8 3B       		.uleb128 0x3b
 1767 00f9 05       		.uleb128 0x5
 1768 00fa 27       		.uleb128 0x27
 1769 00fb 19       		.uleb128 0x19
 1770 00fc 11       		.uleb128 0x11
 1771 00fd 01       		.uleb128 0x1
 1772 00fe 12       		.uleb128 0x12
 1773 00ff 06       		.uleb128 0x6
 1774 0100 40       		.uleb128 0x40
 1775 0101 18       		.uleb128 0x18
 1776 0102 9742     		.uleb128 0x2117
 1777 0104 19       		.uleb128 0x19
 1778 0105 00       		.byte	0
 1779 0106 00       		.byte	0
 1780 0107 14       		.uleb128 0x14
 1781 0108 2E       		.uleb128 0x2e
 1782 0109 01       		.byte	0x1
 1783 010a 3F       		.uleb128 0x3f
 1784 010b 19       		.uleb128 0x19
 1785 010c 03       		.uleb128 0x3
 1786 010d 0E       		.uleb128 0xe
 1787 010e 3A       		.uleb128 0x3a
 1788 010f 0B       		.uleb128 0xb
 1789 0110 3B       		.uleb128 0x3b
 1790 0111 05       		.uleb128 0x5
 1791 0112 27       		.uleb128 0x27
 1792 0113 19       		.uleb128 0x19
 1793 0114 49       		.uleb128 0x49
 1794 0115 13       		.uleb128 0x13
 1795 0116 11       		.uleb128 0x11
 1796 0117 01       		.uleb128 0x1
 1797 0118 12       		.uleb128 0x12
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 49


 1798 0119 06       		.uleb128 0x6
 1799 011a 40       		.uleb128 0x40
 1800 011b 18       		.uleb128 0x18
 1801 011c 9742     		.uleb128 0x2117
 1802 011e 19       		.uleb128 0x19
 1803 011f 01       		.uleb128 0x1
 1804 0120 13       		.uleb128 0x13
 1805 0121 00       		.byte	0
 1806 0122 00       		.byte	0
 1807 0123 15       		.uleb128 0x15
 1808 0124 05       		.uleb128 0x5
 1809 0125 00       		.byte	0
 1810 0126 03       		.uleb128 0x3
 1811 0127 0E       		.uleb128 0xe
 1812 0128 3A       		.uleb128 0x3a
 1813 0129 0B       		.uleb128 0xb
 1814 012a 3B       		.uleb128 0x3b
 1815 012b 05       		.uleb128 0x5
 1816 012c 49       		.uleb128 0x49
 1817 012d 13       		.uleb128 0x13
 1818 012e 02       		.uleb128 0x2
 1819 012f 17       		.uleb128 0x17
 1820 0130 00       		.byte	0
 1821 0131 00       		.byte	0
 1822 0132 16       		.uleb128 0x16
 1823 0133 34       		.uleb128 0x34
 1824 0134 00       		.byte	0
 1825 0135 03       		.uleb128 0x3
 1826 0136 0E       		.uleb128 0xe
 1827 0137 3A       		.uleb128 0x3a
 1828 0138 0B       		.uleb128 0xb
 1829 0139 3B       		.uleb128 0x3b
 1830 013a 05       		.uleb128 0x5
 1831 013b 49       		.uleb128 0x49
 1832 013c 13       		.uleb128 0x13
 1833 013d 02       		.uleb128 0x2
 1834 013e 17       		.uleb128 0x17
 1835 013f 00       		.byte	0
 1836 0140 00       		.byte	0
 1837 0141 17       		.uleb128 0x17
 1838 0142 34       		.uleb128 0x34
 1839 0143 00       		.byte	0
 1840 0144 03       		.uleb128 0x3
 1841 0145 0E       		.uleb128 0xe
 1842 0146 3A       		.uleb128 0x3a
 1843 0147 0B       		.uleb128 0xb
 1844 0148 3B       		.uleb128 0x3b
 1845 0149 05       		.uleb128 0x5
 1846 014a 49       		.uleb128 0x49
 1847 014b 13       		.uleb128 0x13
 1848 014c 02       		.uleb128 0x2
 1849 014d 18       		.uleb128 0x18
 1850 014e 00       		.byte	0
 1851 014f 00       		.byte	0
 1852 0150 18       		.uleb128 0x18
 1853 0151 2E       		.uleb128 0x2e
 1854 0152 01       		.byte	0x1
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 50


 1855 0153 3F       		.uleb128 0x3f
 1856 0154 19       		.uleb128 0x19
 1857 0155 03       		.uleb128 0x3
 1858 0156 0E       		.uleb128 0xe
 1859 0157 3A       		.uleb128 0x3a
 1860 0158 0B       		.uleb128 0xb
 1861 0159 3B       		.uleb128 0x3b
 1862 015a 05       		.uleb128 0x5
 1863 015b 27       		.uleb128 0x27
 1864 015c 19       		.uleb128 0x19
 1865 015d 11       		.uleb128 0x11
 1866 015e 01       		.uleb128 0x1
 1867 015f 12       		.uleb128 0x12
 1868 0160 06       		.uleb128 0x6
 1869 0161 40       		.uleb128 0x40
 1870 0162 18       		.uleb128 0x18
 1871 0163 9742     		.uleb128 0x2117
 1872 0165 19       		.uleb128 0x19
 1873 0166 01       		.uleb128 0x1
 1874 0167 13       		.uleb128 0x13
 1875 0168 00       		.byte	0
 1876 0169 00       		.byte	0
 1877 016a 19       		.uleb128 0x19
 1878 016b 05       		.uleb128 0x5
 1879 016c 00       		.byte	0
 1880 016d 03       		.uleb128 0x3
 1881 016e 0E       		.uleb128 0xe
 1882 016f 3A       		.uleb128 0x3a
 1883 0170 0B       		.uleb128 0xb
 1884 0171 3B       		.uleb128 0x3b
 1885 0172 05       		.uleb128 0x5
 1886 0173 49       		.uleb128 0x49
 1887 0174 13       		.uleb128 0x13
 1888 0175 02       		.uleb128 0x2
 1889 0176 18       		.uleb128 0x18
 1890 0177 00       		.byte	0
 1891 0178 00       		.byte	0
 1892 0179 1A       		.uleb128 0x1a
 1893 017a 2E       		.uleb128 0x2e
 1894 017b 01       		.byte	0x1
 1895 017c 3F       		.uleb128 0x3f
 1896 017d 19       		.uleb128 0x19
 1897 017e 03       		.uleb128 0x3
 1898 017f 0E       		.uleb128 0xe
 1899 0180 3A       		.uleb128 0x3a
 1900 0181 0B       		.uleb128 0xb
 1901 0182 3B       		.uleb128 0x3b
 1902 0183 05       		.uleb128 0x5
 1903 0184 27       		.uleb128 0x27
 1904 0185 19       		.uleb128 0x19
 1905 0186 49       		.uleb128 0x49
 1906 0187 13       		.uleb128 0x13
 1907 0188 11       		.uleb128 0x11
 1908 0189 01       		.uleb128 0x1
 1909 018a 12       		.uleb128 0x12
 1910 018b 06       		.uleb128 0x6
 1911 018c 40       		.uleb128 0x40
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 51


 1912 018d 18       		.uleb128 0x18
 1913 018e 9642     		.uleb128 0x2116
 1914 0190 19       		.uleb128 0x19
 1915 0191 01       		.uleb128 0x1
 1916 0192 13       		.uleb128 0x13
 1917 0193 00       		.byte	0
 1918 0194 00       		.byte	0
 1919 0195 1B       		.uleb128 0x1b
 1920 0196 34       		.uleb128 0x34
 1921 0197 00       		.byte	0
 1922 0198 03       		.uleb128 0x3
 1923 0199 0E       		.uleb128 0xe
 1924 019a 3A       		.uleb128 0x3a
 1925 019b 0B       		.uleb128 0xb
 1926 019c 3B       		.uleb128 0x3b
 1927 019d 0B       		.uleb128 0xb
 1928 019e 49       		.uleb128 0x49
 1929 019f 13       		.uleb128 0x13
 1930 01a0 3F       		.uleb128 0x3f
 1931 01a1 19       		.uleb128 0x19
 1932 01a2 02       		.uleb128 0x2
 1933 01a3 18       		.uleb128 0x18
 1934 01a4 00       		.byte	0
 1935 01a5 00       		.byte	0
 1936 01a6 1C       		.uleb128 0x1c
 1937 01a7 2E       		.uleb128 0x2e
 1938 01a8 00       		.byte	0
 1939 01a9 3F       		.uleb128 0x3f
 1940 01aa 19       		.uleb128 0x19
 1941 01ab 3C       		.uleb128 0x3c
 1942 01ac 19       		.uleb128 0x19
 1943 01ad 6E       		.uleb128 0x6e
 1944 01ae 0E       		.uleb128 0xe
 1945 01af 03       		.uleb128 0x3
 1946 01b0 0E       		.uleb128 0xe
 1947 01b1 3A       		.uleb128 0x3a
 1948 01b2 0B       		.uleb128 0xb
 1949 01b3 3B       		.uleb128 0x3b
 1950 01b4 0B       		.uleb128 0xb
 1951 01b5 00       		.byte	0
 1952 01b6 00       		.byte	0
 1953 01b7 00       		.byte	0
 1954              		.section	.debug_loc,"",%progbits
 1955              	.Ldebug_loc0:
 1956              	.LLST0:
 1957 0000 80000000 		.4byte	.LVL5
 1958 0004 90000000 		.4byte	.LVL7
 1959 0008 0200     		.2byte	0x2
 1960 000a 30       		.byte	0x30
 1961 000b 9F       		.byte	0x9f
 1962 000c 90000000 		.4byte	.LVL7
 1963 0010 96000000 		.4byte	.LVL8
 1964 0014 0200     		.2byte	0x2
 1965 0016 31       		.byte	0x31
 1966 0017 9F       		.byte	0x9f
 1967 0018 96000000 		.4byte	.LVL8
 1968 001c 00010000 		.4byte	.LFE2
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 52


 1969 0020 0200     		.2byte	0x2
 1970 0022 32       		.byte	0x32
 1971 0023 9F       		.byte	0x9f
 1972 0024 00000000 		.4byte	0
 1973 0028 00000000 		.4byte	0
 1974              	.LLST1:
 1975 002c 76000000 		.4byte	.LVL2
 1976 0030 7A000000 		.4byte	.LVL3
 1977 0034 0700     		.2byte	0x7
 1978 0036 70       		.byte	0x70
 1979 0037 00       		.sleb128 0
 1980 0038 40       		.byte	0x40
 1981 0039 49       		.byte	0x49
 1982 003a 24       		.byte	0x24
 1983 003b 21       		.byte	0x21
 1984 003c 9F       		.byte	0x9f
 1985 003d 7E000000 		.4byte	.LVL4
 1986 0041 80000000 		.4byte	.LVL5
 1987 0045 0100     		.2byte	0x1
 1988 0047 52       		.byte	0x52
 1989 0048 80000000 		.4byte	.LVL5
 1990 004c 90000000 		.4byte	.LVL7
 1991 0050 0200     		.2byte	0x2
 1992 0052 36       		.byte	0x36
 1993 0053 9F       		.byte	0x9f
 1994 0054 90000000 		.4byte	.LVL7
 1995 0058 00010000 		.4byte	.LFE2
 1996 005c 0200     		.2byte	0x2
 1997 005e 37       		.byte	0x37
 1998 005f 9F       		.byte	0x9f
 1999 0060 00000000 		.4byte	0
 2000 0064 00000000 		.4byte	0
 2001              	.LLST2:
 2002 0068 00000000 		.4byte	.LVL12
 2003 006c 10000000 		.4byte	.LVL13
 2004 0070 0100     		.2byte	0x1
 2005 0072 50       		.byte	0x50
 2006 0073 10000000 		.4byte	.LVL13
 2007 0077 2C000000 		.4byte	.LFE7
 2008 007b 0400     		.2byte	0x4
 2009 007d F3       		.byte	0xf3
 2010 007e 01       		.uleb128 0x1
 2011 007f 50       		.byte	0x50
 2012 0080 9F       		.byte	0x9f
 2013 0081 00000000 		.4byte	0
 2014 0085 00000000 		.4byte	0
 2015              	.LLST3:
 2016 0089 00000000 		.4byte	.LVL12
 2017 008d 10000000 		.4byte	.LVL13
 2018 0091 0200     		.2byte	0x2
 2019 0093 30       		.byte	0x30
 2020 0094 9F       		.byte	0x9f
 2021 0095 16000000 		.4byte	.LVL14
 2022 0099 20000000 		.4byte	.LVL15
 2023 009d 0100     		.2byte	0x1
 2024 009f 53       		.byte	0x53
 2025 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 53


 2026 00a4 00000000 		.4byte	0
 2027              	.LLST4:
 2028 00a8 00000000 		.4byte	.LVL17
 2029 00ac 0A000000 		.4byte	.LVL18
 2030 00b0 0100     		.2byte	0x1
 2031 00b2 50       		.byte	0x50
 2032 00b3 0A000000 		.4byte	.LVL18
 2033 00b7 18000000 		.4byte	.LFE8
 2034 00bb 0400     		.2byte	0x4
 2035 00bd F3       		.byte	0xf3
 2036 00be 01       		.uleb128 0x1
 2037 00bf 50       		.byte	0x50
 2038 00c0 9F       		.byte	0x9f
 2039 00c1 00000000 		.4byte	0
 2040 00c5 00000000 		.4byte	0
 2041              	.LLST5:
 2042 00c9 00000000 		.4byte	.LVL20
 2043 00cd 04000000 		.4byte	.LVL21
 2044 00d1 0100     		.2byte	0x1
 2045 00d3 50       		.byte	0x50
 2046 00d4 04000000 		.4byte	.LVL21
 2047 00d8 10000000 		.4byte	.LFE9
 2048 00dc 0400     		.2byte	0x4
 2049 00de F3       		.byte	0xf3
 2050 00df 01       		.uleb128 0x1
 2051 00e0 50       		.byte	0x50
 2052 00e1 9F       		.byte	0x9f
 2053 00e2 00000000 		.4byte	0
 2054 00e6 00000000 		.4byte	0
 2055              	.LLST6:
 2056 00ea 00000000 		.4byte	.LVL22
 2057 00ee 04000000 		.4byte	.LVL23
 2058 00f2 0100     		.2byte	0x1
 2059 00f4 50       		.byte	0x50
 2060 00f5 04000000 		.4byte	.LVL23
 2061 00f9 18000000 		.4byte	.LFE10
 2062 00fd 0400     		.2byte	0x4
 2063 00ff F3       		.byte	0xf3
 2064 0100 01       		.uleb128 0x1
 2065 0101 50       		.byte	0x50
 2066 0102 9F       		.byte	0x9f
 2067 0103 00000000 		.4byte	0
 2068 0107 00000000 		.4byte	0
 2069              	.LLST7:
 2070 010b 00000000 		.4byte	.LVL24
 2071 010f 04000000 		.4byte	.LVL25
 2072 0113 0100     		.2byte	0x1
 2073 0115 50       		.byte	0x50
 2074 0116 04000000 		.4byte	.LVL25
 2075 011a 18000000 		.4byte	.LFE11
 2076 011e 0400     		.2byte	0x4
 2077 0120 F3       		.byte	0xf3
 2078 0121 01       		.uleb128 0x1
 2079 0122 50       		.byte	0x50
 2080 0123 9F       		.byte	0x9f
 2081 0124 00000000 		.4byte	0
 2082 0128 00000000 		.4byte	0
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 54


 2083              	.LLST8:
 2084 012c 00000000 		.4byte	.LVL26
 2085 0130 04000000 		.4byte	.LVL27
 2086 0134 0100     		.2byte	0x1
 2087 0136 50       		.byte	0x50
 2088 0137 04000000 		.4byte	.LVL27
 2089 013b 10000000 		.4byte	.LFE12
 2090 013f 0400     		.2byte	0x4
 2091 0141 F3       		.byte	0xf3
 2092 0142 01       		.uleb128 0x1
 2093 0143 50       		.byte	0x50
 2094 0144 9F       		.byte	0x9f
 2095 0145 00000000 		.4byte	0
 2096 0149 00000000 		.4byte	0
 2097              	.LLST9:
 2098 014d 00000000 		.4byte	.LVL28
 2099 0151 04000000 		.4byte	.LVL29
 2100 0155 0100     		.2byte	0x1
 2101 0157 50       		.byte	0x50
 2102 0158 04000000 		.4byte	.LVL29
 2103 015c 10000000 		.4byte	.LFE13
 2104 0160 0400     		.2byte	0x4
 2105 0162 F3       		.byte	0xf3
 2106 0163 01       		.uleb128 0x1
 2107 0164 50       		.byte	0x50
 2108 0165 9F       		.byte	0x9f
 2109 0166 00000000 		.4byte	0
 2110 016a 00000000 		.4byte	0
 2111              	.LLST10:
 2112 016e 00000000 		.4byte	.LVL30
 2113 0172 04000000 		.4byte	.LVL31
 2114 0176 0100     		.2byte	0x1
 2115 0178 50       		.byte	0x50
 2116 0179 04000000 		.4byte	.LVL31
 2117 017d 0C000000 		.4byte	.LFE14
 2118 0181 0400     		.2byte	0x4
 2119 0183 F3       		.byte	0xf3
 2120 0184 01       		.uleb128 0x1
 2121 0185 50       		.byte	0x50
 2122 0186 9F       		.byte	0x9f
 2123 0187 00000000 		.4byte	0
 2124 018b 00000000 		.4byte	0
 2125              	.LLST11:
 2126 018f 00000000 		.4byte	.LVL32
 2127 0193 04000000 		.4byte	.LVL33
 2128 0197 0100     		.2byte	0x1
 2129 0199 50       		.byte	0x50
 2130 019a 04000000 		.4byte	.LVL33
 2131 019e 0C000000 		.4byte	.LFE15
 2132 01a2 0400     		.2byte	0x4
 2133 01a4 F3       		.byte	0xf3
 2134 01a5 01       		.uleb128 0x1
 2135 01a6 50       		.byte	0x50
 2136 01a7 9F       		.byte	0x9f
 2137 01a8 00000000 		.4byte	0
 2138 01ac 00000000 		.4byte	0
 2139              	.LLST12:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 55


 2140 01b0 00000000 		.4byte	.LVL34
 2141 01b4 28000000 		.4byte	.LVL38
 2142 01b8 0100     		.2byte	0x1
 2143 01ba 50       		.byte	0x50
 2144 01bb 28000000 		.4byte	.LVL38
 2145 01bf 3C000000 		.4byte	.LFE16
 2146 01c3 0400     		.2byte	0x4
 2147 01c5 F3       		.byte	0xf3
 2148 01c6 01       		.uleb128 0x1
 2149 01c7 50       		.byte	0x50
 2150 01c8 9F       		.byte	0x9f
 2151 01c9 00000000 		.4byte	0
 2152 01cd 00000000 		.4byte	0
 2153              	.LLST13:
 2154 01d1 00000000 		.4byte	.LVL34
 2155 01d5 10000000 		.4byte	.LVL35
 2156 01d9 0100     		.2byte	0x1
 2157 01db 51       		.byte	0x51
 2158 01dc 10000000 		.4byte	.LVL35
 2159 01e0 16000000 		.4byte	.LVL36
 2160 01e4 0400     		.2byte	0x4
 2161 01e6 F3       		.byte	0xf3
 2162 01e7 01       		.uleb128 0x1
 2163 01e8 51       		.byte	0x51
 2164 01e9 9F       		.byte	0x9f
 2165 01ea 16000000 		.4byte	.LVL36
 2166 01ee 26000000 		.4byte	.LVL37
 2167 01f2 0100     		.2byte	0x1
 2168 01f4 51       		.byte	0x51
 2169 01f5 00000000 		.4byte	0
 2170 01f9 00000000 		.4byte	0
 2171              	.LLST14:
 2172 01fd 26000000 		.4byte	.LVL37
 2173 0201 2B000000 		.4byte	.LVL39-1
 2174 0205 0900     		.2byte	0x9
 2175 0207 73       		.byte	0x73
 2176 0208 00       		.sleb128 0
 2177 0209 75       		.byte	0x75
 2178 020a 00       		.sleb128 0
 2179 020b 22       		.byte	0x22
 2180 020c 71       		.byte	0x71
 2181 020d 00       		.sleb128 0
 2182 020e 1B       		.byte	0x1b
 2183 020f 9F       		.byte	0x9f
 2184 0210 00000000 		.4byte	0
 2185 0214 00000000 		.4byte	0
 2186              	.LLST15:
 2187 0218 00000000 		.4byte	.LVL40
 2188 021c 0E000000 		.4byte	.LVL42
 2189 0220 0100     		.2byte	0x1
 2190 0222 50       		.byte	0x50
 2191 0223 0E000000 		.4byte	.LVL42
 2192 0227 34000000 		.4byte	.LFE17
 2193 022b 0400     		.2byte	0x4
 2194 022d F3       		.byte	0xf3
 2195 022e 01       		.uleb128 0x1
 2196 022f 50       		.byte	0x50
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 56


 2197 0230 9F       		.byte	0x9f
 2198 0231 00000000 		.4byte	0
 2199 0235 00000000 		.4byte	0
 2200              	.LLST16:
 2201 0239 00000000 		.4byte	.LVL40
 2202 023d 0A000000 		.4byte	.LVL41
 2203 0241 0100     		.2byte	0x1
 2204 0243 51       		.byte	0x51
 2205 0244 0A000000 		.4byte	.LVL41
 2206 0248 18000000 		.4byte	.LVL44
 2207 024c 0100     		.2byte	0x1
 2208 024e 51       		.byte	0x51
 2209 024f 18000000 		.4byte	.LVL44
 2210 0253 1B000000 		.4byte	.LVL45-1
 2211 0257 0100     		.2byte	0x1
 2212 0259 50       		.byte	0x50
 2213 025a 00000000 		.4byte	0
 2214 025e 00000000 		.4byte	0
 2215              	.LLST17:
 2216 0262 10000000 		.4byte	.LVL43
 2217 0266 18000000 		.4byte	.LVL44
 2218 026a 1A00     		.2byte	0x1a
 2219 026c 71       		.byte	0x71
 2220 026d 00       		.sleb128 0
 2221 026e F7       		.byte	0xf7
 2222 026f 41       		.uleb128 0x41
 2223 0270 F7       		.byte	0xf7
 2224 0271 25       		.uleb128 0x25
 2225 0272 0C       		.byte	0xc
 2226 0273 80969800 		.4byte	0x989680
 2227 0277 F7       		.byte	0xf7
 2228 0278 25       		.uleb128 0x25
 2229 0279 1E       		.byte	0x1e
 2230 027a F7       		.byte	0xf7
 2231 027b 2C       		.uleb128 0x2c
 2232 027c 74       		.byte	0x74
 2233 027d 00       		.sleb128 0
 2234 027e F7       		.byte	0xf7
 2235 027f 33       		.uleb128 0x33
 2236 0280 F7       		.byte	0xf7
 2237 0281 2C       		.uleb128 0x2c
 2238 0282 1B       		.byte	0x1b
 2239 0283 F7       		.byte	0xf7
 2240 0284 25       		.uleb128 0x25
 2241 0285 9F       		.byte	0x9f
 2242 0286 18000000 		.4byte	.LVL44
 2243 028a 1B000000 		.4byte	.LVL45-1
 2244 028e 1A00     		.2byte	0x1a
 2245 0290 70       		.byte	0x70
 2246 0291 00       		.sleb128 0
 2247 0292 F7       		.byte	0xf7
 2248 0293 41       		.uleb128 0x41
 2249 0294 F7       		.byte	0xf7
 2250 0295 25       		.uleb128 0x25
 2251 0296 0C       		.byte	0xc
 2252 0297 80969800 		.4byte	0x989680
 2253 029b F7       		.byte	0xf7
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 57


 2254 029c 25       		.uleb128 0x25
 2255 029d 1E       		.byte	0x1e
 2256 029e F7       		.byte	0xf7
 2257 029f 2C       		.uleb128 0x2c
 2258 02a0 74       		.byte	0x74
 2259 02a1 00       		.sleb128 0
 2260 02a2 F7       		.byte	0xf7
 2261 02a3 33       		.uleb128 0x33
 2262 02a4 F7       		.byte	0xf7
 2263 02a5 2C       		.uleb128 0x2c
 2264 02a6 1B       		.byte	0x1b
 2265 02a7 F7       		.byte	0xf7
 2266 02a8 25       		.uleb128 0x25
 2267 02a9 9F       		.byte	0x9f
 2268 02aa 00000000 		.4byte	0
 2269 02ae 00000000 		.4byte	0
 2270              	.LLST18:
 2271 02b2 00000000 		.4byte	.LVL47
 2272 02b6 08000000 		.4byte	.LVL48
 2273 02ba 0100     		.2byte	0x1
 2274 02bc 50       		.byte	0x50
 2275 02bd 08000000 		.4byte	.LVL48
 2276 02c1 3C000000 		.4byte	.LFE18
 2277 02c5 0400     		.2byte	0x4
 2278 02c7 F3       		.byte	0xf3
 2279 02c8 01       		.uleb128 0x1
 2280 02c9 50       		.byte	0x50
 2281 02ca 9F       		.byte	0x9f
 2282 02cb 00000000 		.4byte	0
 2283 02cf 00000000 		.4byte	0
 2284              	.LLST19:
 2285 02d3 00000000 		.4byte	.LVL47
 2286 02d7 0A000000 		.4byte	.LVL49
 2287 02db 0100     		.2byte	0x1
 2288 02dd 51       		.byte	0x51
 2289 02de 0A000000 		.4byte	.LVL49
 2290 02e2 15000000 		.4byte	.LVL51-1
 2291 02e6 0100     		.2byte	0x1
 2292 02e8 51       		.byte	0x51
 2293 02e9 00000000 		.4byte	0
 2294 02ed 00000000 		.4byte	0
 2295              	.LLST20:
 2296 02f1 10000000 		.4byte	.LVL50
 2297 02f5 15000000 		.4byte	.LVL51-1
 2298 02f9 1600     		.2byte	0x16
 2299 02fb 71       		.byte	0x71
 2300 02fc 00       		.sleb128 0
 2301 02fd F7       		.byte	0xf7
 2302 02fe 41       		.uleb128 0x41
 2303 02ff F7       		.byte	0xf7
 2304 0300 3A       		.uleb128 0x3a
 2305 0301 F4       		.byte	0xf4
 2306 0302 3A       		.uleb128 0x3a
 2307 0303 04       		.byte	0x4
 2308 0304 00002041 		.4byte	0x41200000
 2309 0308 1E       		.byte	0x1e
 2310 0309 75       		.byte	0x75
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 58


 2311 030a 00       		.sleb128 0
 2312 030b F7       		.byte	0xf7
 2313 030c 33       		.uleb128 0x33
 2314 030d F7       		.byte	0xf7
 2315 030e 3A       		.uleb128 0x3a
 2316 030f 1B       		.byte	0x1b
 2317 0310 9F       		.byte	0x9f
 2318 0311 00000000 		.4byte	0
 2319 0315 00000000 		.4byte	0
 2320              		.section	.debug_aranges,"",%progbits
 2321 0000 A4000000 		.4byte	0xa4
 2322 0004 0200     		.2byte	0x2
 2323 0006 00000000 		.4byte	.Ldebug_info0
 2324 000a 04       		.byte	0x4
 2325 000b 00       		.byte	0
 2326 000c 0000     		.2byte	0
 2327 000e 0000     		.2byte	0
 2328 0010 00000000 		.4byte	.LFB2
 2329 0014 00010000 		.4byte	.LFE2-.LFB2
 2330 0018 00000000 		.4byte	.LFB3
 2331 001c 2C000000 		.4byte	.LFE3-.LFB3
 2332 0020 00000000 		.4byte	.LFB1
 2333 0024 1C000000 		.4byte	.LFE1-.LFB1
 2334 0028 00000000 		.4byte	.LFB4
 2335 002c 10000000 		.4byte	.LFE4-.LFB4
 2336 0030 00000000 		.4byte	.LFB5
 2337 0034 14000000 		.4byte	.LFE5-.LFB5
 2338 0038 00000000 		.4byte	.LFB6
 2339 003c 14000000 		.4byte	.LFE6-.LFB6
 2340 0040 00000000 		.4byte	.LFB7
 2341 0044 2C000000 		.4byte	.LFE7-.LFB7
 2342 0048 00000000 		.4byte	.LFB8
 2343 004c 18000000 		.4byte	.LFE8-.LFB8
 2344 0050 00000000 		.4byte	.LFB9
 2345 0054 10000000 		.4byte	.LFE9-.LFB9
 2346 0058 00000000 		.4byte	.LFB10
 2347 005c 18000000 		.4byte	.LFE10-.LFB10
 2348 0060 00000000 		.4byte	.LFB11
 2349 0064 18000000 		.4byte	.LFE11-.LFB11
 2350 0068 00000000 		.4byte	.LFB12
 2351 006c 10000000 		.4byte	.LFE12-.LFB12
 2352 0070 00000000 		.4byte	.LFB13
 2353 0074 10000000 		.4byte	.LFE13-.LFB13
 2354 0078 00000000 		.4byte	.LFB14
 2355 007c 0C000000 		.4byte	.LFE14-.LFB14
 2356 0080 00000000 		.4byte	.LFB15
 2357 0084 0C000000 		.4byte	.LFE15-.LFB15
 2358 0088 00000000 		.4byte	.LFB16
 2359 008c 3C000000 		.4byte	.LFE16-.LFB16
 2360 0090 00000000 		.4byte	.LFB17
 2361 0094 34000000 		.4byte	.LFE17-.LFB17
 2362 0098 00000000 		.4byte	.LFB18
 2363 009c 3C000000 		.4byte	.LFE18-.LFB18
 2364 00a0 00000000 		.4byte	0
 2365 00a4 00000000 		.4byte	0
 2366              		.section	.debug_ranges,"",%progbits
 2367              	.Ldebug_ranges0:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 59


 2368 0000 00000000 		.4byte	.LFB2
 2369 0004 00010000 		.4byte	.LFE2
 2370 0008 00000000 		.4byte	.LFB3
 2371 000c 2C000000 		.4byte	.LFE3
 2372 0010 00000000 		.4byte	.LFB1
 2373 0014 1C000000 		.4byte	.LFE1
 2374 0018 00000000 		.4byte	.LFB4
 2375 001c 10000000 		.4byte	.LFE4
 2376 0020 00000000 		.4byte	.LFB5
 2377 0024 14000000 		.4byte	.LFE5
 2378 0028 00000000 		.4byte	.LFB6
 2379 002c 14000000 		.4byte	.LFE6
 2380 0030 00000000 		.4byte	.LFB7
 2381 0034 2C000000 		.4byte	.LFE7
 2382 0038 00000000 		.4byte	.LFB8
 2383 003c 18000000 		.4byte	.LFE8
 2384 0040 00000000 		.4byte	.LFB9
 2385 0044 10000000 		.4byte	.LFE9
 2386 0048 00000000 		.4byte	.LFB10
 2387 004c 18000000 		.4byte	.LFE10
 2388 0050 00000000 		.4byte	.LFB11
 2389 0054 18000000 		.4byte	.LFE11
 2390 0058 00000000 		.4byte	.LFB12
 2391 005c 10000000 		.4byte	.LFE12
 2392 0060 00000000 		.4byte	.LFB13
 2393 0064 10000000 		.4byte	.LFE13
 2394 0068 00000000 		.4byte	.LFB14
 2395 006c 0C000000 		.4byte	.LFE14
 2396 0070 00000000 		.4byte	.LFB15
 2397 0074 0C000000 		.4byte	.LFE15
 2398 0078 00000000 		.4byte	.LFB16
 2399 007c 3C000000 		.4byte	.LFE16
 2400 0080 00000000 		.4byte	.LFB17
 2401 0084 34000000 		.4byte	.LFE17
 2402 0088 00000000 		.4byte	.LFB18
 2403 008c 3C000000 		.4byte	.LFE18
 2404 0090 00000000 		.4byte	0
 2405 0094 00000000 		.4byte	0
 2406              		.section	.debug_line,"",%progbits
 2407              	.Ldebug_line0:
 2408 0000 04030000 		.section	.debug_str,"MS",%progbits,1
 2408      02005100 
 2408      00000201 
 2408      FB0E0D00 
 2408      01010101 
 2409              	.LASF45:
 2410 0000 4144435F 		.ascii	"ADC_GLV_V_SetOffset\000"
 2410      474C565F 
 2410      565F5365 
 2410      744F6666 
 2410      73657400 
 2411              	.LASF11:
 2412 0014 75696E74 		.ascii	"uint16\000"
 2412      313600
 2413              	.LASF48:
 2414 001b 61646347 		.ascii	"adcGain\000"
 2414      61696E00 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 60


 2415              	.LASF24:
 2416 0023 636F756E 		.ascii	"counts\000"
 2416      747300
 2417              	.LASF65:
 2418 002a 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Desktop\\Dashboard-Firmware-FE10\\Da"
 2418      635C486F 
 2418      6D655C44 
 2418      65736B74 
 2418      6F705C44 
 2419 0057 7368626F 		.ascii	"shboard.cydsn\000"
 2419      6172642E 
 2419      63796473 
 2419      6E00
 2420              	.LASF30:
 2421 0065 4144435F 		.ascii	"ADC_GLV_V_StopConvert\000"
 2421      474C565F 
 2421      565F5374 
 2421      6F70436F 
 2421      6E766572 
 2422              	.LASF66:
 2423 007b 4144435F 		.ascii	"ADC_GLV_V_Enable\000"
 2423      474C565F 
 2423      565F456E 
 2423      61626C65 
 2423      00
 2424              	.LASF64:
 2425 008c 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_GLV_V.c\000"
 2425      72617465 
 2425      645F536F 
 2425      75726365 
 2425      5C50536F 
 2426              	.LASF0:
 2427 00af 6C6F6E67 		.ascii	"long long unsigned int\000"
 2427      206C6F6E 
 2427      6720756E 
 2427      7369676E 
 2427      65642069 
 2428              	.LASF29:
 2429 00c6 4144435F 		.ascii	"ADC_GLV_V_StartConvert\000"
 2429      474C565F 
 2429      565F5374 
 2429      61727443 
 2429      6F6E7665 
 2430              	.LASF56:
 2431 00dd 4144435F 		.ascii	"ADC_GLV_V_channelsConfig\000"
 2431      474C565F 
 2431      565F6368 
 2431      616E6E65 
 2431      6C73436F 
 2432              	.LASF25:
 2433 00f6 4144435F 		.ascii	"ADC_GLV_V_InputsPlacement\000"
 2433      474C565F 
 2433      565F496E 
 2433      70757473 
 2433      506C6163 
 2434              	.LASF1:
 2435 0110 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 61


 2435      206C6F6E 
 2435      6720696E 
 2435      7400
 2436              	.LASF4:
 2437 011e 7369676E 		.ascii	"signed char\000"
 2437      65642063 
 2437      68617200 
 2438              	.LASF44:
 2439 012a 4144435F 		.ascii	"ADC_GLV_V_SetSatMask\000"
 2439      474C565F 
 2439      565F5365 
 2439      74536174 
 2439      4D61736B 
 2440              	.LASF14:
 2441 013f 696E7433 		.ascii	"int32\000"
 2441      3200
 2442              	.LASF41:
 2443 0145 4144435F 		.ascii	"ADC_GLV_V_SetHighLimit\000"
 2443      474C565F 
 2443      565F5365 
 2443      74486967 
 2443      684C696D 
 2444              	.LASF7:
 2445 015c 6C6F6E67 		.ascii	"long int\000"
 2445      20696E74 
 2445      00
 2446              	.LASF26:
 2447 0165 4144435F 		.ascii	"ADC_GLV_V_Init\000"
 2447      474C565F 
 2447      565F496E 
 2447      697400
 2448              	.LASF10:
 2449 0174 75696E74 		.ascii	"uint8\000"
 2449      3800
 2450              	.LASF62:
 2451 017a 43794465 		.ascii	"CyDelayUs\000"
 2451      6C617955 
 2451      7300
 2452              	.LASF16:
 2453 0184 646F7562 		.ascii	"double\000"
 2453      6C6500
 2454              	.LASF12:
 2455 018b 75696E74 		.ascii	"uint32\000"
 2455      333200
 2456              	.LASF27:
 2457 0192 4144435F 		.ascii	"ADC_GLV_V_Start\000"
 2457      474C565F 
 2457      565F5374 
 2457      61727400 
 2458              	.LASF38:
 2459 01a2 6D61736B 		.ascii	"mask\000"
 2459      00
 2460              	.LASF39:
 2461 01a7 4144435F 		.ascii	"ADC_GLV_V_SetLowLimit\000"
 2461      474C565F 
 2461      565F5365 
 2461      744C6F77 
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 62


 2461      4C696D69 
 2462              	.LASF34:
 2463 01bd 7265744D 		.ascii	"retMode\000"
 2463      6F646500 
 2464              	.LASF9:
 2465 01c5 756E7369 		.ascii	"unsigned int\000"
 2465      676E6564 
 2465      20696E74 
 2465      00
 2466              	.LASF53:
 2467 01d2 75566F6C 		.ascii	"uVolts\000"
 2467      747300
 2468              	.LASF8:
 2469 01d9 6C6F6E67 		.ascii	"long unsigned int\000"
 2469      20756E73 
 2469      69676E65 
 2469      6420696E 
 2469      7400
 2470              	.LASF55:
 2471 01eb 766F6C74 		.ascii	"volts\000"
 2471      7300
 2472              	.LASF23:
 2473 01f1 746D7052 		.ascii	"tmpRegVal\000"
 2473      65675661 
 2473      6C00
 2474              	.LASF6:
 2475 01fb 73686F72 		.ascii	"short unsigned int\000"
 2475      7420756E 
 2475      7369676E 
 2475      65642069 
 2475      6E7400
 2476              	.LASF61:
 2477 020e 4379496E 		.ascii	"CyIntSetVector\000"
 2477      74536574 
 2477      56656374 
 2477      6F7200
 2478              	.LASF51:
 2479 021d 6D566F6C 		.ascii	"mVolts\000"
 2479      747300
 2480              	.LASF57:
 2481 0224 4144435F 		.ascii	"ADC_GLV_V_initVar\000"
 2481      474C565F 
 2481      565F696E 
 2481      69745661 
 2481      7200
 2482              	.LASF19:
 2483 0236 72656733 		.ascii	"reg32\000"
 2483      3200
 2484              	.LASF15:
 2485 023c 666C6F61 		.ascii	"float32\000"
 2485      74333200 
 2486              	.LASF21:
 2487 0244 73697A65 		.ascii	"sizetype\000"
 2487      74797065 
 2487      00
 2488              	.LASF40:
 2489 024d 6C6F774C 		.ascii	"lowLimit\000"
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 63


 2489      696D6974 
 2489      00
 2490              	.LASF20:
 2491 0256 6C6F6E67 		.ascii	"long double\000"
 2491      20646F75 
 2491      626C6500 
 2492              	.LASF52:
 2493 0262 4144435F 		.ascii	"ADC_GLV_V_CountsTo_uVolts\000"
 2493      474C565F 
 2493      565F436F 
 2493      756E7473 
 2493      546F5F75 
 2494              	.LASF63:
 2495 027c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2495      43313120 
 2495      352E342E 
 2495      31203230 
 2495      31363036 
 2496 02af 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2496      20726576 
 2496      6973696F 
 2496      6E203233 
 2496      37373135 
 2497 02e2 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2497      66756E63 
 2497      74696F6E 
 2497      2D736563 
 2497      74696F6E 
 2498              	.LASF17:
 2499 030a 696E7436 		.ascii	"int64\000"
 2499      3400
 2500              	.LASF60:
 2501 0310 4379496E 		.ascii	"CyIntSetPriority\000"
 2501      74536574 
 2501      5072696F 
 2501      72697479 
 2501      00
 2502              	.LASF58:
 2503 0321 4144435F 		.ascii	"ADC_GLV_V_offset\000"
 2503      474C565F 
 2503      565F6F66 
 2503      66736574 
 2503      00
 2504              	.LASF2:
 2505 0332 666C6F61 		.ascii	"float\000"
 2505      7400
 2506              	.LASF42:
 2507 0338 68696768 		.ascii	"highLimit\000"
 2507      4C696D69 
 2507      7400
 2508              	.LASF49:
 2509 0342 4144435F 		.ascii	"ADC_GLV_V_CountsTo_mVolts\000"
 2509      474C565F 
 2509      565F436F 
 2509      756E7473 
 2509      546F5F6D 
 2510              	.LASF5:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 64


 2511 035c 756E7369 		.ascii	"unsigned char\000"
 2511      676E6564 
 2511      20636861 
 2511      7200
 2512              	.LASF33:
 2513 036a 4144435F 		.ascii	"ADC_GLV_V_GetResult16\000"
 2513      474C565F 
 2513      565F4765 
 2513      74526573 
 2513      756C7431 
 2514              	.LASF3:
 2515 0380 73686F72 		.ascii	"short int\000"
 2515      7420696E 
 2515      7400
 2516              	.LASF22:
 2517 038a 63684E75 		.ascii	"chNum\000"
 2517      6D00
 2518              	.LASF35:
 2519 0390 6368616E 		.ascii	"chan\000"
 2519      00
 2520              	.LASF47:
 2521 0395 4144435F 		.ascii	"ADC_GLV_V_SetGain\000"
 2521      474C565F 
 2521      565F5365 
 2521      74476169 
 2521      6E00
 2522              	.LASF18:
 2523 03a7 63686172 		.ascii	"char\000"
 2523      00
 2524              	.LASF54:
 2525 03ac 4144435F 		.ascii	"ADC_GLV_V_CountsTo_Volts\000"
 2525      474C565F 
 2525      565F436F 
 2525      756E7473 
 2525      546F5F56 
 2526              	.LASF46:
 2527 03c5 6F666673 		.ascii	"offset\000"
 2527      657400
 2528              	.LASF28:
 2529 03cc 4144435F 		.ascii	"ADC_GLV_V_Stop\000"
 2529      474C565F 
 2529      565F5374 
 2529      6F7000
 2530              	.LASF50:
 2531 03db 61646343 		.ascii	"adcCounts\000"
 2531      6F756E74 
 2531      7300
 2532              	.LASF32:
 2533 03e5 4144435F 		.ascii	"ADC_GLV_V_IsEndConversion\000"
 2533      474C565F 
 2533      565F4973 
 2533      456E6443 
 2533      6F6E7665 
 2534              	.LASF31:
 2535 03ff 73746174 		.ascii	"status\000"
 2535      757300
 2536              	.LASF59:
ARM GAS  C:\Users\RYANCA~1\AppData\Local\Temp\ccOdl9Rp.s 			page 65


 2537 0406 4144435F 		.ascii	"ADC_GLV_V_countsPer10Volt\000"
 2537      474C565F 
 2537      565F636F 
 2537      756E7473 
 2537      50657231 
 2538              	.LASF13:
 2539 0420 696E7431 		.ascii	"int16\000"
 2539      3600
 2540              	.LASF37:
 2541 0426 4144435F 		.ascii	"ADC_GLV_V_SetChanMask\000"
 2541      474C565F 
 2541      565F5365 
 2541      74436861 
 2541      6E4D6173 
 2542              	.LASF36:
 2543 043c 72657375 		.ascii	"result\000"
 2543      6C7400
 2544              	.LASF43:
 2545 0443 4144435F 		.ascii	"ADC_GLV_V_SetLimitMask\000"
 2545      474C565F 
 2545      565F5365 
 2545      744C696D 
 2545      69744D61 
 2546              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
